//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MangoModel", "FK_APPRAISAL_HEADER_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.APPRAISAL_HEADER), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF3", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.APPRAISAL_HEADER), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF4", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.APPRAISAL_HEADER), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF5", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.APPRAISAL_HEADER), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_APPRAISAL_HEADER_STATUS", "STATUS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STATUS), "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.APPRAISAL_HEADER), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.APPRAISAL_HEADER), "COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mango.Data.COMMENT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_PACE_APPRAISAL_HEADER", "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.APPRAISAL_HEADER), "PACE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.PACE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_INPS_APPRAISAL_HEADER", "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.APPRAISAL_HEADER), "STAFF_INPS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_INPS), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_METRIC_APPRAISAL_HEADER", "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.APPRAISAL_HEADER), "STAFF_METRIC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_METRIC), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.APPRAISAL_HEADER), "STAFF_POTENTIAL_ASSESSMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_POTENTIAL_ASSESSMENT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMMENT_OPTION", "OPTION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.OPTION), "COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.COMMENT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMMENT_RECOMMENDATION", "RECOMMENDATION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.RECOMMENDATION), "COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.COMMENT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY), "COMPANY_DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.COMPANY_DEPARTMENT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY), "COMPANY_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.COMPANY_JOB_ROLE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_COMPANY", "COMPANY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY), "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_DEPARTMENT", "DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.DEPARTMENT), "COMPANY_DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.COMPANY_DEPARTMENT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY_DEPARTMENT), "COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.COMPANY_DEPARTMENT_JOB_ROLE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.JOB_ROLE), "COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.COMPANY_DEPARTMENT_JOB_ROLE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY_DEPARTMENT_JOB_ROLE), "JOB_ROLE_HOD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.JOB_ROLE_HOD), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY_DEPARTMENT_JOB_ROLE), "JOB_ROLE_HOD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.JOB_ROLE_HOD), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY_DEPARTMENT_JOB_ROLE), "JOB_ROLE_SUPERVISOR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.JOB_ROLE_SUPERVISOR), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY_DEPARTMENT_JOB_ROLE), "JOB_ROLE_SUPERVISOR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.JOB_ROLE_SUPERVISOR), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY_DEPARTMENT_JOB_ROLE), "METRIC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.METRIC), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.COMPANY_DEPARTMENT_JOB_ROLE), "STAFF_COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_COMPANY_DEPARTMENT_JOB_ROLE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_COMPANY_JOB_ROLE_JOB_ROLE", "JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.JOB_ROLE), "COMPANY_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.COMPANY_JOB_ROLE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_CURRENT_PACE_AREA_PACE_AREA", "PACE_AREA", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PACE_AREA), "CURRENT_PACE_AREA", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mango.Data.CURRENT_PACE_AREA), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_CURRENT_PERIOD_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "CURRENT_PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mango.Data.CURRENT_PERIOD), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_DEPARTMENT", "DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mango.Data.DEPARTMENT), "METRIC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.METRIC), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_NPS_DEPARTMENT", "DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mango.Data.DEPARTMENT), "INPS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_INPS_INPS_TYPE", "INPS_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.INPS_TYPE), "INPS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_NPS_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.METRIC_PERSPECTIVE), "INPS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_NPS_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "INPS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_NPS_STAFF", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "INPS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_INPS_INPS", "INPS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.INPS), "STAFF_INPS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_INPS), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_INPS_RATING_INPS_TYPE", "INPS_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.INPS_TYPE), "INPS_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS_RATING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_NPS_RATING_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "INPS_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS_RATING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_NPS_RATING_RATING", "RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.RATING), "INPS_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS_RATING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_NPS_RATING_RATING_TYPE", "RATING_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.RATING_TYPE), "INPS_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.INPS_RATING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_JOB_ROLE_HOD_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "JOB_ROLE_HOD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.JOB_ROLE_HOD), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.JOB_ROLE_LEVEL), "POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.JOB_ROLE_LEVEL), "STAFF_JOB_ROLE_LEVEL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_JOB_ROLE_LEVEL), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "JOB_ROLE_SUPERVISOR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.JOB_ROLE_SUPERVISOR), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_LOCATION_LOCATION", "LOCATION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.LOCATION), "STAFF_LOCATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_LOCATION), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.METRIC_PERSPECTIVE), "METRIC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.METRIC), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "METRIC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.METRIC), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_RATING_METRIC", "METRIC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.METRIC), "METRIC_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.METRIC_RATING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_METRIC_METRIC", "METRIC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.METRIC), "STAFF_METRIC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_METRIC), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_RATING_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mango.Data.PERIOD), "METRIC_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.METRIC_RATING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_RATING_RATING", "RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.RATING), "METRIC_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.METRIC_RATING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_METRIC_RATING_RATING_TYPE", "RATING_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.RATING_TYPE), "METRIC_RATING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.METRIC_RATING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_PACE_PACE_AREA", "PACE_AREA", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PACE_AREA), "PACE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.PACE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_PERIOD_PERIOD_TYPE", "PERIOD_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD_TYPE), "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.PERIOD), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_PERIOD_STATUS", "STATUS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STATUS), "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.PERIOD), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "POTENTIAL_ASSESSMENT_PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.POTENTIAL_ASSESSMENT_PERIOD), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "STAFF_COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_COMPANY_DEPARTMENT_JOB_ROLE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "STAFF_JOB_ROLE_LEVEL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_JOB_ROLE_LEVEL), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_LEARNING_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "STAFF_LEARNING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_LEARNING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_LOCATION_PERIOD", "PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.PERIOD), "STAFF_LOCATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_LOCATION), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.POTENTIAL_ASSESSMENT), "POTENTIAL_ASSESSMENT_PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.POTENTIAL_ASSESSMENT_PERIOD), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.POTENTIAL_ASSESSMENT_PERIOD), "STAFF_POTENTIAL_ASSESSMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_POTENTIAL_ASSESSMENT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_ROLE_RIGHT_RIGHT", "RIGHT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.RIGHT), "ROLE_RIGHT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.ROLE_RIGHT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_ROLE_RIGHT_ROLE", "ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.ROLE), "ROLE_RIGHT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.ROLE_RIGHT), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_ROLE", "ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.ROLE), "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "STAFF_COMPANY_DEPARTMENT_JOB_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_COMPANY_DEPARTMENT_JOB_ROLE), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "STAFF_JOB_ROLE_LEVEL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_JOB_ROLE_LEVEL), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_LEARNING_STAFF", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "STAFF_LEARNING", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_LEARNING), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_LOCATION_STAFF", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "STAFF_LOCATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mango.Data.STAFF_LOCATION), true)]
[assembly: EdmRelationshipAttribute("MangoModel", "FK_STAFF_LOGIN_STAFF", "STAFF", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mango.Data.STAFF), "STAFF_LOGIN", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mango.Data.STAFF_LOGIN), true)]

#endregion

namespace Mango.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MangoEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MangoEntities object using the connection string found in the 'MangoEntities' section of the application configuration file.
        /// </summary>
        public MangoEntities() : base("name=MangoEntities", "MangoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MangoEntities object.
        /// </summary>
        public MangoEntities(string connectionString) : base(connectionString, "MangoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MangoEntities object.
        /// </summary>
        public MangoEntities(EntityConnection connection) : base(connection, "MangoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APPRAISAL_HEADER> APPRAISAL_HEADER
        {
            get
            {
                if ((_APPRAISAL_HEADER == null))
                {
                    _APPRAISAL_HEADER = base.CreateObjectSet<APPRAISAL_HEADER>("APPRAISAL_HEADER");
                }
                return _APPRAISAL_HEADER;
            }
        }
        private ObjectSet<APPRAISAL_HEADER> _APPRAISAL_HEADER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APPRAISAL_TYPE> APPRAISAL_TYPE
        {
            get
            {
                if ((_APPRAISAL_TYPE == null))
                {
                    _APPRAISAL_TYPE = base.CreateObjectSet<APPRAISAL_TYPE>("APPRAISAL_TYPE");
                }
                return _APPRAISAL_TYPE;
            }
        }
        private ObjectSet<APPRAISAL_TYPE> _APPRAISAL_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMMENT> COMMENT
        {
            get
            {
                if ((_COMMENT == null))
                {
                    _COMMENT = base.CreateObjectSet<COMMENT>("COMMENT");
                }
                return _COMMENT;
            }
        }
        private ObjectSet<COMMENT> _COMMENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMPANY> COMPANY
        {
            get
            {
                if ((_COMPANY == null))
                {
                    _COMPANY = base.CreateObjectSet<COMPANY>("COMPANY");
                }
                return _COMPANY;
            }
        }
        private ObjectSet<COMPANY> _COMPANY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMPANY_DEPARTMENT> COMPANY_DEPARTMENT
        {
            get
            {
                if ((_COMPANY_DEPARTMENT == null))
                {
                    _COMPANY_DEPARTMENT = base.CreateObjectSet<COMPANY_DEPARTMENT>("COMPANY_DEPARTMENT");
                }
                return _COMPANY_DEPARTMENT;
            }
        }
        private ObjectSet<COMPANY_DEPARTMENT> _COMPANY_DEPARTMENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                if ((_COMPANY_DEPARTMENT_JOB_ROLE == null))
                {
                    _COMPANY_DEPARTMENT_JOB_ROLE = base.CreateObjectSet<COMPANY_DEPARTMENT_JOB_ROLE>("COMPANY_DEPARTMENT_JOB_ROLE");
                }
                return _COMPANY_DEPARTMENT_JOB_ROLE;
            }
        }
        private ObjectSet<COMPANY_DEPARTMENT_JOB_ROLE> _COMPANY_DEPARTMENT_JOB_ROLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMPANY_JOB_ROLE> COMPANY_JOB_ROLE
        {
            get
            {
                if ((_COMPANY_JOB_ROLE == null))
                {
                    _COMPANY_JOB_ROLE = base.CreateObjectSet<COMPANY_JOB_ROLE>("COMPANY_JOB_ROLE");
                }
                return _COMPANY_JOB_ROLE;
            }
        }
        private ObjectSet<COMPANY_JOB_ROLE> _COMPANY_JOB_ROLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CURRENT_PACE_AREA> CURRENT_PACE_AREA
        {
            get
            {
                if ((_CURRENT_PACE_AREA == null))
                {
                    _CURRENT_PACE_AREA = base.CreateObjectSet<CURRENT_PACE_AREA>("CURRENT_PACE_AREA");
                }
                return _CURRENT_PACE_AREA;
            }
        }
        private ObjectSet<CURRENT_PACE_AREA> _CURRENT_PACE_AREA;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CURRENT_PERIOD> CURRENT_PERIOD
        {
            get
            {
                if ((_CURRENT_PERIOD == null))
                {
                    _CURRENT_PERIOD = base.CreateObjectSet<CURRENT_PERIOD>("CURRENT_PERIOD");
                }
                return _CURRENT_PERIOD;
            }
        }
        private ObjectSet<CURRENT_PERIOD> _CURRENT_PERIOD;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DEPARTMENT> DEPARTMENT
        {
            get
            {
                if ((_DEPARTMENT == null))
                {
                    _DEPARTMENT = base.CreateObjectSet<DEPARTMENT>("DEPARTMENT");
                }
                return _DEPARTMENT;
            }
        }
        private ObjectSet<DEPARTMENT> _DEPARTMENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GRADE_SCALE> GRADE_SCALE
        {
            get
            {
                if ((_GRADE_SCALE == null))
                {
                    _GRADE_SCALE = base.CreateObjectSet<GRADE_SCALE>("GRADE_SCALE");
                }
                return _GRADE_SCALE;
            }
        }
        private ObjectSet<GRADE_SCALE> _GRADE_SCALE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INPS> INPS
        {
            get
            {
                if ((_INPS == null))
                {
                    _INPS = base.CreateObjectSet<INPS>("INPS");
                }
                return _INPS;
            }
        }
        private ObjectSet<INPS> _INPS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INPS_RATING> INPS_RATING
        {
            get
            {
                if ((_INPS_RATING == null))
                {
                    _INPS_RATING = base.CreateObjectSet<INPS_RATING>("INPS_RATING");
                }
                return _INPS_RATING;
            }
        }
        private ObjectSet<INPS_RATING> _INPS_RATING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INPS_TYPE> INPS_TYPE
        {
            get
            {
                if ((_INPS_TYPE == null))
                {
                    _INPS_TYPE = base.CreateObjectSet<INPS_TYPE>("INPS_TYPE");
                }
                return _INPS_TYPE;
            }
        }
        private ObjectSet<INPS_TYPE> _INPS_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JOB_ROLE> JOB_ROLE
        {
            get
            {
                if ((_JOB_ROLE == null))
                {
                    _JOB_ROLE = base.CreateObjectSet<JOB_ROLE>("JOB_ROLE");
                }
                return _JOB_ROLE;
            }
        }
        private ObjectSet<JOB_ROLE> _JOB_ROLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JOB_ROLE_HOD> JOB_ROLE_HOD
        {
            get
            {
                if ((_JOB_ROLE_HOD == null))
                {
                    _JOB_ROLE_HOD = base.CreateObjectSet<JOB_ROLE_HOD>("JOB_ROLE_HOD");
                }
                return _JOB_ROLE_HOD;
            }
        }
        private ObjectSet<JOB_ROLE_HOD> _JOB_ROLE_HOD;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JOB_ROLE_LEVEL> JOB_ROLE_LEVEL
        {
            get
            {
                if ((_JOB_ROLE_LEVEL == null))
                {
                    _JOB_ROLE_LEVEL = base.CreateObjectSet<JOB_ROLE_LEVEL>("JOB_ROLE_LEVEL");
                }
                return _JOB_ROLE_LEVEL;
            }
        }
        private ObjectSet<JOB_ROLE_LEVEL> _JOB_ROLE_LEVEL;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JOB_ROLE_SUPERVISOR> JOB_ROLE_SUPERVISOR
        {
            get
            {
                if ((_JOB_ROLE_SUPERVISOR == null))
                {
                    _JOB_ROLE_SUPERVISOR = base.CreateObjectSet<JOB_ROLE_SUPERVISOR>("JOB_ROLE_SUPERVISOR");
                }
                return _JOB_ROLE_SUPERVISOR;
            }
        }
        private ObjectSet<JOB_ROLE_SUPERVISOR> _JOB_ROLE_SUPERVISOR;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LOCATION> LOCATION
        {
            get
            {
                if ((_LOCATION == null))
                {
                    _LOCATION = base.CreateObjectSet<LOCATION>("LOCATION");
                }
                return _LOCATION;
            }
        }
        private ObjectSet<LOCATION> _LOCATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<METRIC> METRIC
        {
            get
            {
                if ((_METRIC == null))
                {
                    _METRIC = base.CreateObjectSet<METRIC>("METRIC");
                }
                return _METRIC;
            }
        }
        private ObjectSet<METRIC> _METRIC;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<METRIC_PERSPECTIVE> METRIC_PERSPECTIVE
        {
            get
            {
                if ((_METRIC_PERSPECTIVE == null))
                {
                    _METRIC_PERSPECTIVE = base.CreateObjectSet<METRIC_PERSPECTIVE>("METRIC_PERSPECTIVE");
                }
                return _METRIC_PERSPECTIVE;
            }
        }
        private ObjectSet<METRIC_PERSPECTIVE> _METRIC_PERSPECTIVE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<METRIC_RATING> METRIC_RATING
        {
            get
            {
                if ((_METRIC_RATING == null))
                {
                    _METRIC_RATING = base.CreateObjectSet<METRIC_RATING>("METRIC_RATING");
                }
                return _METRIC_RATING;
            }
        }
        private ObjectSet<METRIC_RATING> _METRIC_RATING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<METRIC_RATING_> METRIC_RATING_
        {
            get
            {
                if ((_METRIC_RATING_ == null))
                {
                    _METRIC_RATING_ = base.CreateObjectSet<METRIC_RATING_>("METRIC_RATING_");
                }
                return _METRIC_RATING_;
            }
        }
        private ObjectSet<METRIC_RATING_> _METRIC_RATING_;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<METRIC_RATING_BACKUP> METRIC_RATING_BACKUP
        {
            get
            {
                if ((_METRIC_RATING_BACKUP == null))
                {
                    _METRIC_RATING_BACKUP = base.CreateObjectSet<METRIC_RATING_BACKUP>("METRIC_RATING_BACKUP");
                }
                return _METRIC_RATING_BACKUP;
            }
        }
        private ObjectSet<METRIC_RATING_BACKUP> _METRIC_RATING_BACKUP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OPTION> OPTION
        {
            get
            {
                if ((_OPTION == null))
                {
                    _OPTION = base.CreateObjectSet<OPTION>("OPTION");
                }
                return _OPTION;
            }
        }
        private ObjectSet<OPTION> _OPTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PACE> PACE
        {
            get
            {
                if ((_PACE == null))
                {
                    _PACE = base.CreateObjectSet<PACE>("PACE");
                }
                return _PACE;
            }
        }
        private ObjectSet<PACE> _PACE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PACE_AREA> PACE_AREA
        {
            get
            {
                if ((_PACE_AREA == null))
                {
                    _PACE_AREA = base.CreateObjectSet<PACE_AREA>("PACE_AREA");
                }
                return _PACE_AREA;
            }
        }
        private ObjectSet<PACE_AREA> _PACE_AREA;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PACE_RATING> PACE_RATING
        {
            get
            {
                if ((_PACE_RATING == null))
                {
                    _PACE_RATING = base.CreateObjectSet<PACE_RATING>("PACE_RATING");
                }
                return _PACE_RATING;
            }
        }
        private ObjectSet<PACE_RATING> _PACE_RATING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PERIOD> PERIOD
        {
            get
            {
                if ((_PERIOD == null))
                {
                    _PERIOD = base.CreateObjectSet<PERIOD>("PERIOD");
                }
                return _PERIOD;
            }
        }
        private ObjectSet<PERIOD> _PERIOD;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PERIOD_TYPE> PERIOD_TYPE
        {
            get
            {
                if ((_PERIOD_TYPE == null))
                {
                    _PERIOD_TYPE = base.CreateObjectSet<PERIOD_TYPE>("PERIOD_TYPE");
                }
                return _PERIOD_TYPE;
            }
        }
        private ObjectSet<PERIOD_TYPE> _PERIOD_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<POTENTIAL_ASSESSMENT> POTENTIAL_ASSESSMENT
        {
            get
            {
                if ((_POTENTIAL_ASSESSMENT == null))
                {
                    _POTENTIAL_ASSESSMENT = base.CreateObjectSet<POTENTIAL_ASSESSMENT>("POTENTIAL_ASSESSMENT");
                }
                return _POTENTIAL_ASSESSMENT;
            }
        }
        private ObjectSet<POTENTIAL_ASSESSMENT> _POTENTIAL_ASSESSMENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL> POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL
        {
            get
            {
                if ((_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL == null))
                {
                    _POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL = base.CreateObjectSet<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL>("POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL");
                }
                return _POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL;
            }
        }
        private ObjectSet<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL> _POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<POTENTIAL_ASSESSMENT_PERIOD> POTENTIAL_ASSESSMENT_PERIOD
        {
            get
            {
                if ((_POTENTIAL_ASSESSMENT_PERIOD == null))
                {
                    _POTENTIAL_ASSESSMENT_PERIOD = base.CreateObjectSet<POTENTIAL_ASSESSMENT_PERIOD>("POTENTIAL_ASSESSMENT_PERIOD");
                }
                return _POTENTIAL_ASSESSMENT_PERIOD;
            }
        }
        private ObjectSet<POTENTIAL_ASSESSMENT_PERIOD> _POTENTIAL_ASSESSMENT_PERIOD;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RATING> RATING
        {
            get
            {
                if ((_RATING == null))
                {
                    _RATING = base.CreateObjectSet<RATING>("RATING");
                }
                return _RATING;
            }
        }
        private ObjectSet<RATING> _RATING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RATING_TYPE> RATING_TYPE
        {
            get
            {
                if ((_RATING_TYPE == null))
                {
                    _RATING_TYPE = base.CreateObjectSet<RATING_TYPE>("RATING_TYPE");
                }
                return _RATING_TYPE;
            }
        }
        private ObjectSet<RATING_TYPE> _RATING_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RECOMMENDATION> RECOMMENDATION
        {
            get
            {
                if ((_RECOMMENDATION == null))
                {
                    _RECOMMENDATION = base.CreateObjectSet<RECOMMENDATION>("RECOMMENDATION");
                }
                return _RECOMMENDATION;
            }
        }
        private ObjectSet<RECOMMENDATION> _RECOMMENDATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RIGHT> RIGHT
        {
            get
            {
                if ((_RIGHT == null))
                {
                    _RIGHT = base.CreateObjectSet<RIGHT>("RIGHT");
                }
                return _RIGHT;
            }
        }
        private ObjectSet<RIGHT> _RIGHT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROLE> ROLE
        {
            get
            {
                if ((_ROLE == null))
                {
                    _ROLE = base.CreateObjectSet<ROLE>("ROLE");
                }
                return _ROLE;
            }
        }
        private ObjectSet<ROLE> _ROLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROLE_RIGHT> ROLE_RIGHT
        {
            get
            {
                if ((_ROLE_RIGHT == null))
                {
                    _ROLE_RIGHT = base.CreateObjectSet<ROLE_RIGHT>("ROLE_RIGHT");
                }
                return _ROLE_RIGHT;
            }
        }
        private ObjectSet<ROLE_RIGHT> _ROLE_RIGHT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF> STAFF
        {
            get
            {
                if ((_STAFF == null))
                {
                    _STAFF = base.CreateObjectSet<STAFF>("STAFF");
                }
                return _STAFF;
            }
        }
        private ObjectSet<STAFF> _STAFF;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF_COMPANY_DEPARTMENT_JOB_ROLE> STAFF_COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                if ((_STAFF_COMPANY_DEPARTMENT_JOB_ROLE == null))
                {
                    _STAFF_COMPANY_DEPARTMENT_JOB_ROLE = base.CreateObjectSet<STAFF_COMPANY_DEPARTMENT_JOB_ROLE>("STAFF_COMPANY_DEPARTMENT_JOB_ROLE");
                }
                return _STAFF_COMPANY_DEPARTMENT_JOB_ROLE;
            }
        }
        private ObjectSet<STAFF_COMPANY_DEPARTMENT_JOB_ROLE> _STAFF_COMPANY_DEPARTMENT_JOB_ROLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF_INPS> STAFF_INPS
        {
            get
            {
                if ((_STAFF_INPS == null))
                {
                    _STAFF_INPS = base.CreateObjectSet<STAFF_INPS>("STAFF_INPS");
                }
                return _STAFF_INPS;
            }
        }
        private ObjectSet<STAFF_INPS> _STAFF_INPS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF_JOB_ROLE_LEVEL> STAFF_JOB_ROLE_LEVEL
        {
            get
            {
                if ((_STAFF_JOB_ROLE_LEVEL == null))
                {
                    _STAFF_JOB_ROLE_LEVEL = base.CreateObjectSet<STAFF_JOB_ROLE_LEVEL>("STAFF_JOB_ROLE_LEVEL");
                }
                return _STAFF_JOB_ROLE_LEVEL;
            }
        }
        private ObjectSet<STAFF_JOB_ROLE_LEVEL> _STAFF_JOB_ROLE_LEVEL;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF_LEARNING> STAFF_LEARNING
        {
            get
            {
                if ((_STAFF_LEARNING == null))
                {
                    _STAFF_LEARNING = base.CreateObjectSet<STAFF_LEARNING>("STAFF_LEARNING");
                }
                return _STAFF_LEARNING;
            }
        }
        private ObjectSet<STAFF_LEARNING> _STAFF_LEARNING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF_LOCATION> STAFF_LOCATION
        {
            get
            {
                if ((_STAFF_LOCATION == null))
                {
                    _STAFF_LOCATION = base.CreateObjectSet<STAFF_LOCATION>("STAFF_LOCATION");
                }
                return _STAFF_LOCATION;
            }
        }
        private ObjectSet<STAFF_LOCATION> _STAFF_LOCATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF_LOGIN> STAFF_LOGIN
        {
            get
            {
                if ((_STAFF_LOGIN == null))
                {
                    _STAFF_LOGIN = base.CreateObjectSet<STAFF_LOGIN>("STAFF_LOGIN");
                }
                return _STAFF_LOGIN;
            }
        }
        private ObjectSet<STAFF_LOGIN> _STAFF_LOGIN;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF_METRIC> STAFF_METRIC
        {
            get
            {
                if ((_STAFF_METRIC == null))
                {
                    _STAFF_METRIC = base.CreateObjectSet<STAFF_METRIC>("STAFF_METRIC");
                }
                return _STAFF_METRIC;
            }
        }
        private ObjectSet<STAFF_METRIC> _STAFF_METRIC;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STAFF_POTENTIAL_ASSESSMENT> STAFF_POTENTIAL_ASSESSMENT
        {
            get
            {
                if ((_STAFF_POTENTIAL_ASSESSMENT == null))
                {
                    _STAFF_POTENTIAL_ASSESSMENT = base.CreateObjectSet<STAFF_POTENTIAL_ASSESSMENT>("STAFF_POTENTIAL_ASSESSMENT");
                }
                return _STAFF_POTENTIAL_ASSESSMENT;
            }
        }
        private ObjectSet<STAFF_POTENTIAL_ASSESSMENT> _STAFF_POTENTIAL_ASSESSMENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STATUS> STATUS
        {
            get
            {
                if ((_STATUS == null))
                {
                    _STATUS = base.CreateObjectSet<STATUS>("STATUS");
                }
                return _STATUS;
            }
        }
        private ObjectSet<STATUS> _STATUS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_APPRAISAL_REPORT> VW_APPRAISAL_REPORT
        {
            get
            {
                if ((_VW_APPRAISAL_REPORT == null))
                {
                    _VW_APPRAISAL_REPORT = base.CreateObjectSet<VW_APPRAISAL_REPORT>("VW_APPRAISAL_REPORT");
                }
                return _VW_APPRAISAL_REPORT;
            }
        }
        private ObjectSet<VW_APPRAISAL_REPORT> _VW_APPRAISAL_REPORT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_HOD_APPRAISEES> VW_HOD_APPRAISEES
        {
            get
            {
                if ((_VW_HOD_APPRAISEES == null))
                {
                    _VW_HOD_APPRAISEES = base.CreateObjectSet<VW_HOD_APPRAISEES>("VW_HOD_APPRAISEES");
                }
                return _VW_HOD_APPRAISEES;
            }
        }
        private ObjectSet<VW_HOD_APPRAISEES> _VW_HOD_APPRAISEES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_INPS> VW_INPS
        {
            get
            {
                if ((_VW_INPS == null))
                {
                    _VW_INPS = base.CreateObjectSet<VW_INPS>("VW_INPS");
                }
                return _VW_INPS;
            }
        }
        private ObjectSet<VW_INPS> _VW_INPS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_JOB_ROLE_HOD> VW_JOB_ROLE_HOD
        {
            get
            {
                if ((_VW_JOB_ROLE_HOD == null))
                {
                    _VW_JOB_ROLE_HOD = base.CreateObjectSet<VW_JOB_ROLE_HOD>("VW_JOB_ROLE_HOD");
                }
                return _VW_JOB_ROLE_HOD;
            }
        }
        private ObjectSet<VW_JOB_ROLE_HOD> _VW_JOB_ROLE_HOD;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_JOB_ROLE_STAFF> VW_JOB_ROLE_STAFF
        {
            get
            {
                if ((_VW_JOB_ROLE_STAFF == null))
                {
                    _VW_JOB_ROLE_STAFF = base.CreateObjectSet<VW_JOB_ROLE_STAFF>("VW_JOB_ROLE_STAFF");
                }
                return _VW_JOB_ROLE_STAFF;
            }
        }
        private ObjectSet<VW_JOB_ROLE_STAFF> _VW_JOB_ROLE_STAFF;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_JOB_ROLE_SUPERVISOR> VW_JOB_ROLE_SUPERVISOR
        {
            get
            {
                if ((_VW_JOB_ROLE_SUPERVISOR == null))
                {
                    _VW_JOB_ROLE_SUPERVISOR = base.CreateObjectSet<VW_JOB_ROLE_SUPERVISOR>("VW_JOB_ROLE_SUPERVISOR");
                }
                return _VW_JOB_ROLE_SUPERVISOR;
            }
        }
        private ObjectSet<VW_JOB_ROLE_SUPERVISOR> _VW_JOB_ROLE_SUPERVISOR;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_METRICS> VW_METRICS
        {
            get
            {
                if ((_VW_METRICS == null))
                {
                    _VW_METRICS = base.CreateObjectSet<VW_METRICS>("VW_METRICS");
                }
                return _VW_METRICS;
            }
        }
        private ObjectSet<VW_METRICS> _VW_METRICS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_PACE> VW_PACE
        {
            get
            {
                if ((_VW_PACE == null))
                {
                    _VW_PACE = base.CreateObjectSet<VW_PACE>("VW_PACE");
                }
                return _VW_PACE;
            }
        }
        private ObjectSet<VW_PACE> _VW_PACE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_REPORT_METRICS_SCORE> VW_REPORT_METRICS_SCORE
        {
            get
            {
                if ((_VW_REPORT_METRICS_SCORE == null))
                {
                    _VW_REPORT_METRICS_SCORE = base.CreateObjectSet<VW_REPORT_METRICS_SCORE>("VW_REPORT_METRICS_SCORE");
                }
                return _VW_REPORT_METRICS_SCORE;
            }
        }
        private ObjectSet<VW_REPORT_METRICS_SCORE> _VW_REPORT_METRICS_SCORE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_REPORT_METRICS_SCORE_SUMMARY> VW_REPORT_METRICS_SCORE_SUMMARY
        {
            get
            {
                if ((_VW_REPORT_METRICS_SCORE_SUMMARY == null))
                {
                    _VW_REPORT_METRICS_SCORE_SUMMARY = base.CreateObjectSet<VW_REPORT_METRICS_SCORE_SUMMARY>("VW_REPORT_METRICS_SCORE_SUMMARY");
                }
                return _VW_REPORT_METRICS_SCORE_SUMMARY;
            }
        }
        private ObjectSet<VW_REPORT_METRICS_SCORE_SUMMARY> _VW_REPORT_METRICS_SCORE_SUMMARY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_REPORT_PACE_SCORE> VW_REPORT_PACE_SCORE
        {
            get
            {
                if ((_VW_REPORT_PACE_SCORE == null))
                {
                    _VW_REPORT_PACE_SCORE = base.CreateObjectSet<VW_REPORT_PACE_SCORE>("VW_REPORT_PACE_SCORE");
                }
                return _VW_REPORT_PACE_SCORE;
            }
        }
        private ObjectSet<VW_REPORT_PACE_SCORE> _VW_REPORT_PACE_SCORE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_SATFF_METRIC_RATING> VW_SATFF_METRIC_RATING
        {
            get
            {
                if ((_VW_SATFF_METRIC_RATING == null))
                {
                    _VW_SATFF_METRIC_RATING = base.CreateObjectSet<VW_SATFF_METRIC_RATING>("VW_SATFF_METRIC_RATING");
                }
                return _VW_SATFF_METRIC_RATING;
            }
        }
        private ObjectSet<VW_SATFF_METRIC_RATING> _VW_SATFF_METRIC_RATING;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_STAFF> VW_STAFF
        {
            get
            {
                if ((_VW_STAFF == null))
                {
                    _VW_STAFF = base.CreateObjectSet<VW_STAFF>("VW_STAFF");
                }
                return _VW_STAFF;
            }
        }
        private ObjectSet<VW_STAFF> _VW_STAFF;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_STAFF_INPS> VW_STAFF_INPS
        {
            get
            {
                if ((_VW_STAFF_INPS == null))
                {
                    _VW_STAFF_INPS = base.CreateObjectSet<VW_STAFF_INPS>("VW_STAFF_INPS");
                }
                return _VW_STAFF_INPS;
            }
        }
        private ObjectSet<VW_STAFF_INPS> _VW_STAFF_INPS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_STAFF_INPS_SUMMARY> VW_STAFF_INPS_SUMMARY
        {
            get
            {
                if ((_VW_STAFF_INPS_SUMMARY == null))
                {
                    _VW_STAFF_INPS_SUMMARY = base.CreateObjectSet<VW_STAFF_INPS_SUMMARY>("VW_STAFF_INPS_SUMMARY");
                }
                return _VW_STAFF_INPS_SUMMARY;
            }
        }
        private ObjectSet<VW_STAFF_INPS_SUMMARY> _VW_STAFF_INPS_SUMMARY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VW_STAFF_METRICS> VW_STAFF_METRICS
        {
            get
            {
                if ((_VW_STAFF_METRICS == null))
                {
                    _VW_STAFF_METRICS = base.CreateObjectSet<VW_STAFF_METRICS>("VW_STAFF_METRICS");
                }
                return _VW_STAFF_METRICS;
            }
        }
        private ObjectSet<VW_STAFF_METRICS> _VW_STAFF_METRICS;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the APPRAISAL_HEADER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPPRAISAL_HEADER(APPRAISAL_HEADER aPPRAISAL_HEADER)
        {
            base.AddObject("APPRAISAL_HEADER", aPPRAISAL_HEADER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the APPRAISAL_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPPRAISAL_TYPE(APPRAISAL_TYPE aPPRAISAL_TYPE)
        {
            base.AddObject("APPRAISAL_TYPE", aPPRAISAL_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMMENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMMENT(COMMENT cOMMENT)
        {
            base.AddObject("COMMENT", cOMMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMPANY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMPANY(COMPANY cOMPANY)
        {
            base.AddObject("COMPANY", cOMPANY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMPANY_DEPARTMENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMPANY_DEPARTMENT(COMPANY_DEPARTMENT cOMPANY_DEPARTMENT)
        {
            base.AddObject("COMPANY_DEPARTMENT", cOMPANY_DEPARTMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMPANY_DEPARTMENT_JOB_ROLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMPANY_DEPARTMENT_JOB_ROLE(COMPANY_DEPARTMENT_JOB_ROLE cOMPANY_DEPARTMENT_JOB_ROLE)
        {
            base.AddObject("COMPANY_DEPARTMENT_JOB_ROLE", cOMPANY_DEPARTMENT_JOB_ROLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMPANY_JOB_ROLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMPANY_JOB_ROLE(COMPANY_JOB_ROLE cOMPANY_JOB_ROLE)
        {
            base.AddObject("COMPANY_JOB_ROLE", cOMPANY_JOB_ROLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CURRENT_PACE_AREA EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCURRENT_PACE_AREA(CURRENT_PACE_AREA cURRENT_PACE_AREA)
        {
            base.AddObject("CURRENT_PACE_AREA", cURRENT_PACE_AREA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CURRENT_PERIOD EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCURRENT_PERIOD(CURRENT_PERIOD cURRENT_PERIOD)
        {
            base.AddObject("CURRENT_PERIOD", cURRENT_PERIOD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DEPARTMENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDEPARTMENT(DEPARTMENT dEPARTMENT)
        {
            base.AddObject("DEPARTMENT", dEPARTMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GRADE_SCALE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGRADE_SCALE(GRADE_SCALE gRADE_SCALE)
        {
            base.AddObject("GRADE_SCALE", gRADE_SCALE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INPS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINPS(INPS iNPS)
        {
            base.AddObject("INPS", iNPS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INPS_RATING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINPS_RATING(INPS_RATING iNPS_RATING)
        {
            base.AddObject("INPS_RATING", iNPS_RATING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INPS_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINPS_TYPE(INPS_TYPE iNPS_TYPE)
        {
            base.AddObject("INPS_TYPE", iNPS_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JOB_ROLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJOB_ROLE(JOB_ROLE jOB_ROLE)
        {
            base.AddObject("JOB_ROLE", jOB_ROLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JOB_ROLE_HOD EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJOB_ROLE_HOD(JOB_ROLE_HOD jOB_ROLE_HOD)
        {
            base.AddObject("JOB_ROLE_HOD", jOB_ROLE_HOD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JOB_ROLE_LEVEL EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJOB_ROLE_LEVEL(JOB_ROLE_LEVEL jOB_ROLE_LEVEL)
        {
            base.AddObject("JOB_ROLE_LEVEL", jOB_ROLE_LEVEL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JOB_ROLE_SUPERVISOR EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJOB_ROLE_SUPERVISOR(JOB_ROLE_SUPERVISOR jOB_ROLE_SUPERVISOR)
        {
            base.AddObject("JOB_ROLE_SUPERVISOR", jOB_ROLE_SUPERVISOR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LOCATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLOCATION(LOCATION lOCATION)
        {
            base.AddObject("LOCATION", lOCATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the METRIC EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMETRIC(METRIC mETRIC)
        {
            base.AddObject("METRIC", mETRIC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the METRIC_PERSPECTIVE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMETRIC_PERSPECTIVE(METRIC_PERSPECTIVE mETRIC_PERSPECTIVE)
        {
            base.AddObject("METRIC_PERSPECTIVE", mETRIC_PERSPECTIVE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the METRIC_RATING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMETRIC_RATING(METRIC_RATING mETRIC_RATING)
        {
            base.AddObject("METRIC_RATING", mETRIC_RATING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the METRIC_RATING_ EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMETRIC_RATING_(METRIC_RATING_ mETRIC_RATING_)
        {
            base.AddObject("METRIC_RATING_", mETRIC_RATING_);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the METRIC_RATING_BACKUP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMETRIC_RATING_BACKUP(METRIC_RATING_BACKUP mETRIC_RATING_BACKUP)
        {
            base.AddObject("METRIC_RATING_BACKUP", mETRIC_RATING_BACKUP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OPTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOPTION(OPTION oPTION)
        {
            base.AddObject("OPTION", oPTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PACE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPACE(PACE pACE)
        {
            base.AddObject("PACE", pACE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PACE_AREA EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPACE_AREA(PACE_AREA pACE_AREA)
        {
            base.AddObject("PACE_AREA", pACE_AREA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PACE_RATING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPACE_RATING(PACE_RATING pACE_RATING)
        {
            base.AddObject("PACE_RATING", pACE_RATING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PERIOD EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPERIOD(PERIOD pERIOD)
        {
            base.AddObject("PERIOD", pERIOD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PERIOD_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPERIOD_TYPE(PERIOD_TYPE pERIOD_TYPE)
        {
            base.AddObject("PERIOD_TYPE", pERIOD_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the POTENTIAL_ASSESSMENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPOTENTIAL_ASSESSMENT(POTENTIAL_ASSESSMENT pOTENTIAL_ASSESSMENT)
        {
            base.AddObject("POTENTIAL_ASSESSMENT", pOTENTIAL_ASSESSMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL(POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL pOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL)
        {
            base.AddObject("POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL", pOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the POTENTIAL_ASSESSMENT_PERIOD EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPOTENTIAL_ASSESSMENT_PERIOD(POTENTIAL_ASSESSMENT_PERIOD pOTENTIAL_ASSESSMENT_PERIOD)
        {
            base.AddObject("POTENTIAL_ASSESSMENT_PERIOD", pOTENTIAL_ASSESSMENT_PERIOD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RATING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRATING(RATING rATING)
        {
            base.AddObject("RATING", rATING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RATING_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRATING_TYPE(RATING_TYPE rATING_TYPE)
        {
            base.AddObject("RATING_TYPE", rATING_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RECOMMENDATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRECOMMENDATION(RECOMMENDATION rECOMMENDATION)
        {
            base.AddObject("RECOMMENDATION", rECOMMENDATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RIGHT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRIGHT(RIGHT rIGHT)
        {
            base.AddObject("RIGHT", rIGHT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROLE(ROLE rOLE)
        {
            base.AddObject("ROLE", rOLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROLE_RIGHT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROLE_RIGHT(ROLE_RIGHT rOLE_RIGHT)
        {
            base.AddObject("ROLE_RIGHT", rOLE_RIGHT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF(STAFF sTAFF)
        {
            base.AddObject("STAFF", sTAFF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF_COMPANY_DEPARTMENT_JOB_ROLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF_COMPANY_DEPARTMENT_JOB_ROLE(STAFF_COMPANY_DEPARTMENT_JOB_ROLE sTAFF_COMPANY_DEPARTMENT_JOB_ROLE)
        {
            base.AddObject("STAFF_COMPANY_DEPARTMENT_JOB_ROLE", sTAFF_COMPANY_DEPARTMENT_JOB_ROLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF_INPS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF_INPS(STAFF_INPS sTAFF_INPS)
        {
            base.AddObject("STAFF_INPS", sTAFF_INPS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF_JOB_ROLE_LEVEL EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF_JOB_ROLE_LEVEL(STAFF_JOB_ROLE_LEVEL sTAFF_JOB_ROLE_LEVEL)
        {
            base.AddObject("STAFF_JOB_ROLE_LEVEL", sTAFF_JOB_ROLE_LEVEL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF_LEARNING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF_LEARNING(STAFF_LEARNING sTAFF_LEARNING)
        {
            base.AddObject("STAFF_LEARNING", sTAFF_LEARNING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF_LOCATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF_LOCATION(STAFF_LOCATION sTAFF_LOCATION)
        {
            base.AddObject("STAFF_LOCATION", sTAFF_LOCATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF_LOGIN EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF_LOGIN(STAFF_LOGIN sTAFF_LOGIN)
        {
            base.AddObject("STAFF_LOGIN", sTAFF_LOGIN);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF_METRIC EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF_METRIC(STAFF_METRIC sTAFF_METRIC)
        {
            base.AddObject("STAFF_METRIC", sTAFF_METRIC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STAFF_POTENTIAL_ASSESSMENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTAFF_POTENTIAL_ASSESSMENT(STAFF_POTENTIAL_ASSESSMENT sTAFF_POTENTIAL_ASSESSMENT)
        {
            base.AddObject("STAFF_POTENTIAL_ASSESSMENT", sTAFF_POTENTIAL_ASSESSMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STATUS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTATUS(STATUS sTATUS)
        {
            base.AddObject("STATUS", sTATUS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_APPRAISAL_REPORT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_APPRAISAL_REPORT(VW_APPRAISAL_REPORT vW_APPRAISAL_REPORT)
        {
            base.AddObject("VW_APPRAISAL_REPORT", vW_APPRAISAL_REPORT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_HOD_APPRAISEES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_HOD_APPRAISEES(VW_HOD_APPRAISEES vW_HOD_APPRAISEES)
        {
            base.AddObject("VW_HOD_APPRAISEES", vW_HOD_APPRAISEES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_INPS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_INPS(VW_INPS vW_INPS)
        {
            base.AddObject("VW_INPS", vW_INPS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_JOB_ROLE_HOD EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_JOB_ROLE_HOD(VW_JOB_ROLE_HOD vW_JOB_ROLE_HOD)
        {
            base.AddObject("VW_JOB_ROLE_HOD", vW_JOB_ROLE_HOD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_JOB_ROLE_STAFF EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_JOB_ROLE_STAFF(VW_JOB_ROLE_STAFF vW_JOB_ROLE_STAFF)
        {
            base.AddObject("VW_JOB_ROLE_STAFF", vW_JOB_ROLE_STAFF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_JOB_ROLE_SUPERVISOR EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_JOB_ROLE_SUPERVISOR(VW_JOB_ROLE_SUPERVISOR vW_JOB_ROLE_SUPERVISOR)
        {
            base.AddObject("VW_JOB_ROLE_SUPERVISOR", vW_JOB_ROLE_SUPERVISOR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_METRICS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_METRICS(VW_METRICS vW_METRICS)
        {
            base.AddObject("VW_METRICS", vW_METRICS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_PACE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_PACE(VW_PACE vW_PACE)
        {
            base.AddObject("VW_PACE", vW_PACE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_REPORT_METRICS_SCORE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_REPORT_METRICS_SCORE(VW_REPORT_METRICS_SCORE vW_REPORT_METRICS_SCORE)
        {
            base.AddObject("VW_REPORT_METRICS_SCORE", vW_REPORT_METRICS_SCORE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_REPORT_METRICS_SCORE_SUMMARY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_REPORT_METRICS_SCORE_SUMMARY(VW_REPORT_METRICS_SCORE_SUMMARY vW_REPORT_METRICS_SCORE_SUMMARY)
        {
            base.AddObject("VW_REPORT_METRICS_SCORE_SUMMARY", vW_REPORT_METRICS_SCORE_SUMMARY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_REPORT_PACE_SCORE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_REPORT_PACE_SCORE(VW_REPORT_PACE_SCORE vW_REPORT_PACE_SCORE)
        {
            base.AddObject("VW_REPORT_PACE_SCORE", vW_REPORT_PACE_SCORE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_SATFF_METRIC_RATING EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_SATFF_METRIC_RATING(VW_SATFF_METRIC_RATING vW_SATFF_METRIC_RATING)
        {
            base.AddObject("VW_SATFF_METRIC_RATING", vW_SATFF_METRIC_RATING);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_STAFF EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_STAFF(VW_STAFF vW_STAFF)
        {
            base.AddObject("VW_STAFF", vW_STAFF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_STAFF_INPS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_STAFF_INPS(VW_STAFF_INPS vW_STAFF_INPS)
        {
            base.AddObject("VW_STAFF_INPS", vW_STAFF_INPS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_STAFF_INPS_SUMMARY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_STAFF_INPS_SUMMARY(VW_STAFF_INPS_SUMMARY vW_STAFF_INPS_SUMMARY)
        {
            base.AddObject("VW_STAFF_INPS_SUMMARY", vW_STAFF_INPS_SUMMARY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VW_STAFF_METRICS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVW_STAFF_METRICS(VW_STAFF_METRICS vW_STAFF_METRICS)
        {
            base.AddObject("VW_STAFF_METRICS", vW_STAFF_METRICS);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="period_to_delete">No Metadata Documentation available.</param>
        /// <param name="current_period">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> RemovePeriodBy(Nullable<global::System.Int32> period_to_delete, Nullable<global::System.Int32> current_period)
        {
            ObjectParameter period_to_deleteParameter;
            if (period_to_delete.HasValue)
            {
                period_to_deleteParameter = new ObjectParameter("period_to_delete", period_to_delete);
            }
            else
            {
                period_to_deleteParameter = new ObjectParameter("period_to_delete", typeof(global::System.Int32));
            }
    
            ObjectParameter current_periodParameter;
            if (current_period.HasValue)
            {
                current_periodParameter = new ObjectParameter("current_period", current_period);
            }
            else
            {
                current_periodParameter = new ObjectParameter("current_period", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("RemovePeriodBy", period_to_deleteParameter, current_periodParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="APPRAISAL_HEADER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APPRAISAL_HEADER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new APPRAISAL_HEADER object.
        /// </summary>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="supervisor_ID">Initial value of the Supervisor_ID property.</param>
        /// <param name="appraisal_Date">Initial value of the Appraisal_Date property.</param>
        /// <param name="hod_ID">Initial value of the Hod_ID property.</param>
        /// <param name="status_ID">Initial value of the Status_ID property.</param>
        public static APPRAISAL_HEADER CreateAPPRAISAL_HEADER(global::System.Int64 appraisal_Header_ID, global::System.Int32 period_ID, global::System.String staff_ID, global::System.String supervisor_ID, global::System.DateTime appraisal_Date, global::System.String hod_ID, global::System.Byte status_ID)
        {
            APPRAISAL_HEADER aPPRAISAL_HEADER = new APPRAISAL_HEADER();
            aPPRAISAL_HEADER.Appraisal_Header_ID = appraisal_Header_ID;
            aPPRAISAL_HEADER.Period_ID = period_ID;
            aPPRAISAL_HEADER.Staff_ID = staff_ID;
            aPPRAISAL_HEADER.Supervisor_ID = supervisor_ID;
            aPPRAISAL_HEADER.Appraisal_Date = appraisal_Date;
            aPPRAISAL_HEADER.Hod_ID = hod_ID;
            aPPRAISAL_HEADER.Status_ID = status_ID;
            return aPPRAISAL_HEADER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                OnPeriod_IDChanging(value);
                ReportPropertyChanging("Period_ID");
                _Period_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_ID");
                OnPeriod_IDChanged();
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                OnStaff_IDChanging(value);
                ReportPropertyChanging("Staff_ID");
                _Staff_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Staff_ID");
                OnStaff_IDChanged();
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supervisor_ID
        {
            get
            {
                return _Supervisor_ID;
            }
            set
            {
                OnSupervisor_IDChanging(value);
                ReportPropertyChanging("Supervisor_ID");
                _Supervisor_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Supervisor_ID");
                OnSupervisor_IDChanged();
            }
        }
        private global::System.String _Supervisor_ID;
        partial void OnSupervisor_IDChanging(global::System.String value);
        partial void OnSupervisor_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Appraisal_Date
        {
            get
            {
                return _Appraisal_Date;
            }
            set
            {
                OnAppraisal_DateChanging(value);
                ReportPropertyChanging("Appraisal_Date");
                _Appraisal_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Appraisal_Date");
                OnAppraisal_DateChanged();
            }
        }
        private global::System.DateTime _Appraisal_Date;
        partial void OnAppraisal_DateChanging(global::System.DateTime value);
        partial void OnAppraisal_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Staff_Response_Date
        {
            get
            {
                return _Staff_Response_Date;
            }
            set
            {
                OnStaff_Response_DateChanging(value);
                ReportPropertyChanging("Staff_Response_Date");
                _Staff_Response_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Staff_Response_Date");
                OnStaff_Response_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Staff_Response_Date;
        partial void OnStaff_Response_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnStaff_Response_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hod_ID
        {
            get
            {
                return _Hod_ID;
            }
            set
            {
                OnHod_IDChanging(value);
                ReportPropertyChanging("Hod_ID");
                _Hod_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Hod_ID");
                OnHod_IDChanged();
            }
        }
        private global::System.String _Hod_ID;
        partial void OnHod_IDChanging(global::System.String value);
        partial void OnHod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Hod_Appraisal_Date
        {
            get
            {
                return _Hod_Appraisal_Date;
            }
            set
            {
                OnHod_Appraisal_DateChanging(value);
                ReportPropertyChanging("Hod_Appraisal_Date");
                _Hod_Appraisal_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hod_Appraisal_Date");
                OnHod_Appraisal_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Hod_Appraisal_Date;
        partial void OnHod_Appraisal_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnHod_Appraisal_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status_ID
        {
            get
            {
                return _Status_ID;
            }
            set
            {
                OnStatus_IDChanging(value);
                ReportPropertyChanging("Status_ID");
                _Status_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status_ID");
                OnStatus_IDChanged();
            }
        }
        private global::System.Byte _Status_ID;
        partial void OnStatus_IDChanging(global::System.Byte value);
        partial void OnStatus_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_APPRAISAL_HEADER_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_APPRAISAL_HEADER_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_APPRAISAL_HEADER_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_APPRAISAL_HEADER_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF3", "STAFF")]
        public STAFF STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF3", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF3", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF3", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF3", "STAFF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF4", "STAFF")]
        public STAFF STAFF1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF4", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF4", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFF1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF4", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF4", "STAFF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF5", "STAFF")]
        public STAFF STAFF2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF5", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF5", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFF2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF5", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_APPRAISAL_HEADER_STAFF5", "STAFF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_STATUS", "STATUS")]
        public STATUS STATUS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("MangoModel.FK_APPRAISAL_HEADER_STATUS", "STATUS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("MangoModel.FK_APPRAISAL_HEADER_STATUS", "STATUS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STATUS> STATUSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("MangoModel.FK_APPRAISAL_HEADER_STATUS", "STATUS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STATUS>("MangoModel.FK_APPRAISAL_HEADER_STATUS", "STATUS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMMENT_APPRAISAL_HEADER", "COMMENT")]
        public COMMENT COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMMENT>("MangoModel.FK_COMMENT_APPRAISAL_HEADER", "COMMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMMENT>("MangoModel.FK_COMMENT_APPRAISAL_HEADER", "COMMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMMENT> COMMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMMENT>("MangoModel.FK_COMMENT_APPRAISAL_HEADER", "COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMMENT>("MangoModel.FK_COMMENT_APPRAISAL_HEADER", "COMMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_PACE_APPRAISAL_HEADER", "PACE")]
        public EntityCollection<PACE> PACE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PACE>("MangoModel.FK_PACE_APPRAISAL_HEADER", "PACE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PACE>("MangoModel.FK_PACE_APPRAISAL_HEADER", "PACE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_INPS_APPRAISAL_HEADER", "STAFF_INPS")]
        public EntityCollection<STAFF_INPS> STAFF_INPS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_INPS>("MangoModel.FK_STAFF_INPS_APPRAISAL_HEADER", "STAFF_INPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_INPS>("MangoModel.FK_STAFF_INPS_APPRAISAL_HEADER", "STAFF_INPS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_METRIC_APPRAISAL_HEADER", "STAFF_METRIC")]
        public EntityCollection<STAFF_METRIC> STAFF_METRIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_METRIC>("MangoModel.FK_STAFF_METRIC_APPRAISAL_HEADER", "STAFF_METRIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_METRIC>("MangoModel.FK_STAFF_METRIC_APPRAISAL_HEADER", "STAFF_METRIC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "STAFF_POTENTIAL_ASSESSMENT")]
        public EntityCollection<STAFF_POTENTIAL_ASSESSMENT> STAFF_POTENTIAL_ASSESSMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_POTENTIAL_ASSESSMENT>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "STAFF_POTENTIAL_ASSESSMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_POTENTIAL_ASSESSMENT>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "STAFF_POTENTIAL_ASSESSMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="APPRAISAL_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APPRAISAL_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new APPRAISAL_TYPE object.
        /// </summary>
        /// <param name="period_Type_Id">Initial value of the Period_Type_Id property.</param>
        /// <param name="period_Type_Name">Initial value of the Period_Type_Name property.</param>
        public static APPRAISAL_TYPE CreateAPPRAISAL_TYPE(global::System.Int16 period_Type_Id, global::System.String period_Type_Name)
        {
            APPRAISAL_TYPE aPPRAISAL_TYPE = new APPRAISAL_TYPE();
            aPPRAISAL_TYPE.Period_Type_Id = period_Type_Id;
            aPPRAISAL_TYPE.Period_Type_Name = period_Type_Name;
            return aPPRAISAL_TYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Period_Type_Id
        {
            get
            {
                return _Period_Type_Id;
            }
            set
            {
                if (_Period_Type_Id != value)
                {
                    OnPeriod_Type_IdChanging(value);
                    ReportPropertyChanging("Period_Type_Id");
                    _Period_Type_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_Type_Id");
                    OnPeriod_Type_IdChanged();
                }
            }
        }
        private global::System.Int16 _Period_Type_Id;
        partial void OnPeriod_Type_IdChanging(global::System.Int16 value);
        partial void OnPeriod_Type_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period_Type_Name
        {
            get
            {
                return _Period_Type_Name;
            }
            set
            {
                OnPeriod_Type_NameChanging(value);
                ReportPropertyChanging("Period_Type_Name");
                _Period_Type_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period_Type_Name");
                OnPeriod_Type_NameChanged();
            }
        }
        private global::System.String _Period_Type_Name;
        partial void OnPeriod_Type_NameChanging(global::System.String value);
        partial void OnPeriod_Type_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Period_Type_Description
        {
            get
            {
                return _Period_Type_Description;
            }
            set
            {
                OnPeriod_Type_DescriptionChanging(value);
                ReportPropertyChanging("Period_Type_Description");
                _Period_Type_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Period_Type_Description");
                OnPeriod_Type_DescriptionChanged();
            }
        }
        private global::System.String _Period_Type_Description;
        partial void OnPeriod_Type_DescriptionChanging(global::System.String value);
        partial void OnPeriod_Type_DescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="COMMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMMENT object.
        /// </summary>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="recommendation_ID">Initial value of the Recommendation_ID property.</param>
        /// <param name="option_ID">Initial value of the Option_ID property.</param>
        public static COMMENT CreateCOMMENT(global::System.Int64 appraisal_Header_ID, global::System.Byte recommendation_ID, global::System.Byte option_ID)
        {
            COMMENT cOMMENT = new COMMENT();
            cOMMENT.Appraisal_Header_ID = appraisal_Header_ID;
            cOMMENT.Recommendation_ID = recommendation_ID;
            cOMMENT.Option_ID = option_ID;
            return cOMMENT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Recommendation_ID
        {
            get
            {
                return _Recommendation_ID;
            }
            set
            {
                OnRecommendation_IDChanging(value);
                ReportPropertyChanging("Recommendation_ID");
                _Recommendation_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recommendation_ID");
                OnRecommendation_IDChanged();
            }
        }
        private global::System.Byte _Recommendation_ID;
        partial void OnRecommendation_IDChanging(global::System.Byte value);
        partial void OnRecommendation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Option_ID
        {
            get
            {
                return _Option_ID;
            }
            set
            {
                OnOption_IDChanging(value);
                ReportPropertyChanging("Option_ID");
                _Option_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Option_ID");
                OnOption_IDChanged();
            }
        }
        private global::System.Byte _Option_ID;
        partial void OnOption_IDChanging(global::System.Byte value);
        partial void OnOption_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Strength
        {
            get
            {
                return _Strength;
            }
            set
            {
                OnStrengthChanging(value);
                ReportPropertyChanging("Strength");
                _Strength = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Strength");
                OnStrengthChanged();
            }
        }
        private global::System.String _Strength;
        partial void OnStrengthChanging(global::System.String value);
        partial void OnStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Weakness
        {
            get
            {
                return _Weakness;
            }
            set
            {
                OnWeaknessChanging(value);
                ReportPropertyChanging("Weakness");
                _Weakness = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Weakness");
                OnWeaknessChanged();
            }
        }
        private global::System.String _Weakness;
        partial void OnWeaknessChanging(global::System.String value);
        partial void OnWeaknessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Training_Need
        {
            get
            {
                return _Training_Need;
            }
            set
            {
                OnTraining_NeedChanging(value);
                ReportPropertyChanging("Training_Need");
                _Training_Need = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Training_Need");
                OnTraining_NeedChanged();
            }
        }
        private global::System.String _Training_Need;
        partial void OnTraining_NeedChanging(global::System.String value);
        partial void OnTraining_NeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Supervisor_Comment
        {
            get
            {
                return _Supervisor_Comment;
            }
            set
            {
                OnSupervisor_CommentChanging(value);
                ReportPropertyChanging("Supervisor_Comment");
                _Supervisor_Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Supervisor_Comment");
                OnSupervisor_CommentChanged();
            }
        }
        private global::System.String _Supervisor_Comment;
        partial void OnSupervisor_CommentChanging(global::System.String value);
        partial void OnSupervisor_CommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Appraisee_Comment
        {
            get
            {
                return _Appraisee_Comment;
            }
            set
            {
                OnAppraisee_CommentChanging(value);
                ReportPropertyChanging("Appraisee_Comment");
                _Appraisee_Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Appraisee_Comment");
                OnAppraisee_CommentChanged();
            }
        }
        private global::System.String _Appraisee_Comment;
        partial void OnAppraisee_CommentChanging(global::System.String value);
        partial void OnAppraisee_CommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hod_Comment
        {
            get
            {
                return _Hod_Comment;
            }
            set
            {
                OnHod_CommentChanging(value);
                ReportPropertyChanging("Hod_Comment");
                _Hod_Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hod_Comment");
                OnHod_CommentChanged();
            }
        }
        private global::System.String _Hod_Comment;
        partial void OnHod_CommentChanging(global::System.String value);
        partial void OnHod_CommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER")]
        public APPRAISAL_HEADER APPRAISAL_HEADER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_COMMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_COMMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPRAISAL_HEADER> APPRAISAL_HEADERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_COMMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_COMMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMMENT_OPTION", "OPTION")]
        public OPTION OPTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OPTION>("MangoModel.FK_COMMENT_OPTION", "OPTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OPTION>("MangoModel.FK_COMMENT_OPTION", "OPTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OPTION> OPTIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OPTION>("MangoModel.FK_COMMENT_OPTION", "OPTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OPTION>("MangoModel.FK_COMMENT_OPTION", "OPTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMMENT_RECOMMENDATION", "RECOMMENDATION")]
        public RECOMMENDATION RECOMMENDATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RECOMMENDATION>("MangoModel.FK_COMMENT_RECOMMENDATION", "RECOMMENDATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RECOMMENDATION>("MangoModel.FK_COMMENT_RECOMMENDATION", "RECOMMENDATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RECOMMENDATION> RECOMMENDATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RECOMMENDATION>("MangoModel.FK_COMMENT_RECOMMENDATION", "RECOMMENDATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RECOMMENDATION>("MangoModel.FK_COMMENT_RECOMMENDATION", "RECOMMENDATION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="COMPANY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPANY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMPANY object.
        /// </summary>
        /// <param name="company_ID">Initial value of the Company_ID property.</param>
        /// <param name="company_Name">Initial value of the Company_Name property.</param>
        public static COMPANY CreateCOMPANY(global::System.Byte company_ID, global::System.String company_Name)
        {
            COMPANY cOMPANY = new COMPANY();
            cOMPANY.Company_ID = company_ID;
            cOMPANY.Company_Name = company_Name;
            return cOMPANY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_ID
        {
            get
            {
                return _Company_ID;
            }
            set
            {
                if (_Company_ID != value)
                {
                    OnCompany_IDChanging(value);
                    ReportPropertyChanging("Company_ID");
                    _Company_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_ID");
                    OnCompany_IDChanged();
                }
            }
        }
        private global::System.Byte _Company_ID;
        partial void OnCompany_IDChanging(global::System.Byte value);
        partial void OnCompany_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Company_Name
        {
            get
            {
                return _Company_Name;
            }
            set
            {
                OnCompany_NameChanging(value);
                ReportPropertyChanging("Company_Name");
                _Company_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Company_Name");
                OnCompany_NameChanged();
            }
        }
        private global::System.String _Company_Name;
        partial void OnCompany_NameChanging(global::System.String value);
        partial void OnCompany_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company_Symbol
        {
            get
            {
                return _Company_Symbol;
            }
            set
            {
                OnCompany_SymbolChanging(value);
                ReportPropertyChanging("Company_Symbol");
                _Company_Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company_Symbol");
                OnCompany_SymbolChanged();
            }
        }
        private global::System.String _Company_Symbol;
        partial void OnCompany_SymbolChanging(global::System.String value);
        partial void OnCompany_SymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company_Description
        {
            get
            {
                return _Company_Description;
            }
            set
            {
                OnCompany_DescriptionChanging(value);
                ReportPropertyChanging("Company_Description");
                _Company_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company_Description");
                OnCompany_DescriptionChanged();
            }
        }
        private global::System.String _Company_Description;
        partial void OnCompany_DescriptionChanging(global::System.String value);
        partial void OnCompany_DescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY_DEPARTMENT")]
        public EntityCollection<COMPANY_DEPARTMENT> COMPANY_DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMPANY_DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY_DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMPANY_DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY_DEPARTMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY_JOB_ROLE")]
        public EntityCollection<COMPANY_JOB_ROLE> COMPANY_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMPANY_JOB_ROLE>("MangoModel.FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMPANY_JOB_ROLE>("MangoModel.FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_COMPANY", "STAFF")]
        public EntityCollection<STAFF> STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF>("MangoModel.FK_STAFF_COMPANY", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF>("MangoModel.FK_STAFF_COMPANY", "STAFF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="COMPANY_DEPARTMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPANY_DEPARTMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMPANY_DEPARTMENT object.
        /// </summary>
        /// <param name="company_ID">Initial value of the Company_ID property.</param>
        /// <param name="department_ID">Initial value of the Department_ID property.</param>
        public static COMPANY_DEPARTMENT CreateCOMPANY_DEPARTMENT(global::System.Byte company_ID, global::System.String department_ID)
        {
            COMPANY_DEPARTMENT cOMPANY_DEPARTMENT = new COMPANY_DEPARTMENT();
            cOMPANY_DEPARTMENT.Company_ID = company_ID;
            cOMPANY_DEPARTMENT.Department_ID = department_ID;
            return cOMPANY_DEPARTMENT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_ID
        {
            get
            {
                return _Company_ID;
            }
            set
            {
                if (_Company_ID != value)
                {
                    OnCompany_IDChanging(value);
                    ReportPropertyChanging("Company_ID");
                    _Company_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_ID");
                    OnCompany_IDChanged();
                }
            }
        }
        private global::System.Byte _Company_ID;
        partial void OnCompany_IDChanging(global::System.Byte value);
        partial void OnCompany_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                if (_Department_ID != value)
                {
                    OnDepartment_IDChanging(value);
                    ReportPropertyChanging("Department_ID");
                    _Department_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_ID");
                    OnDepartment_IDChanged();
                }
            }
        }
        private global::System.String _Department_ID;
        partial void OnDepartment_IDChanging(global::System.String value);
        partial void OnDepartment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY")]
        public COMPANY COMPANY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY> COMPANYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY>("MangoModel.FK_COMPANY_DEPARTMENT_COMPANY", "COMPANY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_DEPARTMENT", "DEPARTMENT")]
        public DEPARTMENT DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_DEPARTMENT", "DEPARTMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_DEPARTMENT", "DEPARTMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DEPARTMENT> DEPARTMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_DEPARTMENT", "DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_DEPARTMENT", "DEPARTMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT_JOB_ROLE")]
        public EntityCollection<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="COMPANY_DEPARTMENT_JOB_ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPANY_DEPARTMENT_JOB_ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMPANY_DEPARTMENT_JOB_ROLE object.
        /// </summary>
        /// <param name="company_Department_Job_Role_ID">Initial value of the Company_Department_Job_Role_ID property.</param>
        /// <param name="company_ID">Initial value of the Company_ID property.</param>
        /// <param name="department_ID">Initial value of the Department_ID property.</param>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        public static COMPANY_DEPARTMENT_JOB_ROLE CreateCOMPANY_DEPARTMENT_JOB_ROLE(global::System.Int32 company_Department_Job_Role_ID, global::System.Byte company_ID, global::System.String department_ID, global::System.Int32 job_Role_ID)
        {
            COMPANY_DEPARTMENT_JOB_ROLE cOMPANY_DEPARTMENT_JOB_ROLE = new COMPANY_DEPARTMENT_JOB_ROLE();
            cOMPANY_DEPARTMENT_JOB_ROLE.Company_Department_Job_Role_ID = company_Department_Job_Role_ID;
            cOMPANY_DEPARTMENT_JOB_ROLE.Company_ID = company_ID;
            cOMPANY_DEPARTMENT_JOB_ROLE.Department_ID = department_ID;
            cOMPANY_DEPARTMENT_JOB_ROLE.Job_Role_ID = job_Role_ID;
            return cOMPANY_DEPARTMENT_JOB_ROLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company_Department_Job_Role_ID
        {
            get
            {
                return _Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Company_Department_Job_Role_ID != value)
                {
                    OnCompany_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Company_Department_Job_Role_ID");
                    _Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_Department_Job_Role_ID");
                    OnCompany_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Company_Department_Job_Role_ID;
        partial void OnCompany_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnCompany_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_ID
        {
            get
            {
                return _Company_ID;
            }
            set
            {
                OnCompany_IDChanging(value);
                ReportPropertyChanging("Company_ID");
                _Company_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Company_ID");
                OnCompany_IDChanged();
            }
        }
        private global::System.Byte _Company_ID;
        partial void OnCompany_IDChanging(global::System.Byte value);
        partial void OnCompany_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                OnDepartment_IDChanging(value);
                ReportPropertyChanging("Department_ID");
                _Department_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_ID");
                OnDepartment_IDChanged();
            }
        }
        private global::System.String _Department_ID;
        partial void OnDepartment_IDChanging(global::System.String value);
        partial void OnDepartment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                OnJob_Role_IDChanging(value);
                ReportPropertyChanging("Job_Role_ID");
                _Job_Role_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Job_Role_ID");
                OnJob_Role_IDChanged();
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT")]
        public COMPANY_DEPARTMENT COMPANY_DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY_DEPARTMENT> COMPANY_DEPARTMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY_DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT", "COMPANY_DEPARTMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "JOB_ROLE")]
        public JOB_ROLE JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "JOB_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "JOB_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JOB_ROLE> JOB_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JOB_ROLE>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "JOB_ROLE_HOD")]
        public EntityCollection<JOB_ROLE_HOD> JOB_ROLE_HOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JOB_ROLE_HOD>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "JOB_ROLE_HOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JOB_ROLE_HOD>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "JOB_ROLE_HOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "JOB_ROLE_HOD")]
        public EntityCollection<JOB_ROLE_HOD> JOB_ROLE_HOD1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JOB_ROLE_HOD>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "JOB_ROLE_HOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JOB_ROLE_HOD>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "JOB_ROLE_HOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "JOB_ROLE_SUPERVISOR")]
        public EntityCollection<JOB_ROLE_SUPERVISOR> JOB_ROLE_SUPERVISOR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JOB_ROLE_SUPERVISOR>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "JOB_ROLE_SUPERVISOR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JOB_ROLE_SUPERVISOR>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "JOB_ROLE_SUPERVISOR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "JOB_ROLE_SUPERVISOR")]
        public EntityCollection<JOB_ROLE_SUPERVISOR> JOB_ROLE_SUPERVISOR1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JOB_ROLE_SUPERVISOR>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "JOB_ROLE_SUPERVISOR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JOB_ROLE_SUPERVISOR>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "JOB_ROLE_SUPERVISOR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "METRIC")]
        public EntityCollection<METRIC> METRIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<METRIC>("MangoModel.FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "METRIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<METRIC>("MangoModel.FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "METRIC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE")]
        public EntityCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE> STAFF_COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="COMPANY_JOB_ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPANY_JOB_ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMPANY_JOB_ROLE object.
        /// </summary>
        /// <param name="company_Job_Role_Id">Initial value of the Company_Job_Role_Id property.</param>
        /// <param name="company_ID">Initial value of the Company_ID property.</param>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        public static COMPANY_JOB_ROLE CreateCOMPANY_JOB_ROLE(global::System.Int32 company_Job_Role_Id, global::System.Byte company_ID, global::System.Int32 job_Role_ID)
        {
            COMPANY_JOB_ROLE cOMPANY_JOB_ROLE = new COMPANY_JOB_ROLE();
            cOMPANY_JOB_ROLE.Company_Job_Role_Id = company_Job_Role_Id;
            cOMPANY_JOB_ROLE.Company_ID = company_ID;
            cOMPANY_JOB_ROLE.Job_Role_ID = job_Role_ID;
            return cOMPANY_JOB_ROLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company_Job_Role_Id
        {
            get
            {
                return _Company_Job_Role_Id;
            }
            set
            {
                if (_Company_Job_Role_Id != value)
                {
                    OnCompany_Job_Role_IdChanging(value);
                    ReportPropertyChanging("Company_Job_Role_Id");
                    _Company_Job_Role_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_Job_Role_Id");
                    OnCompany_Job_Role_IdChanged();
                }
            }
        }
        private global::System.Int32 _Company_Job_Role_Id;
        partial void OnCompany_Job_Role_IdChanging(global::System.Int32 value);
        partial void OnCompany_Job_Role_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_ID
        {
            get
            {
                return _Company_ID;
            }
            set
            {
                OnCompany_IDChanging(value);
                ReportPropertyChanging("Company_ID");
                _Company_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Company_ID");
                OnCompany_IDChanged();
            }
        }
        private global::System.Byte _Company_ID;
        partial void OnCompany_IDChanging(global::System.Byte value);
        partial void OnCompany_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                OnJob_Role_IDChanging(value);
                ReportPropertyChanging("Job_Role_ID");
                _Job_Role_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Job_Role_ID");
                OnJob_Role_IDChanged();
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY")]
        public COMPANY COMPANY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY> COMPANYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY>("MangoModel.FK_COMPANY_JOB_ROLE_COMPANY", "COMPANY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_JOB_ROLE_JOB_ROLE", "JOB_ROLE")]
        public JOB_ROLE JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE>("MangoModel.FK_COMPANY_JOB_ROLE_JOB_ROLE", "JOB_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE>("MangoModel.FK_COMPANY_JOB_ROLE_JOB_ROLE", "JOB_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JOB_ROLE> JOB_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE>("MangoModel.FK_COMPANY_JOB_ROLE_JOB_ROLE", "JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JOB_ROLE>("MangoModel.FK_COMPANY_JOB_ROLE_JOB_ROLE", "JOB_ROLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="CURRENT_PACE_AREA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CURRENT_PACE_AREA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CURRENT_PACE_AREA object.
        /// </summary>
        /// <param name="pace_Area_ID">Initial value of the Pace_Area_ID property.</param>
        /// <param name="date_Entered">Initial value of the Date_Entered property.</param>
        public static CURRENT_PACE_AREA CreateCURRENT_PACE_AREA(global::System.Int32 pace_Area_ID, global::System.DateTime date_Entered)
        {
            CURRENT_PACE_AREA cURRENT_PACE_AREA = new CURRENT_PACE_AREA();
            cURRENT_PACE_AREA.Pace_Area_ID = pace_Area_ID;
            cURRENT_PACE_AREA.Date_Entered = date_Entered;
            return cURRENT_PACE_AREA;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pace_Area_ID
        {
            get
            {
                return _Pace_Area_ID;
            }
            set
            {
                if (_Pace_Area_ID != value)
                {
                    OnPace_Area_IDChanging(value);
                    ReportPropertyChanging("Pace_Area_ID");
                    _Pace_Area_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Pace_Area_ID");
                    OnPace_Area_IDChanged();
                }
            }
        }
        private global::System.Int32 _Pace_Area_ID;
        partial void OnPace_Area_IDChanging(global::System.Int32 value);
        partial void OnPace_Area_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_Entered
        {
            get
            {
                return _Date_Entered;
            }
            set
            {
                OnDate_EnteredChanging(value);
                ReportPropertyChanging("Date_Entered");
                _Date_Entered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date_Entered");
                OnDate_EnteredChanged();
            }
        }
        private global::System.DateTime _Date_Entered;
        partial void OnDate_EnteredChanging(global::System.DateTime value);
        partial void OnDate_EnteredChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_CURRENT_PACE_AREA_PACE_AREA", "PACE_AREA")]
        public PACE_AREA PACE_AREA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PACE_AREA>("MangoModel.FK_CURRENT_PACE_AREA_PACE_AREA", "PACE_AREA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PACE_AREA>("MangoModel.FK_CURRENT_PACE_AREA_PACE_AREA", "PACE_AREA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PACE_AREA> PACE_AREAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PACE_AREA>("MangoModel.FK_CURRENT_PACE_AREA_PACE_AREA", "PACE_AREA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PACE_AREA>("MangoModel.FK_CURRENT_PACE_AREA_PACE_AREA", "PACE_AREA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="CURRENT_PERIOD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CURRENT_PERIOD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CURRENT_PERIOD object.
        /// </summary>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static CURRENT_PERIOD CreateCURRENT_PERIOD(global::System.Int32 period_ID)
        {
            CURRENT_PERIOD cURRENT_PERIOD = new CURRENT_PERIOD();
            cURRENT_PERIOD.Period_ID = period_ID;
            return cURRENT_PERIOD;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_CURRENT_PERIOD_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_CURRENT_PERIOD_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_CURRENT_PERIOD_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_CURRENT_PERIOD_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_CURRENT_PERIOD_PERIOD", "PERIOD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="DEPARTMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DEPARTMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DEPARTMENT object.
        /// </summary>
        /// <param name="department_ID">Initial value of the Department_ID property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        public static DEPARTMENT CreateDEPARTMENT(global::System.String department_ID, global::System.String department_Name)
        {
            DEPARTMENT dEPARTMENT = new DEPARTMENT();
            dEPARTMENT.Department_ID = department_ID;
            dEPARTMENT.Department_Name = department_Name;
            return dEPARTMENT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                if (_Department_ID != value)
                {
                    OnDepartment_IDChanging(value);
                    ReportPropertyChanging("Department_ID");
                    _Department_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_ID");
                    OnDepartment_IDChanged();
                }
            }
        }
        private global::System.String _Department_ID;
        partial void OnDepartment_IDChanging(global::System.String value);
        partial void OnDepartment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                OnDepartment_NameChanging(value);
                ReportPropertyChanging("Department_Name");
                _Department_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Name");
                OnDepartment_NameChanged();
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_DEPARTMENT", "COMPANY_DEPARTMENT")]
        public EntityCollection<COMPANY_DEPARTMENT> COMPANY_DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMPANY_DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_DEPARTMENT", "COMPANY_DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMPANY_DEPARTMENT>("MangoModel.FK_COMPANY_DEPARTMENT_DEPARTMENT", "COMPANY_DEPARTMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_DEPARTMENT", "METRIC")]
        public EntityCollection<METRIC> METRIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<METRIC>("MangoModel.FK_METRIC_DEPARTMENT", "METRIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<METRIC>("MangoModel.FK_METRIC_DEPARTMENT", "METRIC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_DEPARTMENT", "INPS")]
        public EntityCollection<INPS> INPS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS>("MangoModel.FK_METRIC_NPS_DEPARTMENT", "INPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS>("MangoModel.FK_METRIC_NPS_DEPARTMENT", "INPS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="GRADE_SCALE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GRADE_SCALE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GRADE_SCALE object.
        /// </summary>
        /// <param name="grade_Scale_ID">Initial value of the Grade_Scale_ID property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="grade_Scale_Text">Initial value of the Grade_Scale_Text property.</param>
        public static GRADE_SCALE CreateGRADE_SCALE(global::System.Byte grade_Scale_ID, global::System.Decimal from, global::System.Decimal to, global::System.String grade_Scale_Text)
        {
            GRADE_SCALE gRADE_SCALE = new GRADE_SCALE();
            gRADE_SCALE.Grade_Scale_ID = grade_Scale_ID;
            gRADE_SCALE.From = from;
            gRADE_SCALE.To = to;
            gRADE_SCALE.Grade_Scale_Text = grade_Scale_Text;
            return gRADE_SCALE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Grade_Scale_ID
        {
            get
            {
                return _Grade_Scale_ID;
            }
            set
            {
                if (_Grade_Scale_ID != value)
                {
                    OnGrade_Scale_IDChanging(value);
                    ReportPropertyChanging("Grade_Scale_ID");
                    _Grade_Scale_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Grade_Scale_ID");
                    OnGrade_Scale_IDChanged();
                }
            }
        }
        private global::System.Byte _Grade_Scale_ID;
        partial void OnGrade_Scale_IDChanging(global::System.Byte value);
        partial void OnGrade_Scale_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.Decimal _From;
        partial void OnFromChanging(global::System.Decimal value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private global::System.Decimal _To;
        partial void OnToChanging(global::System.Decimal value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Grade_Scale_Text
        {
            get
            {
                return _Grade_Scale_Text;
            }
            set
            {
                OnGrade_Scale_TextChanging(value);
                ReportPropertyChanging("Grade_Scale_Text");
                _Grade_Scale_Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Grade_Scale_Text");
                OnGrade_Scale_TextChanged();
            }
        }
        private global::System.String _Grade_Scale_Text;
        partial void OnGrade_Scale_TextChanging(global::System.String value);
        partial void OnGrade_Scale_TextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="INPS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INPS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INPS object.
        /// </summary>
        /// <param name="inps_ID">Initial value of the Inps_ID property.</param>
        /// <param name="inps_Type_Id">Initial value of the Inps_Type_Id property.</param>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static INPS CreateINPS(global::System.Int64 inps_ID, global::System.Int32 inps_Type_Id, global::System.String staff_ID, global::System.Int32 period_ID)
        {
            INPS iNPS = new INPS();
            iNPS.Inps_ID = inps_ID;
            iNPS.Inps_Type_Id = inps_Type_Id;
            iNPS.Staff_ID = staff_ID;
            iNPS.Period_ID = period_ID;
            return iNPS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Inps_ID
        {
            get
            {
                return _Inps_ID;
            }
            set
            {
                if (_Inps_ID != value)
                {
                    OnInps_IDChanging(value);
                    ReportPropertyChanging("Inps_ID");
                    _Inps_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Inps_ID");
                    OnInps_IDChanged();
                }
            }
        }
        private global::System.Int64 _Inps_ID;
        partial void OnInps_IDChanging(global::System.Int64 value);
        partial void OnInps_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Inps_Type_Id
        {
            get
            {
                return _Inps_Type_Id;
            }
            set
            {
                OnInps_Type_IdChanging(value);
                ReportPropertyChanging("Inps_Type_Id");
                _Inps_Type_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inps_Type_Id");
                OnInps_Type_IdChanged();
            }
        }
        private global::System.Int32 _Inps_Type_Id;
        partial void OnInps_Type_IdChanging(global::System.Int32 value);
        partial void OnInps_Type_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                OnStaff_IDChanging(value);
                ReportPropertyChanging("Staff_ID");
                _Staff_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Staff_ID");
                OnStaff_IDChanged();
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kpi
        {
            get
            {
                return _Kpi;
            }
            set
            {
                OnKpiChanging(value);
                ReportPropertyChanging("Kpi");
                _Kpi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kpi");
                OnKpiChanged();
            }
        }
        private global::System.String _Kpi;
        partial void OnKpiChanging(global::System.String value);
        partial void OnKpiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data_Source
        {
            get
            {
                return _Data_Source;
            }
            set
            {
                OnData_SourceChanging(value);
                ReportPropertyChanging("Data_Source");
                _Data_Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data_Source");
                OnData_SourceChanged();
            }
        }
        private global::System.String _Data_Source;
        partial void OnData_SourceChanging(global::System.String value);
        partial void OnData_SourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Responsible_Department_ID
        {
            get
            {
                return _Responsible_Department_ID;
            }
            set
            {
                OnResponsible_Department_IDChanging(value);
                ReportPropertyChanging("Responsible_Department_ID");
                _Responsible_Department_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Responsible_Department_ID");
                OnResponsible_Department_IDChanged();
            }
        }
        private global::System.String _Responsible_Department_ID;
        partial void OnResponsible_Department_IDChanging(global::System.String value);
        partial void OnResponsible_Department_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private Nullable<global::System.Decimal> _Target;
        partial void OnTargetChanging(Nullable<global::System.Decimal> value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                OnPeriod_IDChanging(value);
                ReportPropertyChanging("Period_ID");
                _Period_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_ID");
                OnPeriod_IDChanged();
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_DEPARTMENT", "DEPARTMENT")]
        public DEPARTMENT DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_METRIC_NPS_DEPARTMENT", "DEPARTMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_METRIC_NPS_DEPARTMENT", "DEPARTMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DEPARTMENT> DEPARTMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_METRIC_NPS_DEPARTMENT", "DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DEPARTMENT>("MangoModel.FK_METRIC_NPS_DEPARTMENT", "DEPARTMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_INPS_INPS_TYPE", "INPS_TYPE")]
        public INPS_TYPE INPS_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS_TYPE>("MangoModel.FK_INPS_INPS_TYPE", "INPS_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS_TYPE>("MangoModel.FK_INPS_INPS_TYPE", "INPS_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INPS_TYPE> INPS_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS_TYPE>("MangoModel.FK_INPS_INPS_TYPE", "INPS_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<INPS_TYPE>("MangoModel.FK_INPS_INPS_TYPE", "INPS_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE")]
        public METRIC_PERSPECTIVE METRIC_PERSPECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC_PERSPECTIVE>("MangoModel.FK_METRIC_NPS_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC_PERSPECTIVE>("MangoModel.FK_METRIC_NPS_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<METRIC_PERSPECTIVE> METRIC_PERSPECTIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC_PERSPECTIVE>("MangoModel.FK_METRIC_NPS_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<METRIC_PERSPECTIVE>("MangoModel.FK_METRIC_NPS_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_NPS_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_NPS_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_NPS_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_METRIC_NPS_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_STAFF", "STAFF")]
        public STAFF STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_METRIC_NPS_STAFF", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_METRIC_NPS_STAFF", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_METRIC_NPS_STAFF", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_METRIC_NPS_STAFF", "STAFF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_INPS_INPS", "STAFF_INPS")]
        public EntityCollection<STAFF_INPS> STAFF_INPS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_INPS>("MangoModel.FK_STAFF_INPS_INPS", "STAFF_INPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_INPS>("MangoModel.FK_STAFF_INPS_INPS", "STAFF_INPS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="INPS_RATING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INPS_RATING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INPS_RATING object.
        /// </summary>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        /// <param name="inps_Type_Id">Initial value of the Inps_Type_Id property.</param>
        /// <param name="rating_ID">Initial value of the Rating_ID property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="rating_Type_ID">Initial value of the Rating_Type_ID property.</param>
        public static INPS_RATING CreateINPS_RATING(global::System.Int32 period_ID, global::System.Int32 inps_Type_Id, global::System.Byte rating_ID, global::System.Decimal from, global::System.Decimal to, global::System.Byte rating_Type_ID)
        {
            INPS_RATING iNPS_RATING = new INPS_RATING();
            iNPS_RATING.Period_ID = period_ID;
            iNPS_RATING.Inps_Type_Id = inps_Type_Id;
            iNPS_RATING.Rating_ID = rating_ID;
            iNPS_RATING.From = from;
            iNPS_RATING.To = to;
            iNPS_RATING.Rating_Type_ID = rating_Type_ID;
            return iNPS_RATING;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Inps_Type_Id
        {
            get
            {
                return _Inps_Type_Id;
            }
            set
            {
                if (_Inps_Type_Id != value)
                {
                    OnInps_Type_IdChanging(value);
                    ReportPropertyChanging("Inps_Type_Id");
                    _Inps_Type_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Inps_Type_Id");
                    OnInps_Type_IdChanged();
                }
            }
        }
        private global::System.Int32 _Inps_Type_Id;
        partial void OnInps_Type_IdChanging(global::System.Int32 value);
        partial void OnInps_Type_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_ID
        {
            get
            {
                return _Rating_ID;
            }
            set
            {
                if (_Rating_ID != value)
                {
                    OnRating_IDChanging(value);
                    ReportPropertyChanging("Rating_ID");
                    _Rating_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rating_ID");
                    OnRating_IDChanged();
                }
            }
        }
        private global::System.Byte _Rating_ID;
        partial void OnRating_IDChanging(global::System.Byte value);
        partial void OnRating_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.Decimal _From;
        partial void OnFromChanging(global::System.Decimal value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private global::System.Decimal _To;
        partial void OnToChanging(global::System.Decimal value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_Type_ID
        {
            get
            {
                return _Rating_Type_ID;
            }
            set
            {
                OnRating_Type_IDChanging(value);
                ReportPropertyChanging("Rating_Type_ID");
                _Rating_Type_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating_Type_ID");
                OnRating_Type_IDChanged();
            }
        }
        private global::System.Byte _Rating_Type_ID;
        partial void OnRating_Type_IDChanging(global::System.Byte value);
        partial void OnRating_Type_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_INPS_RATING_INPS_TYPE", "INPS_TYPE")]
        public INPS_TYPE INPS_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS_TYPE>("MangoModel.FK_INPS_RATING_INPS_TYPE", "INPS_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS_TYPE>("MangoModel.FK_INPS_RATING_INPS_TYPE", "INPS_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INPS_TYPE> INPS_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS_TYPE>("MangoModel.FK_INPS_RATING_INPS_TYPE", "INPS_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<INPS_TYPE>("MangoModel.FK_INPS_RATING_INPS_TYPE", "INPS_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_RATING_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_NPS_RATING_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_NPS_RATING_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_NPS_RATING_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_METRIC_NPS_RATING_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_RATING_RATING", "RATING")]
        public RATING RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("MangoModel.FK_METRIC_NPS_RATING_RATING", "RATING").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("MangoModel.FK_METRIC_NPS_RATING_RATING", "RATING").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RATING> RATINGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("MangoModel.FK_METRIC_NPS_RATING_RATING", "RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RATING>("MangoModel.FK_METRIC_NPS_RATING_RATING", "RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_RATING_RATING_TYPE", "RATING_TYPE")]
        public RATING_TYPE RATING_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING_TYPE>("MangoModel.FK_METRIC_NPS_RATING_RATING_TYPE", "RATING_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING_TYPE>("MangoModel.FK_METRIC_NPS_RATING_RATING_TYPE", "RATING_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RATING_TYPE> RATING_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING_TYPE>("MangoModel.FK_METRIC_NPS_RATING_RATING_TYPE", "RATING_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RATING_TYPE>("MangoModel.FK_METRIC_NPS_RATING_RATING_TYPE", "RATING_TYPE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="INPS_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INPS_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INPS_TYPE object.
        /// </summary>
        /// <param name="inps_Type_Id">Initial value of the Inps_Type_Id property.</param>
        /// <param name="inps_Type_Name">Initial value of the Inps_Type_Name property.</param>
        public static INPS_TYPE CreateINPS_TYPE(global::System.Int32 inps_Type_Id, global::System.String inps_Type_Name)
        {
            INPS_TYPE iNPS_TYPE = new INPS_TYPE();
            iNPS_TYPE.Inps_Type_Id = inps_Type_Id;
            iNPS_TYPE.Inps_Type_Name = inps_Type_Name;
            return iNPS_TYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Inps_Type_Id
        {
            get
            {
                return _Inps_Type_Id;
            }
            set
            {
                if (_Inps_Type_Id != value)
                {
                    OnInps_Type_IdChanging(value);
                    ReportPropertyChanging("Inps_Type_Id");
                    _Inps_Type_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Inps_Type_Id");
                    OnInps_Type_IdChanged();
                }
            }
        }
        private global::System.Int32 _Inps_Type_Id;
        partial void OnInps_Type_IdChanging(global::System.Int32 value);
        partial void OnInps_Type_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Inps_Type_Name
        {
            get
            {
                return _Inps_Type_Name;
            }
            set
            {
                OnInps_Type_NameChanging(value);
                ReportPropertyChanging("Inps_Type_Name");
                _Inps_Type_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Inps_Type_Name");
                OnInps_Type_NameChanged();
            }
        }
        private global::System.String _Inps_Type_Name;
        partial void OnInps_Type_NameChanging(global::System.String value);
        partial void OnInps_Type_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Inps_Type_Description
        {
            get
            {
                return _Inps_Type_Description;
            }
            set
            {
                OnInps_Type_DescriptionChanging(value);
                ReportPropertyChanging("Inps_Type_Description");
                _Inps_Type_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Inps_Type_Description");
                OnInps_Type_DescriptionChanged();
            }
        }
        private global::System.String _Inps_Type_Description;
        partial void OnInps_Type_DescriptionChanging(global::System.String value);
        partial void OnInps_Type_DescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_INPS_INPS_TYPE", "INPS")]
        public EntityCollection<INPS> INPS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS>("MangoModel.FK_INPS_INPS_TYPE", "INPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS>("MangoModel.FK_INPS_INPS_TYPE", "INPS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_INPS_RATING_INPS_TYPE", "INPS_RATING")]
        public EntityCollection<INPS_RATING> INPS_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS_RATING>("MangoModel.FK_INPS_RATING_INPS_TYPE", "INPS_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS_RATING>("MangoModel.FK_INPS_RATING_INPS_TYPE", "INPS_RATING", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="JOB_ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JOB_ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JOB_ROLE object.
        /// </summary>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        /// <param name="job_Role_Name">Initial value of the Job_Role_Name property.</param>
        public static JOB_ROLE CreateJOB_ROLE(global::System.Int32 job_Role_ID, global::System.String job_Role_Name)
        {
            JOB_ROLE jOB_ROLE = new JOB_ROLE();
            jOB_ROLE.Job_Role_ID = job_Role_ID;
            jOB_ROLE.Job_Role_Name = job_Role_Name;
            return jOB_ROLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                if (_Job_Role_ID != value)
                {
                    OnJob_Role_IDChanging(value);
                    ReportPropertyChanging("Job_Role_ID");
                    _Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Job_Role_ID");
                    OnJob_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Name
        {
            get
            {
                return _Job_Role_Name;
            }
            set
            {
                OnJob_Role_NameChanging(value);
                ReportPropertyChanging("Job_Role_Name");
                _Job_Role_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Job_Role_Name");
                OnJob_Role_NameChanged();
            }
        }
        private global::System.String _Job_Role_Name;
        partial void OnJob_Role_NameChanging(global::System.String value);
        partial void OnJob_Role_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE")]
        public EntityCollection<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_COMPANY_DEPARTMENT_JOB_ROLE_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMPANY_JOB_ROLE_JOB_ROLE", "COMPANY_JOB_ROLE")]
        public EntityCollection<COMPANY_JOB_ROLE> COMPANY_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMPANY_JOB_ROLE>("MangoModel.FK_COMPANY_JOB_ROLE_JOB_ROLE", "COMPANY_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMPANY_JOB_ROLE>("MangoModel.FK_COMPANY_JOB_ROLE_JOB_ROLE", "COMPANY_JOB_ROLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="JOB_ROLE_HOD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JOB_ROLE_HOD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JOB_ROLE_HOD object.
        /// </summary>
        /// <param name="hod_Company_Department_Job_Role_ID">Initial value of the Hod_Company_Department_Job_Role_ID property.</param>
        /// <param name="staff_Company_Department_Job_Role_ID">Initial value of the Staff_Company_Department_Job_Role_ID property.</param>
        /// <param name="period_Id">Initial value of the Period_Id property.</param>
        public static JOB_ROLE_HOD CreateJOB_ROLE_HOD(global::System.Int32 hod_Company_Department_Job_Role_ID, global::System.Int32 staff_Company_Department_Job_Role_ID, global::System.Int32 period_Id)
        {
            JOB_ROLE_HOD jOB_ROLE_HOD = new JOB_ROLE_HOD();
            jOB_ROLE_HOD.Hod_Company_Department_Job_Role_ID = hod_Company_Department_Job_Role_ID;
            jOB_ROLE_HOD.Staff_Company_Department_Job_Role_ID = staff_Company_Department_Job_Role_ID;
            jOB_ROLE_HOD.Period_Id = period_Id;
            return jOB_ROLE_HOD;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hod_Company_Department_Job_Role_ID
        {
            get
            {
                return _Hod_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Hod_Company_Department_Job_Role_ID != value)
                {
                    OnHod_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Hod_Company_Department_Job_Role_ID");
                    _Hod_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Hod_Company_Department_Job_Role_ID");
                    OnHod_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Hod_Company_Department_Job_Role_ID;
        partial void OnHod_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnHod_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Staff_Company_Department_Job_Role_ID
        {
            get
            {
                return _Staff_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Staff_Company_Department_Job_Role_ID != value)
                {
                    OnStaff_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Staff_Company_Department_Job_Role_ID");
                    _Staff_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Company_Department_Job_Role_ID");
                    OnStaff_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Staff_Company_Department_Job_Role_ID;
        partial void OnStaff_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnStaff_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_Id
        {
            get
            {
                return _Period_Id;
            }
            set
            {
                if (_Period_Id != value)
                {
                    OnPeriod_IdChanging(value);
                    ReportPropertyChanging("Period_Id");
                    _Period_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_Id");
                    OnPeriod_IdChanged();
                }
            }
        }
        private global::System.Int32 _Period_Id;
        partial void OnPeriod_IdChanging(global::System.Int32 value);
        partial void OnPeriod_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE")]
        public COMPANY_DEPARTMENT_JOB_ROLE COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE")]
        public COMPANY_DEPARTMENT_JOB_ROLE COMPANY_DEPARTMENT_JOB_ROLE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_HOD_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_HOD_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_JOB_ROLE_HOD_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_JOB_ROLE_HOD_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_JOB_ROLE_HOD_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_JOB_ROLE_HOD_PERIOD", "PERIOD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="JOB_ROLE_LEVEL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JOB_ROLE_LEVEL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JOB_ROLE_LEVEL object.
        /// </summary>
        /// <param name="job_Role_Level_ID">Initial value of the Job_Role_Level_ID property.</param>
        /// <param name="job_Role_Level_Name">Initial value of the Job_Role_Level_Name property.</param>
        public static JOB_ROLE_LEVEL CreateJOB_ROLE_LEVEL(global::System.String job_Role_Level_ID, global::System.String job_Role_Level_Name)
        {
            JOB_ROLE_LEVEL jOB_ROLE_LEVEL = new JOB_ROLE_LEVEL();
            jOB_ROLE_LEVEL.Job_Role_Level_ID = job_Role_Level_ID;
            jOB_ROLE_LEVEL.Job_Role_Level_Name = job_Role_Level_Name;
            return jOB_ROLE_LEVEL;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_ID
        {
            get
            {
                return _Job_Role_Level_ID;
            }
            set
            {
                if (_Job_Role_Level_ID != value)
                {
                    OnJob_Role_Level_IDChanging(value);
                    ReportPropertyChanging("Job_Role_Level_ID");
                    _Job_Role_Level_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_ID");
                    OnJob_Role_Level_IDChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_ID;
        partial void OnJob_Role_Level_IDChanging(global::System.String value);
        partial void OnJob_Role_Level_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_Name
        {
            get
            {
                return _Job_Role_Level_Name;
            }
            set
            {
                OnJob_Role_Level_NameChanging(value);
                ReportPropertyChanging("Job_Role_Level_Name");
                _Job_Role_Level_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Job_Role_Level_Name");
                OnJob_Role_Level_NameChanged();
            }
        }
        private global::System.String _Job_Role_Level_Name;
        partial void OnJob_Role_Level_NameChanging(global::System.String value);
        partial void OnJob_Role_Level_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL")]
        public EntityCollection<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL> POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "STAFF_JOB_ROLE_LEVEL")]
        public EntityCollection<STAFF_JOB_ROLE_LEVEL> STAFF_JOB_ROLE_LEVEL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "STAFF_JOB_ROLE_LEVEL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "STAFF_JOB_ROLE_LEVEL", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="JOB_ROLE_SUPERVISOR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JOB_ROLE_SUPERVISOR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JOB_ROLE_SUPERVISOR object.
        /// </summary>
        /// <param name="supervisor_Company_Department_Job_Role_ID">Initial value of the Supervisor_Company_Department_Job_Role_ID property.</param>
        /// <param name="staff_Company_Department_Job_Role_ID">Initial value of the Staff_Company_Department_Job_Role_ID property.</param>
        /// <param name="period_Id">Initial value of the Period_Id property.</param>
        public static JOB_ROLE_SUPERVISOR CreateJOB_ROLE_SUPERVISOR(global::System.Int32 supervisor_Company_Department_Job_Role_ID, global::System.Int32 staff_Company_Department_Job_Role_ID, global::System.Int32 period_Id)
        {
            JOB_ROLE_SUPERVISOR jOB_ROLE_SUPERVISOR = new JOB_ROLE_SUPERVISOR();
            jOB_ROLE_SUPERVISOR.Supervisor_Company_Department_Job_Role_ID = supervisor_Company_Department_Job_Role_ID;
            jOB_ROLE_SUPERVISOR.Staff_Company_Department_Job_Role_ID = staff_Company_Department_Job_Role_ID;
            jOB_ROLE_SUPERVISOR.Period_Id = period_Id;
            return jOB_ROLE_SUPERVISOR;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supervisor_Company_Department_Job_Role_ID
        {
            get
            {
                return _Supervisor_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Supervisor_Company_Department_Job_Role_ID != value)
                {
                    OnSupervisor_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Supervisor_Company_Department_Job_Role_ID");
                    _Supervisor_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Supervisor_Company_Department_Job_Role_ID");
                    OnSupervisor_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Supervisor_Company_Department_Job_Role_ID;
        partial void OnSupervisor_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnSupervisor_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Staff_Company_Department_Job_Role_ID
        {
            get
            {
                return _Staff_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Staff_Company_Department_Job_Role_ID != value)
                {
                    OnStaff_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Staff_Company_Department_Job_Role_ID");
                    _Staff_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Company_Department_Job_Role_ID");
                    OnStaff_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Staff_Company_Department_Job_Role_ID;
        partial void OnStaff_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnStaff_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_Id
        {
            get
            {
                return _Period_Id;
            }
            set
            {
                if (_Period_Id != value)
                {
                    OnPeriod_IdChanging(value);
                    ReportPropertyChanging("Period_Id");
                    _Period_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_Id");
                    OnPeriod_IdChanged();
                }
            }
        }
        private global::System.Int32 _Period_Id;
        partial void OnPeriod_IdChanging(global::System.Int32 value);
        partial void OnPeriod_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE")]
        public COMPANY_DEPARTMENT_JOB_ROLE COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE")]
        public COMPANY_DEPARTMENT_JOB_ROLE COMPANY_DEPARTMENT_JOB_ROLE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_JOB_ROLE_SUPERVISOR_COMPANY_DEPARTMENT_JOB_ROLE1", "COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_JOB_ROLE_SUPERVISOR_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_JOB_ROLE_SUPERVISOR_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_JOB_ROLE_SUPERVISOR_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_JOB_ROLE_SUPERVISOR_PERIOD", "PERIOD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="LOCATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LOCATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LOCATION object.
        /// </summary>
        /// <param name="location_ID">Initial value of the Location_ID property.</param>
        /// <param name="location_Name">Initial value of the Location_Name property.</param>
        public static LOCATION CreateLOCATION(global::System.String location_ID, global::System.String location_Name)
        {
            LOCATION lOCATION = new LOCATION();
            lOCATION.Location_ID = location_ID;
            lOCATION.Location_Name = location_Name;
            return lOCATION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_ID
        {
            get
            {
                return _Location_ID;
            }
            set
            {
                if (_Location_ID != value)
                {
                    OnLocation_IDChanging(value);
                    ReportPropertyChanging("Location_ID");
                    _Location_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_ID");
                    OnLocation_IDChanged();
                }
            }
        }
        private global::System.String _Location_ID;
        partial void OnLocation_IDChanging(global::System.String value);
        partial void OnLocation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_Name
        {
            get
            {
                return _Location_Name;
            }
            set
            {
                OnLocation_NameChanging(value);
                ReportPropertyChanging("Location_Name");
                _Location_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location_Name");
                OnLocation_NameChanged();
            }
        }
        private global::System.String _Location_Name;
        partial void OnLocation_NameChanging(global::System.String value);
        partial void OnLocation_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LOCATION_LOCATION", "STAFF_LOCATION")]
        public EntityCollection<STAFF_LOCATION> STAFF_LOCATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_LOCATION>("MangoModel.FK_STAFF_LOCATION_LOCATION", "STAFF_LOCATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_LOCATION>("MangoModel.FK_STAFF_LOCATION_LOCATION", "STAFF_LOCATION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="METRIC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class METRIC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new METRIC object.
        /// </summary>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        /// <param name="metric_Perspective_ID">Initial value of the Metric_Perspective_ID property.</param>
        /// <param name="company_Department_Job_Role_ID">Initial value of the Company_Department_Job_Role_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static METRIC CreateMETRIC(global::System.Int64 metric_ID, global::System.Int32 metric_Perspective_ID, global::System.Int32 company_Department_Job_Role_ID, global::System.Int32 period_ID)
        {
            METRIC mETRIC = new METRIC();
            mETRIC.Metric_ID = metric_ID;
            mETRIC.Metric_Perspective_ID = metric_Perspective_ID;
            mETRIC.Company_Department_Job_Role_ID = company_Department_Job_Role_ID;
            mETRIC.Period_ID = period_ID;
            return mETRIC;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                if (_Metric_ID != value)
                {
                    OnMetric_IDChanging(value);
                    ReportPropertyChanging("Metric_ID");
                    _Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_ID");
                    OnMetric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int64 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Metric_Perspective_ID
        {
            get
            {
                return _Metric_Perspective_ID;
            }
            set
            {
                OnMetric_Perspective_IDChanging(value);
                ReportPropertyChanging("Metric_Perspective_ID");
                _Metric_Perspective_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Metric_Perspective_ID");
                OnMetric_Perspective_IDChanged();
            }
        }
        private global::System.Int32 _Metric_Perspective_ID;
        partial void OnMetric_Perspective_IDChanging(global::System.Int32 value);
        partial void OnMetric_Perspective_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company_Department_Job_Role_ID
        {
            get
            {
                return _Company_Department_Job_Role_ID;
            }
            set
            {
                OnCompany_Department_Job_Role_IDChanging(value);
                ReportPropertyChanging("Company_Department_Job_Role_ID");
                _Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Company_Department_Job_Role_ID");
                OnCompany_Department_Job_Role_IDChanged();
            }
        }
        private global::System.Int32 _Company_Department_Job_Role_ID;
        partial void OnCompany_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnCompany_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kpi
        {
            get
            {
                return _Kpi;
            }
            set
            {
                OnKpiChanging(value);
                ReportPropertyChanging("Kpi");
                _Kpi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kpi");
                OnKpiChanged();
            }
        }
        private global::System.String _Kpi;
        partial void OnKpiChanging(global::System.String value);
        partial void OnKpiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data_Source
        {
            get
            {
                return _Data_Source;
            }
            set
            {
                OnData_SourceChanging(value);
                ReportPropertyChanging("Data_Source");
                _Data_Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data_Source");
                OnData_SourceChanged();
            }
        }
        private global::System.String _Data_Source;
        partial void OnData_SourceChanging(global::System.String value);
        partial void OnData_SourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rsponsible_Department_ID
        {
            get
            {
                return _Rsponsible_Department_ID;
            }
            set
            {
                OnRsponsible_Department_IDChanging(value);
                ReportPropertyChanging("Rsponsible_Department_ID");
                _Rsponsible_Department_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rsponsible_Department_ID");
                OnRsponsible_Department_IDChanged();
            }
        }
        private global::System.String _Rsponsible_Department_ID;
        partial void OnRsponsible_Department_IDChanging(global::System.String value);
        partial void OnRsponsible_Department_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private Nullable<global::System.Decimal> _Target;
        partial void OnTargetChanging(Nullable<global::System.Decimal> value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                OnPeriod_IDChanging(value);
                ReportPropertyChanging("Period_ID");
                _Period_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_ID");
                OnPeriod_IDChanged();
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE")]
        public COMPANY_DEPARTMENT_JOB_ROLE COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_METRIC_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_DEPARTMENT", "DEPARTMENT")]
        public DEPARTMENT DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_METRIC_DEPARTMENT", "DEPARTMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_METRIC_DEPARTMENT", "DEPARTMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DEPARTMENT> DEPARTMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("MangoModel.FK_METRIC_DEPARTMENT", "DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DEPARTMENT>("MangoModel.FK_METRIC_DEPARTMENT", "DEPARTMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE")]
        public METRIC_PERSPECTIVE METRIC_PERSPECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC_PERSPECTIVE>("MangoModel.FK_METRIC_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC_PERSPECTIVE>("MangoModel.FK_METRIC_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<METRIC_PERSPECTIVE> METRIC_PERSPECTIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC_PERSPECTIVE>("MangoModel.FK_METRIC_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<METRIC_PERSPECTIVE>("MangoModel.FK_METRIC_METRIC_PERSPECTIVE", "METRIC_PERSPECTIVE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_METRIC_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_RATING_METRIC", "METRIC_RATING")]
        public EntityCollection<METRIC_RATING> METRIC_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<METRIC_RATING>("MangoModel.FK_METRIC_RATING_METRIC", "METRIC_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<METRIC_RATING>("MangoModel.FK_METRIC_RATING_METRIC", "METRIC_RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_METRIC_METRIC", "STAFF_METRIC")]
        public EntityCollection<STAFF_METRIC> STAFF_METRIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_METRIC>("MangoModel.FK_STAFF_METRIC_METRIC", "STAFF_METRIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_METRIC>("MangoModel.FK_STAFF_METRIC_METRIC", "STAFF_METRIC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="METRIC_PERSPECTIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class METRIC_PERSPECTIVE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new METRIC_PERSPECTIVE object.
        /// </summary>
        /// <param name="metric_Perspective_ID">Initial value of the Metric_Perspective_ID property.</param>
        /// <param name="metric_Perspective_Name">Initial value of the Metric_Perspective_Name property.</param>
        public static METRIC_PERSPECTIVE CreateMETRIC_PERSPECTIVE(global::System.Int32 metric_Perspective_ID, global::System.String metric_Perspective_Name)
        {
            METRIC_PERSPECTIVE mETRIC_PERSPECTIVE = new METRIC_PERSPECTIVE();
            mETRIC_PERSPECTIVE.Metric_Perspective_ID = metric_Perspective_ID;
            mETRIC_PERSPECTIVE.Metric_Perspective_Name = metric_Perspective_Name;
            return mETRIC_PERSPECTIVE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Metric_Perspective_ID
        {
            get
            {
                return _Metric_Perspective_ID;
            }
            set
            {
                if (_Metric_Perspective_ID != value)
                {
                    OnMetric_Perspective_IDChanging(value);
                    ReportPropertyChanging("Metric_Perspective_ID");
                    _Metric_Perspective_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_Perspective_ID");
                    OnMetric_Perspective_IDChanged();
                }
            }
        }
        private global::System.Int32 _Metric_Perspective_ID;
        partial void OnMetric_Perspective_IDChanging(global::System.Int32 value);
        partial void OnMetric_Perspective_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Metric_Perspective_Name
        {
            get
            {
                return _Metric_Perspective_Name;
            }
            set
            {
                OnMetric_Perspective_NameChanging(value);
                ReportPropertyChanging("Metric_Perspective_Name");
                _Metric_Perspective_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Metric_Perspective_Name");
                OnMetric_Perspective_NameChanged();
            }
        }
        private global::System.String _Metric_Perspective_Name;
        partial void OnMetric_Perspective_NameChanging(global::System.String value);
        partial void OnMetric_Perspective_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_METRIC_PERSPECTIVE", "INPS")]
        public EntityCollection<INPS> INPS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS>("MangoModel.FK_METRIC_NPS_METRIC_PERSPECTIVE", "INPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS>("MangoModel.FK_METRIC_NPS_METRIC_PERSPECTIVE", "INPS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_METRIC_PERSPECTIVE", "METRIC")]
        public EntityCollection<METRIC> METRIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<METRIC>("MangoModel.FK_METRIC_METRIC_PERSPECTIVE", "METRIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<METRIC>("MangoModel.FK_METRIC_METRIC_PERSPECTIVE", "METRIC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="METRIC_RATING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class METRIC_RATING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new METRIC_RATING object.
        /// </summary>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        /// <param name="rating_ID">Initial value of the Rating_ID property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="rating_Type_ID">Initial value of the Rating_Type_ID property.</param>
        public static METRIC_RATING CreateMETRIC_RATING(global::System.Int64 metric_ID, global::System.Byte rating_ID, global::System.Decimal from, global::System.Decimal to, global::System.Byte rating_Type_ID)
        {
            METRIC_RATING mETRIC_RATING = new METRIC_RATING();
            mETRIC_RATING.Metric_ID = metric_ID;
            mETRIC_RATING.Rating_ID = rating_ID;
            mETRIC_RATING.From = from;
            mETRIC_RATING.To = to;
            mETRIC_RATING.Rating_Type_ID = rating_Type_ID;
            return mETRIC_RATING;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                if (_Metric_ID != value)
                {
                    OnMetric_IDChanging(value);
                    ReportPropertyChanging("Metric_ID");
                    _Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_ID");
                    OnMetric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int64 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_ID
        {
            get
            {
                return _Rating_ID;
            }
            set
            {
                if (_Rating_ID != value)
                {
                    OnRating_IDChanging(value);
                    ReportPropertyChanging("Rating_ID");
                    _Rating_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rating_ID");
                    OnRating_IDChanged();
                }
            }
        }
        private global::System.Byte _Rating_ID;
        partial void OnRating_IDChanging(global::System.Byte value);
        partial void OnRating_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.Decimal _From;
        partial void OnFromChanging(global::System.Decimal value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private global::System.Decimal _To;
        partial void OnToChanging(global::System.Decimal value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_Type_ID
        {
            get
            {
                return _Rating_Type_ID;
            }
            set
            {
                OnRating_Type_IDChanging(value);
                ReportPropertyChanging("Rating_Type_ID");
                _Rating_Type_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating_Type_ID");
                OnRating_Type_IDChanged();
            }
        }
        private global::System.Byte _Rating_Type_ID;
        partial void OnRating_Type_IDChanging(global::System.Byte value);
        partial void OnRating_Type_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                OnPeriod_IDChanging(value);
                ReportPropertyChanging("Period_ID");
                _Period_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_ID");
                OnPeriod_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Period_ID;
        partial void OnPeriod_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPeriod_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_RATING_METRIC", "METRIC")]
        public METRIC METRIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC>("MangoModel.FK_METRIC_RATING_METRIC", "METRIC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC>("MangoModel.FK_METRIC_RATING_METRIC", "METRIC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<METRIC> METRICReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC>("MangoModel.FK_METRIC_RATING_METRIC", "METRIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<METRIC>("MangoModel.FK_METRIC_RATING_METRIC", "METRIC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_RATING_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_RATING_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_RATING_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_METRIC_RATING_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_METRIC_RATING_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_RATING_RATING", "RATING")]
        public RATING RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("MangoModel.FK_METRIC_RATING_RATING", "RATING").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("MangoModel.FK_METRIC_RATING_RATING", "RATING").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RATING> RATINGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING>("MangoModel.FK_METRIC_RATING_RATING", "RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RATING>("MangoModel.FK_METRIC_RATING_RATING", "RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_RATING_RATING_TYPE", "RATING_TYPE")]
        public RATING_TYPE RATING_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING_TYPE>("MangoModel.FK_METRIC_RATING_RATING_TYPE", "RATING_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING_TYPE>("MangoModel.FK_METRIC_RATING_RATING_TYPE", "RATING_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RATING_TYPE> RATING_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RATING_TYPE>("MangoModel.FK_METRIC_RATING_RATING_TYPE", "RATING_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RATING_TYPE>("MangoModel.FK_METRIC_RATING_RATING_TYPE", "RATING_TYPE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="METRIC_RATING_")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class METRIC_RATING_ : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new METRIC_RATING_ object.
        /// </summary>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        /// <param name="rating_ID">Initial value of the Rating_ID property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="rating_Type_ID">Initial value of the Rating_Type_ID property.</param>
        public static METRIC_RATING_ CreateMETRIC_RATING_(global::System.Int32 metric_ID, global::System.Byte rating_ID, global::System.Decimal from, global::System.Decimal to, global::System.Byte rating_Type_ID)
        {
            METRIC_RATING_ mETRIC_RATING_ = new METRIC_RATING_();
            mETRIC_RATING_.Metric_ID = metric_ID;
            mETRIC_RATING_.Rating_ID = rating_ID;
            mETRIC_RATING_.From = from;
            mETRIC_RATING_.To = to;
            mETRIC_RATING_.Rating_Type_ID = rating_Type_ID;
            return mETRIC_RATING_;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                if (_Metric_ID != value)
                {
                    OnMetric_IDChanging(value);
                    ReportPropertyChanging("Metric_ID");
                    _Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_ID");
                    OnMetric_IDChanged();
                }
            }
        }
        private global::System.Int32 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int32 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_ID
        {
            get
            {
                return _Rating_ID;
            }
            set
            {
                if (_Rating_ID != value)
                {
                    OnRating_IDChanging(value);
                    ReportPropertyChanging("Rating_ID");
                    _Rating_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rating_ID");
                    OnRating_IDChanged();
                }
            }
        }
        private global::System.Byte _Rating_ID;
        partial void OnRating_IDChanging(global::System.Byte value);
        partial void OnRating_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.Decimal _From;
        partial void OnFromChanging(global::System.Decimal value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private global::System.Decimal _To;
        partial void OnToChanging(global::System.Decimal value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_Type_ID
        {
            get
            {
                return _Rating_Type_ID;
            }
            set
            {
                OnRating_Type_IDChanging(value);
                ReportPropertyChanging("Rating_Type_ID");
                _Rating_Type_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating_Type_ID");
                OnRating_Type_IDChanged();
            }
        }
        private global::System.Byte _Rating_Type_ID;
        partial void OnRating_Type_IDChanging(global::System.Byte value);
        partial void OnRating_Type_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                OnPeriod_IDChanging(value);
                ReportPropertyChanging("Period_ID");
                _Period_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_ID");
                OnPeriod_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Period_ID;
        partial void OnPeriod_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPeriod_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="METRIC_RATING_BACKUP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class METRIC_RATING_BACKUP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new METRIC_RATING_BACKUP object.
        /// </summary>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        /// <param name="rating_ID">Initial value of the Rating_ID property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="rating_Type_ID">Initial value of the Rating_Type_ID property.</param>
        public static METRIC_RATING_BACKUP CreateMETRIC_RATING_BACKUP(global::System.Int32 metric_ID, global::System.Byte rating_ID, global::System.Decimal from, global::System.Decimal to, global::System.Byte rating_Type_ID)
        {
            METRIC_RATING_BACKUP mETRIC_RATING_BACKUP = new METRIC_RATING_BACKUP();
            mETRIC_RATING_BACKUP.Metric_ID = metric_ID;
            mETRIC_RATING_BACKUP.Rating_ID = rating_ID;
            mETRIC_RATING_BACKUP.From = from;
            mETRIC_RATING_BACKUP.To = to;
            mETRIC_RATING_BACKUP.Rating_Type_ID = rating_Type_ID;
            return mETRIC_RATING_BACKUP;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                if (_Metric_ID != value)
                {
                    OnMetric_IDChanging(value);
                    ReportPropertyChanging("Metric_ID");
                    _Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_ID");
                    OnMetric_IDChanged();
                }
            }
        }
        private global::System.Int32 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int32 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_ID
        {
            get
            {
                return _Rating_ID;
            }
            set
            {
                if (_Rating_ID != value)
                {
                    OnRating_IDChanging(value);
                    ReportPropertyChanging("Rating_ID");
                    _Rating_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rating_ID");
                    OnRating_IDChanged();
                }
            }
        }
        private global::System.Byte _Rating_ID;
        partial void OnRating_IDChanging(global::System.Byte value);
        partial void OnRating_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.Decimal _From;
        partial void OnFromChanging(global::System.Decimal value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private global::System.Decimal _To;
        partial void OnToChanging(global::System.Decimal value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_Type_ID
        {
            get
            {
                return _Rating_Type_ID;
            }
            set
            {
                OnRating_Type_IDChanging(value);
                ReportPropertyChanging("Rating_Type_ID");
                _Rating_Type_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating_Type_ID");
                OnRating_Type_IDChanged();
            }
        }
        private global::System.Byte _Rating_Type_ID;
        partial void OnRating_Type_IDChanging(global::System.Byte value);
        partial void OnRating_Type_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="OPTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OPTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OPTION object.
        /// </summary>
        /// <param name="option_ID">Initial value of the Option_ID property.</param>
        /// <param name="option_Name">Initial value of the Option_Name property.</param>
        public static OPTION CreateOPTION(global::System.Byte option_ID, global::System.String option_Name)
        {
            OPTION oPTION = new OPTION();
            oPTION.Option_ID = option_ID;
            oPTION.Option_Name = option_Name;
            return oPTION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Option_ID
        {
            get
            {
                return _Option_ID;
            }
            set
            {
                if (_Option_ID != value)
                {
                    OnOption_IDChanging(value);
                    ReportPropertyChanging("Option_ID");
                    _Option_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Option_ID");
                    OnOption_IDChanged();
                }
            }
        }
        private global::System.Byte _Option_ID;
        partial void OnOption_IDChanging(global::System.Byte value);
        partial void OnOption_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Option_Name
        {
            get
            {
                return _Option_Name;
            }
            set
            {
                OnOption_NameChanging(value);
                ReportPropertyChanging("Option_Name");
                _Option_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Option_Name");
                OnOption_NameChanged();
            }
        }
        private global::System.String _Option_Name;
        partial void OnOption_NameChanging(global::System.String value);
        partial void OnOption_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMMENT_OPTION", "COMMENT")]
        public EntityCollection<COMMENT> COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMMENT>("MangoModel.FK_COMMENT_OPTION", "COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMMENT>("MangoModel.FK_COMMENT_OPTION", "COMMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="PACE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PACE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PACE object.
        /// </summary>
        /// <param name="pace_ID">Initial value of the Pace_ID property.</param>
        /// <param name="pace_Area_ID">Initial value of the Pace_Area_ID property.</param>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        public static PACE CreatePACE(global::System.Int32 pace_ID, global::System.Int32 pace_Area_ID, global::System.Int64 appraisal_Header_ID, global::System.Decimal score)
        {
            PACE pACE = new PACE();
            pACE.Pace_ID = pace_ID;
            pACE.Pace_Area_ID = pace_Area_ID;
            pACE.Appraisal_Header_ID = appraisal_Header_ID;
            pACE.Score = score;
            return pACE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pace_ID
        {
            get
            {
                return _Pace_ID;
            }
            set
            {
                if (_Pace_ID != value)
                {
                    OnPace_IDChanging(value);
                    ReportPropertyChanging("Pace_ID");
                    _Pace_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Pace_ID");
                    OnPace_IDChanged();
                }
            }
        }
        private global::System.Int32 _Pace_ID;
        partial void OnPace_IDChanging(global::System.Int32 value);
        partial void OnPace_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pace_Area_ID
        {
            get
            {
                return _Pace_Area_ID;
            }
            set
            {
                OnPace_Area_IDChanging(value);
                ReportPropertyChanging("Pace_Area_ID");
                _Pace_Area_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pace_Area_ID");
                OnPace_Area_IDChanged();
            }
        }
        private global::System.Int32 _Pace_Area_ID;
        partial void OnPace_Area_IDChanging(global::System.Int32 value);
        partial void OnPace_Area_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                OnAppraisal_Header_IDChanging(value);
                ReportPropertyChanging("Appraisal_Header_ID");
                _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Appraisal_Header_ID");
                OnAppraisal_Header_IDChanged();
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Decimal> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Decimal _Score;
        partial void OnScoreChanging(global::System.Decimal value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Justification
        {
            get
            {
                return _Justification;
            }
            set
            {
                OnJustificationChanging(value);
                ReportPropertyChanging("Justification");
                _Justification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Justification");
                OnJustificationChanged();
            }
        }
        private global::System.String _Justification;
        partial void OnJustificationChanging(global::System.String value);
        partial void OnJustificationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_PACE_APPRAISAL_HEADER", "APPRAISAL_HEADER")]
        public APPRAISAL_HEADER APPRAISAL_HEADER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_PACE_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_PACE_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPRAISAL_HEADER> APPRAISAL_HEADERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_PACE_APPRAISAL_HEADER", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_PACE_APPRAISAL_HEADER", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_PACE_PACE_AREA", "PACE_AREA")]
        public PACE_AREA PACE_AREA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PACE_AREA>("MangoModel.FK_PACE_PACE_AREA", "PACE_AREA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PACE_AREA>("MangoModel.FK_PACE_PACE_AREA", "PACE_AREA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PACE_AREA> PACE_AREAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PACE_AREA>("MangoModel.FK_PACE_PACE_AREA", "PACE_AREA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PACE_AREA>("MangoModel.FK_PACE_PACE_AREA", "PACE_AREA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="PACE_AREA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PACE_AREA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PACE_AREA object.
        /// </summary>
        /// <param name="pace_Area_ID">Initial value of the Pace_Area_ID property.</param>
        /// <param name="pace_Name">Initial value of the Pace_Name property.</param>
        /// <param name="pace_Description">Initial value of the Pace_Description property.</param>
        public static PACE_AREA CreatePACE_AREA(global::System.Int32 pace_Area_ID, global::System.String pace_Name, global::System.String pace_Description)
        {
            PACE_AREA pACE_AREA = new PACE_AREA();
            pACE_AREA.Pace_Area_ID = pace_Area_ID;
            pACE_AREA.Pace_Name = pace_Name;
            pACE_AREA.Pace_Description = pace_Description;
            return pACE_AREA;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pace_Area_ID
        {
            get
            {
                return _Pace_Area_ID;
            }
            set
            {
                if (_Pace_Area_ID != value)
                {
                    OnPace_Area_IDChanging(value);
                    ReportPropertyChanging("Pace_Area_ID");
                    _Pace_Area_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Pace_Area_ID");
                    OnPace_Area_IDChanged();
                }
            }
        }
        private global::System.Int32 _Pace_Area_ID;
        partial void OnPace_Area_IDChanging(global::System.Int32 value);
        partial void OnPace_Area_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pace_Name
        {
            get
            {
                return _Pace_Name;
            }
            set
            {
                OnPace_NameChanging(value);
                ReportPropertyChanging("Pace_Name");
                _Pace_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pace_Name");
                OnPace_NameChanged();
            }
        }
        private global::System.String _Pace_Name;
        partial void OnPace_NameChanging(global::System.String value);
        partial void OnPace_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pace_Description
        {
            get
            {
                return _Pace_Description;
            }
            set
            {
                OnPace_DescriptionChanging(value);
                ReportPropertyChanging("Pace_Description");
                _Pace_Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pace_Description");
                OnPace_DescriptionChanged();
            }
        }
        private global::System.String _Pace_Description;
        partial void OnPace_DescriptionChanging(global::System.String value);
        partial void OnPace_DescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_CURRENT_PACE_AREA_PACE_AREA", "CURRENT_PACE_AREA")]
        public CURRENT_PACE_AREA CURRENT_PACE_AREA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENT_PACE_AREA>("MangoModel.FK_CURRENT_PACE_AREA_PACE_AREA", "CURRENT_PACE_AREA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENT_PACE_AREA>("MangoModel.FK_CURRENT_PACE_AREA_PACE_AREA", "CURRENT_PACE_AREA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENT_PACE_AREA> CURRENT_PACE_AREAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENT_PACE_AREA>("MangoModel.FK_CURRENT_PACE_AREA_PACE_AREA", "CURRENT_PACE_AREA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENT_PACE_AREA>("MangoModel.FK_CURRENT_PACE_AREA_PACE_AREA", "CURRENT_PACE_AREA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_PACE_PACE_AREA", "PACE")]
        public EntityCollection<PACE> PACE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PACE>("MangoModel.FK_PACE_PACE_AREA", "PACE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PACE>("MangoModel.FK_PACE_PACE_AREA", "PACE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="PACE_RATING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PACE_RATING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PACE_RATING object.
        /// </summary>
        /// <param name="pace_Rating_ID">Initial value of the Pace_Rating_ID property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="grade">Initial value of the Grade property.</param>
        public static PACE_RATING CreatePACE_RATING(global::System.Int32 pace_Rating_ID, global::System.String rating, global::System.Byte from, global::System.Byte to, global::System.Byte grade)
        {
            PACE_RATING pACE_RATING = new PACE_RATING();
            pACE_RATING.Pace_Rating_ID = pace_Rating_ID;
            pACE_RATING.Rating = rating;
            pACE_RATING.From = from;
            pACE_RATING.To = to;
            pACE_RATING.Grade = grade;
            return pACE_RATING;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pace_Rating_ID
        {
            get
            {
                return _Pace_Rating_ID;
            }
            set
            {
                if (_Pace_Rating_ID != value)
                {
                    OnPace_Rating_IDChanging(value);
                    ReportPropertyChanging("Pace_Rating_ID");
                    _Pace_Rating_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Pace_Rating_ID");
                    OnPace_Rating_IDChanged();
                }
            }
        }
        private global::System.Int32 _Pace_Rating_ID;
        partial void OnPace_Rating_IDChanging(global::System.Int32 value);
        partial void OnPace_Rating_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.String _Rating;
        partial void OnRatingChanging(global::System.String value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.Byte _From;
        partial void OnFromChanging(global::System.Byte value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private global::System.Byte _To;
        partial void OnToChanging(global::System.Byte value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Grade
        {
            get
            {
                return _Grade;
            }
            set
            {
                OnGradeChanging(value);
                ReportPropertyChanging("Grade");
                _Grade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grade");
                OnGradeChanged();
            }
        }
        private global::System.Byte _Grade;
        partial void OnGradeChanging(global::System.Byte value);
        partial void OnGradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="PERIOD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PERIOD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PERIOD object.
        /// </summary>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        /// <param name="status_ID">Initial value of the Status_ID property.</param>
        /// <param name="period_Name">Initial value of the Period_Name property.</param>
        /// <param name="span">Initial value of the Span property.</param>
        /// <param name="start_Date">Initial value of the Start_Date property.</param>
        /// <param name="end_Date">Initial value of the End_Date property.</param>
        /// <param name="period_Type_Id">Initial value of the Period_Type_Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static PERIOD CreatePERIOD(global::System.Int32 period_ID, global::System.Byte status_ID, global::System.String period_Name, global::System.Byte span, global::System.DateTime start_Date, global::System.DateTime end_Date, global::System.Int16 period_Type_Id, global::System.Int32 year)
        {
            PERIOD pERIOD = new PERIOD();
            pERIOD.Period_ID = period_ID;
            pERIOD.Status_ID = status_ID;
            pERIOD.Period_Name = period_Name;
            pERIOD.Span = span;
            pERIOD.Start_Date = start_Date;
            pERIOD.End_Date = end_Date;
            pERIOD.Period_Type_Id = period_Type_Id;
            pERIOD.Year = year;
            return pERIOD;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status_ID
        {
            get
            {
                return _Status_ID;
            }
            set
            {
                OnStatus_IDChanging(value);
                ReportPropertyChanging("Status_ID");
                _Status_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status_ID");
                OnStatus_IDChanged();
            }
        }
        private global::System.Byte _Status_ID;
        partial void OnStatus_IDChanging(global::System.Byte value);
        partial void OnStatus_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period_Name
        {
            get
            {
                return _Period_Name;
            }
            set
            {
                OnPeriod_NameChanging(value);
                ReportPropertyChanging("Period_Name");
                _Period_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period_Name");
                OnPeriod_NameChanged();
            }
        }
        private global::System.String _Period_Name;
        partial void OnPeriod_NameChanging(global::System.String value);
        partial void OnPeriod_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Span
        {
            get
            {
                return _Span;
            }
            set
            {
                OnSpanChanging(value);
                ReportPropertyChanging("Span");
                _Span = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Span");
                OnSpanChanged();
            }
        }
        private global::System.Byte _Span;
        partial void OnSpanChanging(global::System.Byte value);
        partial void OnSpanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start_Date
        {
            get
            {
                return _Start_Date;
            }
            set
            {
                OnStart_DateChanging(value);
                ReportPropertyChanging("Start_Date");
                _Start_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start_Date");
                OnStart_DateChanged();
            }
        }
        private global::System.DateTime _Start_Date;
        partial void OnStart_DateChanging(global::System.DateTime value);
        partial void OnStart_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End_Date
        {
            get
            {
                return _End_Date;
            }
            set
            {
                OnEnd_DateChanging(value);
                ReportPropertyChanging("End_Date");
                _End_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End_Date");
                OnEnd_DateChanged();
            }
        }
        private global::System.DateTime _End_Date;
        partial void OnEnd_DateChanging(global::System.DateTime value);
        partial void OnEnd_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Period_Type_Id
        {
            get
            {
                return _Period_Type_Id;
            }
            set
            {
                OnPeriod_Type_IdChanging(value);
                ReportPropertyChanging("Period_Type_Id");
                _Period_Type_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_Type_Id");
                OnPeriod_Type_IdChanged();
            }
        }
        private global::System.Int16 _Period_Type_Id;
        partial void OnPeriod_Type_IdChanging(global::System.Int16 value);
        partial void OnPeriod_Type_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_PERIOD", "APPRAISAL_HEADER")]
        public EntityCollection<APPRAISAL_HEADER> APPRAISAL_HEADER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_PERIOD", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_PERIOD", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_CURRENT_PERIOD_PERIOD", "CURRENT_PERIOD")]
        public CURRENT_PERIOD CURRENT_PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENT_PERIOD>("MangoModel.FK_CURRENT_PERIOD_PERIOD", "CURRENT_PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENT_PERIOD>("MangoModel.FK_CURRENT_PERIOD_PERIOD", "CURRENT_PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENT_PERIOD> CURRENT_PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENT_PERIOD>("MangoModel.FK_CURRENT_PERIOD_PERIOD", "CURRENT_PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENT_PERIOD>("MangoModel.FK_CURRENT_PERIOD_PERIOD", "CURRENT_PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_PERIOD", "INPS")]
        public EntityCollection<INPS> INPS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS>("MangoModel.FK_METRIC_NPS_PERIOD", "INPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS>("MangoModel.FK_METRIC_NPS_PERIOD", "INPS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_RATING_PERIOD", "INPS_RATING")]
        public EntityCollection<INPS_RATING> INPS_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS_RATING>("MangoModel.FK_METRIC_NPS_RATING_PERIOD", "INPS_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS_RATING>("MangoModel.FK_METRIC_NPS_RATING_PERIOD", "INPS_RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_HOD_PERIOD", "JOB_ROLE_HOD")]
        public EntityCollection<JOB_ROLE_HOD> JOB_ROLE_HOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JOB_ROLE_HOD>("MangoModel.FK_JOB_ROLE_HOD_PERIOD", "JOB_ROLE_HOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JOB_ROLE_HOD>("MangoModel.FK_JOB_ROLE_HOD_PERIOD", "JOB_ROLE_HOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_JOB_ROLE_SUPERVISOR_PERIOD", "JOB_ROLE_SUPERVISOR")]
        public EntityCollection<JOB_ROLE_SUPERVISOR> JOB_ROLE_SUPERVISOR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JOB_ROLE_SUPERVISOR>("MangoModel.FK_JOB_ROLE_SUPERVISOR_PERIOD", "JOB_ROLE_SUPERVISOR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JOB_ROLE_SUPERVISOR>("MangoModel.FK_JOB_ROLE_SUPERVISOR_PERIOD", "JOB_ROLE_SUPERVISOR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_PERIOD", "METRIC")]
        public EntityCollection<METRIC> METRIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<METRIC>("MangoModel.FK_METRIC_PERIOD", "METRIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<METRIC>("MangoModel.FK_METRIC_PERIOD", "METRIC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_RATING_PERIOD", "METRIC_RATING")]
        public EntityCollection<METRIC_RATING> METRIC_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<METRIC_RATING>("MangoModel.FK_METRIC_RATING_PERIOD", "METRIC_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<METRIC_RATING>("MangoModel.FK_METRIC_RATING_PERIOD", "METRIC_RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_PERIOD_PERIOD_TYPE", "PERIOD_TYPE")]
        public PERIOD_TYPE PERIOD_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD_TYPE>("MangoModel.FK_PERIOD_PERIOD_TYPE", "PERIOD_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD_TYPE>("MangoModel.FK_PERIOD_PERIOD_TYPE", "PERIOD_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD_TYPE> PERIOD_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD_TYPE>("MangoModel.FK_PERIOD_PERIOD_TYPE", "PERIOD_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD_TYPE>("MangoModel.FK_PERIOD_PERIOD_TYPE", "PERIOD_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_PERIOD_STATUS", "STATUS")]
        public STATUS STATUS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("MangoModel.FK_PERIOD_STATUS", "STATUS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("MangoModel.FK_PERIOD_STATUS", "STATUS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STATUS> STATUSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("MangoModel.FK_PERIOD_STATUS", "STATUS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STATUS>("MangoModel.FK_PERIOD_STATUS", "STATUS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL")]
        public EntityCollection<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL> POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD")]
        public EntityCollection<POTENTIAL_ASSESSMENT_PERIOD> POTENTIAL_ASSESSMENT_PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<POTENTIAL_ASSESSMENT_PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<POTENTIAL_ASSESSMENT_PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE")]
        public EntityCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE> STAFF_COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "STAFF_JOB_ROLE_LEVEL")]
        public EntityCollection<STAFF_JOB_ROLE_LEVEL> STAFF_JOB_ROLE_LEVEL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "STAFF_JOB_ROLE_LEVEL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "STAFF_JOB_ROLE_LEVEL", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LEARNING_PERIOD", "STAFF_LEARNING")]
        public EntityCollection<STAFF_LEARNING> STAFF_LEARNING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_LEARNING>("MangoModel.FK_STAFF_LEARNING_PERIOD", "STAFF_LEARNING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_LEARNING>("MangoModel.FK_STAFF_LEARNING_PERIOD", "STAFF_LEARNING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LOCATION_PERIOD", "STAFF_LOCATION")]
        public EntityCollection<STAFF_LOCATION> STAFF_LOCATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_LOCATION>("MangoModel.FK_STAFF_LOCATION_PERIOD", "STAFF_LOCATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_LOCATION>("MangoModel.FK_STAFF_LOCATION_PERIOD", "STAFF_LOCATION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="PERIOD_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PERIOD_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PERIOD_TYPE object.
        /// </summary>
        /// <param name="period_Type_Id">Initial value of the Period_Type_Id property.</param>
        /// <param name="period_Type_Name">Initial value of the Period_Type_Name property.</param>
        public static PERIOD_TYPE CreatePERIOD_TYPE(global::System.Int16 period_Type_Id, global::System.String period_Type_Name)
        {
            PERIOD_TYPE pERIOD_TYPE = new PERIOD_TYPE();
            pERIOD_TYPE.Period_Type_Id = period_Type_Id;
            pERIOD_TYPE.Period_Type_Name = period_Type_Name;
            return pERIOD_TYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Period_Type_Id
        {
            get
            {
                return _Period_Type_Id;
            }
            set
            {
                if (_Period_Type_Id != value)
                {
                    OnPeriod_Type_IdChanging(value);
                    ReportPropertyChanging("Period_Type_Id");
                    _Period_Type_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_Type_Id");
                    OnPeriod_Type_IdChanged();
                }
            }
        }
        private global::System.Int16 _Period_Type_Id;
        partial void OnPeriod_Type_IdChanging(global::System.Int16 value);
        partial void OnPeriod_Type_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period_Type_Name
        {
            get
            {
                return _Period_Type_Name;
            }
            set
            {
                OnPeriod_Type_NameChanging(value);
                ReportPropertyChanging("Period_Type_Name");
                _Period_Type_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period_Type_Name");
                OnPeriod_Type_NameChanged();
            }
        }
        private global::System.String _Period_Type_Name;
        partial void OnPeriod_Type_NameChanging(global::System.String value);
        partial void OnPeriod_Type_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Period_Type_Description
        {
            get
            {
                return _Period_Type_Description;
            }
            set
            {
                OnPeriod_Type_DescriptionChanging(value);
                ReportPropertyChanging("Period_Type_Description");
                _Period_Type_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Period_Type_Description");
                OnPeriod_Type_DescriptionChanged();
            }
        }
        private global::System.String _Period_Type_Description;
        partial void OnPeriod_Type_DescriptionChanging(global::System.String value);
        partial void OnPeriod_Type_DescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_PERIOD_PERIOD_TYPE", "PERIOD")]
        public EntityCollection<PERIOD> PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PERIOD>("MangoModel.FK_PERIOD_PERIOD_TYPE", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PERIOD>("MangoModel.FK_PERIOD_PERIOD_TYPE", "PERIOD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="POTENTIAL_ASSESSMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class POTENTIAL_ASSESSMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new POTENTIAL_ASSESSMENT object.
        /// </summary>
        /// <param name="potential_Assessment_Id">Initial value of the Potential_Assessment_Id property.</param>
        /// <param name="skill">Initial value of the Skill property.</param>
        /// <param name="potential_Indicator">Initial value of the Potential_Indicator property.</param>
        public static POTENTIAL_ASSESSMENT CreatePOTENTIAL_ASSESSMENT(global::System.Int32 potential_Assessment_Id, global::System.String skill, global::System.String potential_Indicator)
        {
            POTENTIAL_ASSESSMENT pOTENTIAL_ASSESSMENT = new POTENTIAL_ASSESSMENT();
            pOTENTIAL_ASSESSMENT.Potential_Assessment_Id = potential_Assessment_Id;
            pOTENTIAL_ASSESSMENT.Skill = skill;
            pOTENTIAL_ASSESSMENT.Potential_Indicator = potential_Indicator;
            return pOTENTIAL_ASSESSMENT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Potential_Assessment_Id
        {
            get
            {
                return _Potential_Assessment_Id;
            }
            set
            {
                if (_Potential_Assessment_Id != value)
                {
                    OnPotential_Assessment_IdChanging(value);
                    ReportPropertyChanging("Potential_Assessment_Id");
                    _Potential_Assessment_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Potential_Assessment_Id");
                    OnPotential_Assessment_IdChanged();
                }
            }
        }
        private global::System.Int32 _Potential_Assessment_Id;
        partial void OnPotential_Assessment_IdChanging(global::System.Int32 value);
        partial void OnPotential_Assessment_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Skill
        {
            get
            {
                return _Skill;
            }
            set
            {
                OnSkillChanging(value);
                ReportPropertyChanging("Skill");
                _Skill = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Skill");
                OnSkillChanged();
            }
        }
        private global::System.String _Skill;
        partial void OnSkillChanging(global::System.String value);
        partial void OnSkillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Potential_Indicator
        {
            get
            {
                return _Potential_Indicator;
            }
            set
            {
                OnPotential_IndicatorChanging(value);
                ReportPropertyChanging("Potential_Indicator");
                _Potential_Indicator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Potential_Indicator");
                OnPotential_IndicatorChanged();
            }
        }
        private global::System.String _Potential_Indicator;
        partial void OnPotential_IndicatorChanging(global::System.String value);
        partial void OnPotential_IndicatorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT_PERIOD")]
        public EntityCollection<POTENTIAL_ASSESSMENT_PERIOD> POTENTIAL_ASSESSMENT_PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<POTENTIAL_ASSESSMENT_PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT_PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<POTENTIAL_ASSESSMENT_PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT_PERIOD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL object.
        /// </summary>
        /// <param name="potential_Assessment_Job_Role_Level_Id">Initial value of the Potential_Assessment_Job_Role_Level_Id property.</param>
        /// <param name="job_Role_Level_Id">Initial value of the Job_Role_Level_Id property.</param>
        /// <param name="period_Id">Initial value of the Period_Id property.</param>
        public static POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL CreatePOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL(global::System.Int32 potential_Assessment_Job_Role_Level_Id, global::System.String job_Role_Level_Id, global::System.Int32 period_Id)
        {
            POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL pOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL = new POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL();
            pOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL.Potential_Assessment_Job_Role_Level_Id = potential_Assessment_Job_Role_Level_Id;
            pOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL.Job_Role_Level_Id = job_Role_Level_Id;
            pOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL.Period_Id = period_Id;
            return pOTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Potential_Assessment_Job_Role_Level_Id
        {
            get
            {
                return _Potential_Assessment_Job_Role_Level_Id;
            }
            set
            {
                if (_Potential_Assessment_Job_Role_Level_Id != value)
                {
                    OnPotential_Assessment_Job_Role_Level_IdChanging(value);
                    ReportPropertyChanging("Potential_Assessment_Job_Role_Level_Id");
                    _Potential_Assessment_Job_Role_Level_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Potential_Assessment_Job_Role_Level_Id");
                    OnPotential_Assessment_Job_Role_Level_IdChanged();
                }
            }
        }
        private global::System.Int32 _Potential_Assessment_Job_Role_Level_Id;
        partial void OnPotential_Assessment_Job_Role_Level_IdChanging(global::System.Int32 value);
        partial void OnPotential_Assessment_Job_Role_Level_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_Id
        {
            get
            {
                return _Job_Role_Level_Id;
            }
            set
            {
                OnJob_Role_Level_IdChanging(value);
                ReportPropertyChanging("Job_Role_Level_Id");
                _Job_Role_Level_Id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Job_Role_Level_Id");
                OnJob_Role_Level_IdChanged();
            }
        }
        private global::System.String _Job_Role_Level_Id;
        partial void OnJob_Role_Level_IdChanging(global::System.String value);
        partial void OnJob_Role_Level_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_Id
        {
            get
            {
                return _Period_Id;
            }
            set
            {
                OnPeriod_IdChanging(value);
                ReportPropertyChanging("Period_Id");
                _Period_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_Id");
                OnPeriod_IdChanged();
            }
        }
        private global::System.Int32 _Period_Id;
        partial void OnPeriod_IdChanging(global::System.Int32 value);
        partial void OnPeriod_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL")]
        public JOB_ROLE_LEVEL JOB_ROLE_LEVEL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE_LEVEL>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE_LEVEL>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JOB_ROLE_LEVEL> JOB_ROLE_LEVELReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE_LEVEL>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JOB_ROLE_LEVEL>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_JOB_ROLE_LEVEL_PERIOD", "PERIOD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="POTENTIAL_ASSESSMENT_PERIOD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class POTENTIAL_ASSESSMENT_PERIOD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new POTENTIAL_ASSESSMENT_PERIOD object.
        /// </summary>
        /// <param name="potential_Assessment_Period_Id">Initial value of the Potential_Assessment_Period_Id property.</param>
        /// <param name="potential_Assessment_Id">Initial value of the Potential_Assessment_Id property.</param>
        /// <param name="period_Id">Initial value of the Period_Id property.</param>
        public static POTENTIAL_ASSESSMENT_PERIOD CreatePOTENTIAL_ASSESSMENT_PERIOD(global::System.Int32 potential_Assessment_Period_Id, global::System.Int32 potential_Assessment_Id, global::System.Int32 period_Id)
        {
            POTENTIAL_ASSESSMENT_PERIOD pOTENTIAL_ASSESSMENT_PERIOD = new POTENTIAL_ASSESSMENT_PERIOD();
            pOTENTIAL_ASSESSMENT_PERIOD.Potential_Assessment_Period_Id = potential_Assessment_Period_Id;
            pOTENTIAL_ASSESSMENT_PERIOD.Potential_Assessment_Id = potential_Assessment_Id;
            pOTENTIAL_ASSESSMENT_PERIOD.Period_Id = period_Id;
            return pOTENTIAL_ASSESSMENT_PERIOD;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Potential_Assessment_Period_Id
        {
            get
            {
                return _Potential_Assessment_Period_Id;
            }
            set
            {
                if (_Potential_Assessment_Period_Id != value)
                {
                    OnPotential_Assessment_Period_IdChanging(value);
                    ReportPropertyChanging("Potential_Assessment_Period_Id");
                    _Potential_Assessment_Period_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Potential_Assessment_Period_Id");
                    OnPotential_Assessment_Period_IdChanged();
                }
            }
        }
        private global::System.Int32 _Potential_Assessment_Period_Id;
        partial void OnPotential_Assessment_Period_IdChanging(global::System.Int32 value);
        partial void OnPotential_Assessment_Period_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Potential_Assessment_Id
        {
            get
            {
                return _Potential_Assessment_Id;
            }
            set
            {
                OnPotential_Assessment_IdChanging(value);
                ReportPropertyChanging("Potential_Assessment_Id");
                _Potential_Assessment_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Potential_Assessment_Id");
                OnPotential_Assessment_IdChanged();
            }
        }
        private global::System.Int32 _Potential_Assessment_Id;
        partial void OnPotential_Assessment_IdChanging(global::System.Int32 value);
        partial void OnPotential_Assessment_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_Id
        {
            get
            {
                return _Period_Id;
            }
            set
            {
                OnPeriod_IdChanging(value);
                ReportPropertyChanging("Period_Id");
                _Period_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_Id");
                OnPeriod_IdChanged();
            }
        }
        private global::System.Int32 _Period_Id;
        partial void OnPeriod_IdChanging(global::System.Int32 value);
        partial void OnPeriod_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT")]
        public POTENTIAL_ASSESSMENT POTENTIAL_ASSESSMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POTENTIAL_ASSESSMENT>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POTENTIAL_ASSESSMENT>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<POTENTIAL_ASSESSMENT> POTENTIAL_ASSESSMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POTENTIAL_ASSESSMENT>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<POTENTIAL_ASSESSMENT>("MangoModel.FK_POTENTIAL_ASSESSMENT_PERIOD_POTENTIAL_ASSESSMENT", "POTENTIAL_ASSESSMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "STAFF_POTENTIAL_ASSESSMENT")]
        public EntityCollection<STAFF_POTENTIAL_ASSESSMENT> STAFF_POTENTIAL_ASSESSMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_POTENTIAL_ASSESSMENT>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "STAFF_POTENTIAL_ASSESSMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_POTENTIAL_ASSESSMENT>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "STAFF_POTENTIAL_ASSESSMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="RATING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RATING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RATING object.
        /// </summary>
        /// <param name="rating_ID">Initial value of the Rating_ID property.</param>
        /// <param name="rating_Name">Initial value of the Rating_Name property.</param>
        public static RATING CreateRATING(global::System.Byte rating_ID, global::System.Byte rating_Name)
        {
            RATING rATING = new RATING();
            rATING.Rating_ID = rating_ID;
            rATING.Rating_Name = rating_Name;
            return rATING;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_ID
        {
            get
            {
                return _Rating_ID;
            }
            set
            {
                if (_Rating_ID != value)
                {
                    OnRating_IDChanging(value);
                    ReportPropertyChanging("Rating_ID");
                    _Rating_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rating_ID");
                    OnRating_IDChanged();
                }
            }
        }
        private global::System.Byte _Rating_ID;
        partial void OnRating_IDChanging(global::System.Byte value);
        partial void OnRating_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_Name
        {
            get
            {
                return _Rating_Name;
            }
            set
            {
                OnRating_NameChanging(value);
                ReportPropertyChanging("Rating_Name");
                _Rating_Name = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating_Name");
                OnRating_NameChanged();
            }
        }
        private global::System.Byte _Rating_Name;
        partial void OnRating_NameChanging(global::System.Byte value);
        partial void OnRating_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_RATING_RATING", "INPS_RATING")]
        public EntityCollection<INPS_RATING> INPS_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS_RATING>("MangoModel.FK_METRIC_NPS_RATING_RATING", "INPS_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS_RATING>("MangoModel.FK_METRIC_NPS_RATING_RATING", "INPS_RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_RATING_RATING", "METRIC_RATING")]
        public EntityCollection<METRIC_RATING> METRIC_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<METRIC_RATING>("MangoModel.FK_METRIC_RATING_RATING", "METRIC_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<METRIC_RATING>("MangoModel.FK_METRIC_RATING_RATING", "METRIC_RATING", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="RATING_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RATING_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RATING_TYPE object.
        /// </summary>
        /// <param name="rating_Type_ID">Initial value of the Rating_Type_ID property.</param>
        /// <param name="rating_Name">Initial value of the Rating_Name property.</param>
        public static RATING_TYPE CreateRATING_TYPE(global::System.Byte rating_Type_ID, global::System.String rating_Name)
        {
            RATING_TYPE rATING_TYPE = new RATING_TYPE();
            rATING_TYPE.Rating_Type_ID = rating_Type_ID;
            rATING_TYPE.Rating_Name = rating_Name;
            return rATING_TYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rating_Type_ID
        {
            get
            {
                return _Rating_Type_ID;
            }
            set
            {
                if (_Rating_Type_ID != value)
                {
                    OnRating_Type_IDChanging(value);
                    ReportPropertyChanging("Rating_Type_ID");
                    _Rating_Type_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rating_Type_ID");
                    OnRating_Type_IDChanged();
                }
            }
        }
        private global::System.Byte _Rating_Type_ID;
        partial void OnRating_Type_IDChanging(global::System.Byte value);
        partial void OnRating_Type_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rating_Name
        {
            get
            {
                return _Rating_Name;
            }
            set
            {
                OnRating_NameChanging(value);
                ReportPropertyChanging("Rating_Name");
                _Rating_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Rating_Name");
                OnRating_NameChanged();
            }
        }
        private global::System.String _Rating_Name;
        partial void OnRating_NameChanging(global::System.String value);
        partial void OnRating_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_RATING_RATING_TYPE", "INPS_RATING")]
        public EntityCollection<INPS_RATING> INPS_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS_RATING>("MangoModel.FK_METRIC_NPS_RATING_RATING_TYPE", "INPS_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS_RATING>("MangoModel.FK_METRIC_NPS_RATING_RATING_TYPE", "INPS_RATING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_RATING_RATING_TYPE", "METRIC_RATING")]
        public EntityCollection<METRIC_RATING> METRIC_RATING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<METRIC_RATING>("MangoModel.FK_METRIC_RATING_RATING_TYPE", "METRIC_RATING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<METRIC_RATING>("MangoModel.FK_METRIC_RATING_RATING_TYPE", "METRIC_RATING", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="RECOMMENDATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RECOMMENDATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RECOMMENDATION object.
        /// </summary>
        /// <param name="recommendation_ID">Initial value of the Recommendation_ID property.</param>
        /// <param name="recommendation_Name">Initial value of the Recommendation_Name property.</param>
        public static RECOMMENDATION CreateRECOMMENDATION(global::System.Byte recommendation_ID, global::System.String recommendation_Name)
        {
            RECOMMENDATION rECOMMENDATION = new RECOMMENDATION();
            rECOMMENDATION.Recommendation_ID = recommendation_ID;
            rECOMMENDATION.Recommendation_Name = recommendation_Name;
            return rECOMMENDATION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Recommendation_ID
        {
            get
            {
                return _Recommendation_ID;
            }
            set
            {
                if (_Recommendation_ID != value)
                {
                    OnRecommendation_IDChanging(value);
                    ReportPropertyChanging("Recommendation_ID");
                    _Recommendation_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Recommendation_ID");
                    OnRecommendation_IDChanged();
                }
            }
        }
        private global::System.Byte _Recommendation_ID;
        partial void OnRecommendation_IDChanging(global::System.Byte value);
        partial void OnRecommendation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Recommendation_Name
        {
            get
            {
                return _Recommendation_Name;
            }
            set
            {
                OnRecommendation_NameChanging(value);
                ReportPropertyChanging("Recommendation_Name");
                _Recommendation_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Recommendation_Name");
                OnRecommendation_NameChanged();
            }
        }
        private global::System.String _Recommendation_Name;
        partial void OnRecommendation_NameChanging(global::System.String value);
        partial void OnRecommendation_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_COMMENT_RECOMMENDATION", "COMMENT")]
        public EntityCollection<COMMENT> COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COMMENT>("MangoModel.FK_COMMENT_RECOMMENDATION", "COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COMMENT>("MangoModel.FK_COMMENT_RECOMMENDATION", "COMMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="RIGHT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RIGHT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RIGHT object.
        /// </summary>
        /// <param name="right_Id">Initial value of the Right_Id property.</param>
        /// <param name="right_Name">Initial value of the Right_Name property.</param>
        public static RIGHT CreateRIGHT(global::System.Int32 right_Id, global::System.String right_Name)
        {
            RIGHT rIGHT = new RIGHT();
            rIGHT.Right_Id = right_Id;
            rIGHT.Right_Name = right_Name;
            return rIGHT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Right_Id
        {
            get
            {
                return _Right_Id;
            }
            set
            {
                if (_Right_Id != value)
                {
                    OnRight_IdChanging(value);
                    ReportPropertyChanging("Right_Id");
                    _Right_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Right_Id");
                    OnRight_IdChanged();
                }
            }
        }
        private global::System.Int32 _Right_Id;
        partial void OnRight_IdChanging(global::System.Int32 value);
        partial void OnRight_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Right_Name
        {
            get
            {
                return _Right_Name;
            }
            set
            {
                OnRight_NameChanging(value);
                ReportPropertyChanging("Right_Name");
                _Right_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Right_Name");
                OnRight_NameChanged();
            }
        }
        private global::System.String _Right_Name;
        partial void OnRight_NameChanging(global::System.String value);
        partial void OnRight_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Right_Description
        {
            get
            {
                return _Right_Description;
            }
            set
            {
                OnRight_DescriptionChanging(value);
                ReportPropertyChanging("Right_Description");
                _Right_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Right_Description");
                OnRight_DescriptionChanged();
            }
        }
        private global::System.String _Right_Description;
        partial void OnRight_DescriptionChanging(global::System.String value);
        partial void OnRight_DescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_ROLE_RIGHT_RIGHT", "ROLE_RIGHT")]
        public EntityCollection<ROLE_RIGHT> ROLE_RIGHT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROLE_RIGHT>("MangoModel.FK_ROLE_RIGHT_RIGHT", "ROLE_RIGHT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROLE_RIGHT>("MangoModel.FK_ROLE_RIGHT_RIGHT", "ROLE_RIGHT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROLE object.
        /// </summary>
        /// <param name="role_Id">Initial value of the Role_Id property.</param>
        /// <param name="role_Name">Initial value of the Role_Name property.</param>
        public static ROLE CreateROLE(global::System.Int32 role_Id, global::System.String role_Name)
        {
            ROLE rOLE = new ROLE();
            rOLE.Role_Id = role_Id;
            rOLE.Role_Name = role_Name;
            return rOLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Role_Id
        {
            get
            {
                return _Role_Id;
            }
            set
            {
                if (_Role_Id != value)
                {
                    OnRole_IdChanging(value);
                    ReportPropertyChanging("Role_Id");
                    _Role_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Role_Id");
                    OnRole_IdChanged();
                }
            }
        }
        private global::System.Int32 _Role_Id;
        partial void OnRole_IdChanging(global::System.Int32 value);
        partial void OnRole_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role_Name
        {
            get
            {
                return _Role_Name;
            }
            set
            {
                OnRole_NameChanging(value);
                ReportPropertyChanging("Role_Name");
                _Role_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role_Name");
                OnRole_NameChanged();
            }
        }
        private global::System.String _Role_Name;
        partial void OnRole_NameChanging(global::System.String value);
        partial void OnRole_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Role_Description
        {
            get
            {
                return _Role_Description;
            }
            set
            {
                OnRole_DescriptionChanging(value);
                ReportPropertyChanging("Role_Description");
                _Role_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Role_Description");
                OnRole_DescriptionChanged();
            }
        }
        private global::System.String _Role_Description;
        partial void OnRole_DescriptionChanging(global::System.String value);
        partial void OnRole_DescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_ROLE_RIGHT_ROLE", "ROLE_RIGHT")]
        public EntityCollection<ROLE_RIGHT> ROLE_RIGHT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROLE_RIGHT>("MangoModel.FK_ROLE_RIGHT_ROLE", "ROLE_RIGHT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROLE_RIGHT>("MangoModel.FK_ROLE_RIGHT_ROLE", "ROLE_RIGHT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_ROLE", "STAFF")]
        public EntityCollection<STAFF> STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF>("MangoModel.FK_STAFF_ROLE", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF>("MangoModel.FK_STAFF_ROLE", "STAFF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="ROLE_RIGHT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROLE_RIGHT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROLE_RIGHT object.
        /// </summary>
        /// <param name="role_Id">Initial value of the Role_Id property.</param>
        /// <param name="right_Id">Initial value of the Right_Id property.</param>
        public static ROLE_RIGHT CreateROLE_RIGHT(global::System.Int32 role_Id, global::System.Int32 right_Id)
        {
            ROLE_RIGHT rOLE_RIGHT = new ROLE_RIGHT();
            rOLE_RIGHT.Role_Id = role_Id;
            rOLE_RIGHT.Right_Id = right_Id;
            return rOLE_RIGHT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Role_Id
        {
            get
            {
                return _Role_Id;
            }
            set
            {
                if (_Role_Id != value)
                {
                    OnRole_IdChanging(value);
                    ReportPropertyChanging("Role_Id");
                    _Role_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Role_Id");
                    OnRole_IdChanged();
                }
            }
        }
        private global::System.Int32 _Role_Id;
        partial void OnRole_IdChanging(global::System.Int32 value);
        partial void OnRole_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Right_Id
        {
            get
            {
                return _Right_Id;
            }
            set
            {
                if (_Right_Id != value)
                {
                    OnRight_IdChanging(value);
                    ReportPropertyChanging("Right_Id");
                    _Right_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Right_Id");
                    OnRight_IdChanged();
                }
            }
        }
        private global::System.Int32 _Right_Id;
        partial void OnRight_IdChanging(global::System.Int32 value);
        partial void OnRight_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_ROLE_RIGHT_RIGHT", "RIGHT")]
        public RIGHT RIGHT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RIGHT>("MangoModel.FK_ROLE_RIGHT_RIGHT", "RIGHT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RIGHT>("MangoModel.FK_ROLE_RIGHT_RIGHT", "RIGHT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RIGHT> RIGHTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RIGHT>("MangoModel.FK_ROLE_RIGHT_RIGHT", "RIGHT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RIGHT>("MangoModel.FK_ROLE_RIGHT_RIGHT", "RIGHT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_ROLE_RIGHT_ROLE", "ROLE")]
        public ROLE ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("MangoModel.FK_ROLE_RIGHT_ROLE", "ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("MangoModel.FK_ROLE_RIGHT_ROLE", "ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ROLE> ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("MangoModel.FK_ROLE_RIGHT_ROLE", "ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ROLE>("MangoModel.FK_ROLE_RIGHT_ROLE", "ROLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="last_Name">Initial value of the Last_Name property.</param>
        /// <param name="first_Name">Initial value of the First_Name property.</param>
        /// <param name="login_Name">Initial value of the Login_Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="role_Id">Initial value of the Role_Id property.</param>
        /// <param name="company_Id">Initial value of the Company_Id property.</param>
        public static STAFF CreateSTAFF(global::System.String staff_ID, global::System.String last_Name, global::System.String first_Name, global::System.String login_Name, global::System.String email, global::System.Int32 role_Id, global::System.Byte company_Id)
        {
            STAFF sTAFF = new STAFF();
            sTAFF.Staff_ID = staff_ID;
            sTAFF.Last_Name = last_Name;
            sTAFF.First_Name = first_Name;
            sTAFF.Login_Name = login_Name;
            sTAFF.Email = email;
            sTAFF.Role_Id = role_Id;
            sTAFF.Company_Id = company_Id;
            return sTAFF;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Last_Name
        {
            get
            {
                return _Last_Name;
            }
            set
            {
                OnLast_NameChanging(value);
                ReportPropertyChanging("Last_Name");
                _Last_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Last_Name");
                OnLast_NameChanged();
            }
        }
        private global::System.String _Last_Name;
        partial void OnLast_NameChanging(global::System.String value);
        partial void OnLast_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String First_Name
        {
            get
            {
                return _First_Name;
            }
            set
            {
                OnFirst_NameChanging(value);
                ReportPropertyChanging("First_Name");
                _First_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("First_Name");
                OnFirst_NameChanged();
            }
        }
        private global::System.String _First_Name;
        partial void OnFirst_NameChanging(global::System.String value);
        partial void OnFirst_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Other_Name
        {
            get
            {
                return _Other_Name;
            }
            set
            {
                OnOther_NameChanging(value);
                ReportPropertyChanging("Other_Name");
                _Other_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Other_Name");
                OnOther_NameChanged();
            }
        }
        private global::System.String _Other_Name;
        partial void OnOther_NameChanging(global::System.String value);
        partial void OnOther_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login_Name
        {
            get
            {
                return _Login_Name;
            }
            set
            {
                OnLogin_NameChanging(value);
                ReportPropertyChanging("Login_Name");
                _Login_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login_Name");
                OnLogin_NameChanged();
            }
        }
        private global::System.String _Login_Name;
        partial void OnLogin_NameChanging(global::System.String value);
        partial void OnLogin_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Role_Id
        {
            get
            {
                return _Role_Id;
            }
            set
            {
                OnRole_IdChanging(value);
                ReportPropertyChanging("Role_Id");
                _Role_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Role_Id");
                OnRole_IdChanged();
            }
        }
        private global::System.Int32 _Role_Id;
        partial void OnRole_IdChanging(global::System.Int32 value);
        partial void OnRole_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Is_Active
        {
            get
            {
                return _Is_Active;
            }
            set
            {
                OnIs_ActiveChanging(value);
                ReportPropertyChanging("Is_Active");
                _Is_Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is_Active");
                OnIs_ActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Is_Active;
        partial void OnIs_ActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIs_ActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_Id
        {
            get
            {
                return _Company_Id;
            }
            set
            {
                OnCompany_IdChanging(value);
                ReportPropertyChanging("Company_Id");
                _Company_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Company_Id");
                OnCompany_IdChanged();
            }
        }
        private global::System.Byte _Company_Id;
        partial void OnCompany_IdChanging(global::System.Byte value);
        partial void OnCompany_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF3", "APPRAISAL_HEADER")]
        public EntityCollection<APPRAISAL_HEADER> APPRAISAL_HEADER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_STAFF3", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_STAFF3", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF4", "APPRAISAL_HEADER")]
        public EntityCollection<APPRAISAL_HEADER> APPRAISAL_HEADER1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_STAFF4", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_STAFF4", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_STAFF5", "APPRAISAL_HEADER")]
        public EntityCollection<APPRAISAL_HEADER> APPRAISAL_HEADER2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_STAFF5", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_STAFF5", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_COMPANY", "COMPANY")]
        public COMPANY COMPANY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_STAFF_COMPANY", "COMPANY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_STAFF_COMPANY", "COMPANY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY> COMPANYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY>("MangoModel.FK_STAFF_COMPANY", "COMPANY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY>("MangoModel.FK_STAFF_COMPANY", "COMPANY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_METRIC_NPS_STAFF", "INPS")]
        public EntityCollection<INPS> INPS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INPS>("MangoModel.FK_METRIC_NPS_STAFF", "INPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INPS>("MangoModel.FK_METRIC_NPS_STAFF", "INPS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_ROLE", "ROLE")]
        public ROLE ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("MangoModel.FK_STAFF_ROLE", "ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("MangoModel.FK_STAFF_ROLE", "ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ROLE> ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("MangoModel.FK_STAFF_ROLE", "ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ROLE>("MangoModel.FK_STAFF_ROLE", "ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE")]
        public EntityCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE> STAFF_COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF_COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF_JOB_ROLE_LEVEL")]
        public EntityCollection<STAFF_JOB_ROLE_LEVEL> STAFF_JOB_ROLE_LEVEL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF_JOB_ROLE_LEVEL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF_JOB_ROLE_LEVEL", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LEARNING_STAFF", "STAFF_LEARNING")]
        public EntityCollection<STAFF_LEARNING> STAFF_LEARNING
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_LEARNING>("MangoModel.FK_STAFF_LEARNING_STAFF", "STAFF_LEARNING");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_LEARNING>("MangoModel.FK_STAFF_LEARNING_STAFF", "STAFF_LEARNING", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LOCATION_STAFF", "STAFF_LOCATION")]
        public EntityCollection<STAFF_LOCATION> STAFF_LOCATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STAFF_LOCATION>("MangoModel.FK_STAFF_LOCATION_STAFF", "STAFF_LOCATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STAFF_LOCATION>("MangoModel.FK_STAFF_LOCATION_STAFF", "STAFF_LOCATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LOGIN_STAFF", "STAFF_LOGIN")]
        public STAFF_LOGIN STAFF_LOGIN
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF_LOGIN>("MangoModel.FK_STAFF_LOGIN_STAFF", "STAFF_LOGIN").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF_LOGIN>("MangoModel.FK_STAFF_LOGIN_STAFF", "STAFF_LOGIN").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF_LOGIN> STAFF_LOGINReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF_LOGIN>("MangoModel.FK_STAFF_LOGIN_STAFF", "STAFF_LOGIN");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF_LOGIN>("MangoModel.FK_STAFF_LOGIN_STAFF", "STAFF_LOGIN", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF_COMPANY_DEPARTMENT_JOB_ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF_COMPANY_DEPARTMENT_JOB_ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF_COMPANY_DEPARTMENT_JOB_ROLE object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="company_Department_Job_Role_ID">Initial value of the Company_Department_Job_Role_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static STAFF_COMPANY_DEPARTMENT_JOB_ROLE CreateSTAFF_COMPANY_DEPARTMENT_JOB_ROLE(global::System.String staff_ID, global::System.Int32 company_Department_Job_Role_ID, global::System.Int32 period_ID)
        {
            STAFF_COMPANY_DEPARTMENT_JOB_ROLE sTAFF_COMPANY_DEPARTMENT_JOB_ROLE = new STAFF_COMPANY_DEPARTMENT_JOB_ROLE();
            sTAFF_COMPANY_DEPARTMENT_JOB_ROLE.Staff_ID = staff_ID;
            sTAFF_COMPANY_DEPARTMENT_JOB_ROLE.Company_Department_Job_Role_ID = company_Department_Job_Role_ID;
            sTAFF_COMPANY_DEPARTMENT_JOB_ROLE.Period_ID = period_ID;
            return sTAFF_COMPANY_DEPARTMENT_JOB_ROLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company_Department_Job_Role_ID
        {
            get
            {
                return _Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Company_Department_Job_Role_ID != value)
                {
                    OnCompany_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Company_Department_Job_Role_ID");
                    _Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_Department_Job_Role_ID");
                    OnCompany_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Company_Department_Job_Role_ID;
        partial void OnCompany_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnCompany_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE")]
        public COMPANY_DEPARTMENT_JOB_ROLE COMPANY_DEPARTMENT_JOB_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COMPANY_DEPARTMENT_JOB_ROLE> COMPANY_DEPARTMENT_JOB_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COMPANY_DEPARTMENT_JOB_ROLE>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_COMPANY_DEPARTMENT_JOB_ROLE", "COMPANY_DEPARTMENT_JOB_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF")]
        public STAFF STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_STAFF_COMPANY_DEPARTMENT_JOB_ROLE_STAFF", "STAFF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF_INPS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF_INPS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF_INPS object.
        /// </summary>
        /// <param name="staff_Inps_ID">Initial value of the Staff_Inps_ID property.</param>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="inps_ID">Initial value of the Inps_ID property.</param>
        public static STAFF_INPS CreateSTAFF_INPS(global::System.Int64 staff_Inps_ID, global::System.Int64 appraisal_Header_ID, global::System.Int64 inps_ID)
        {
            STAFF_INPS sTAFF_INPS = new STAFF_INPS();
            sTAFF_INPS.Staff_Inps_ID = staff_Inps_ID;
            sTAFF_INPS.Appraisal_Header_ID = appraisal_Header_ID;
            sTAFF_INPS.Inps_ID = inps_ID;
            return sTAFF_INPS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Staff_Inps_ID
        {
            get
            {
                return _Staff_Inps_ID;
            }
            set
            {
                if (_Staff_Inps_ID != value)
                {
                    OnStaff_Inps_IDChanging(value);
                    ReportPropertyChanging("Staff_Inps_ID");
                    _Staff_Inps_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Inps_ID");
                    OnStaff_Inps_IDChanged();
                }
            }
        }
        private global::System.Int64 _Staff_Inps_ID;
        partial void OnStaff_Inps_IDChanging(global::System.Int64 value);
        partial void OnStaff_Inps_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Staff_Metric_ID
        {
            get
            {
                return _Staff_Metric_ID;
            }
            set
            {
                OnStaff_Metric_IDChanging(value);
                ReportPropertyChanging("Staff_Metric_ID");
                _Staff_Metric_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Staff_Metric_ID");
                OnStaff_Metric_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _Staff_Metric_ID;
        partial void OnStaff_Metric_IDChanging(Nullable<global::System.Int64> value);
        partial void OnStaff_Metric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                OnAppraisal_Header_IDChanging(value);
                ReportPropertyChanging("Appraisal_Header_ID");
                _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Appraisal_Header_ID");
                OnAppraisal_Header_IDChanged();
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Inps_ID
        {
            get
            {
                return _Inps_ID;
            }
            set
            {
                OnInps_IDChanging(value);
                ReportPropertyChanging("Inps_ID");
                _Inps_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inps_ID");
                OnInps_IDChanged();
            }
        }
        private global::System.Int64 _Inps_ID;
        partial void OnInps_IDChanging(global::System.Int64 value);
        partial void OnInps_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_INPS_APPRAISAL_HEADER", "APPRAISAL_HEADER")]
        public APPRAISAL_HEADER APPRAISAL_HEADER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_INPS_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_INPS_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPRAISAL_HEADER> APPRAISAL_HEADERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_INPS_APPRAISAL_HEADER", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_INPS_APPRAISAL_HEADER", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_INPS_INPS", "INPS")]
        public INPS INPS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS>("MangoModel.FK_STAFF_INPS_INPS", "INPS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS>("MangoModel.FK_STAFF_INPS_INPS", "INPS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INPS> INPSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INPS>("MangoModel.FK_STAFF_INPS_INPS", "INPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<INPS>("MangoModel.FK_STAFF_INPS_INPS", "INPS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF_JOB_ROLE_LEVEL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF_JOB_ROLE_LEVEL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF_JOB_ROLE_LEVEL object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="job_Role_Level_ID">Initial value of the Job_Role_Level_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static STAFF_JOB_ROLE_LEVEL CreateSTAFF_JOB_ROLE_LEVEL(global::System.String staff_ID, global::System.String job_Role_Level_ID, global::System.Int32 period_ID)
        {
            STAFF_JOB_ROLE_LEVEL sTAFF_JOB_ROLE_LEVEL = new STAFF_JOB_ROLE_LEVEL();
            sTAFF_JOB_ROLE_LEVEL.Staff_ID = staff_ID;
            sTAFF_JOB_ROLE_LEVEL.Job_Role_Level_ID = job_Role_Level_ID;
            sTAFF_JOB_ROLE_LEVEL.Period_ID = period_ID;
            return sTAFF_JOB_ROLE_LEVEL;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_ID
        {
            get
            {
                return _Job_Role_Level_ID;
            }
            set
            {
                if (_Job_Role_Level_ID != value)
                {
                    OnJob_Role_Level_IDChanging(value);
                    ReportPropertyChanging("Job_Role_Level_ID");
                    _Job_Role_Level_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_ID");
                    OnJob_Role_Level_IDChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_ID;
        partial void OnJob_Role_Level_IDChanging(global::System.String value);
        partial void OnJob_Role_Level_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL")]
        public JOB_ROLE_LEVEL JOB_ROLE_LEVEL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JOB_ROLE_LEVEL> JOB_ROLE_LEVELReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JOB_ROLE_LEVEL>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_JOB_ROLE_LEVEL", "JOB_ROLE_LEVEL", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF")]
        public STAFF STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_STAFF_JOB_ROLE_LEVEL_STAFF", "STAFF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF_LEARNING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF_LEARNING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF_LEARNING object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        /// <param name="training_Score">Initial value of the Training_Score property.</param>
        /// <param name="percentage_Score">Initial value of the Percentage_Score property.</param>
        public static STAFF_LEARNING CreateSTAFF_LEARNING(global::System.String staff_ID, global::System.Int32 period_ID, global::System.Decimal training_Score, global::System.Decimal percentage_Score)
        {
            STAFF_LEARNING sTAFF_LEARNING = new STAFF_LEARNING();
            sTAFF_LEARNING.Staff_ID = staff_ID;
            sTAFF_LEARNING.Period_ID = period_ID;
            sTAFF_LEARNING.Training_Score = training_Score;
            sTAFF_LEARNING.Percentage_Score = percentage_Score;
            return sTAFF_LEARNING;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Training_Score
        {
            get
            {
                return _Training_Score;
            }
            set
            {
                OnTraining_ScoreChanging(value);
                ReportPropertyChanging("Training_Score");
                _Training_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Training_Score");
                OnTraining_ScoreChanged();
            }
        }
        private global::System.Decimal _Training_Score;
        partial void OnTraining_ScoreChanging(global::System.Decimal value);
        partial void OnTraining_ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Percentage_Score
        {
            get
            {
                return _Percentage_Score;
            }
            set
            {
                OnPercentage_ScoreChanging(value);
                ReportPropertyChanging("Percentage_Score");
                _Percentage_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage_Score");
                OnPercentage_ScoreChanged();
            }
        }
        private global::System.Decimal _Percentage_Score;
        partial void OnPercentage_ScoreChanging(global::System.Decimal value);
        partial void OnPercentage_ScoreChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LEARNING_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_LEARNING_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_LEARNING_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_LEARNING_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_STAFF_LEARNING_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LEARNING_STAFF", "STAFF")]
        public STAFF STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LEARNING_STAFF", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LEARNING_STAFF", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LEARNING_STAFF", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_STAFF_LEARNING_STAFF", "STAFF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF_LOCATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF_LOCATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF_LOCATION object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="location_ID">Initial value of the Location_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static STAFF_LOCATION CreateSTAFF_LOCATION(global::System.String staff_ID, global::System.String location_ID, global::System.Int32 period_ID)
        {
            STAFF_LOCATION sTAFF_LOCATION = new STAFF_LOCATION();
            sTAFF_LOCATION.Staff_ID = staff_ID;
            sTAFF_LOCATION.Location_ID = location_ID;
            sTAFF_LOCATION.Period_ID = period_ID;
            return sTAFF_LOCATION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_ID
        {
            get
            {
                return _Location_ID;
            }
            set
            {
                if (_Location_ID != value)
                {
                    OnLocation_IDChanging(value);
                    ReportPropertyChanging("Location_ID");
                    _Location_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_ID");
                    OnLocation_IDChanged();
                }
            }
        }
        private global::System.String _Location_ID;
        partial void OnLocation_IDChanging(global::System.String value);
        partial void OnLocation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LOCATION_LOCATION", "LOCATION")]
        public LOCATION LOCATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LOCATION>("MangoModel.FK_STAFF_LOCATION_LOCATION", "LOCATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LOCATION>("MangoModel.FK_STAFF_LOCATION_LOCATION", "LOCATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LOCATION> LOCATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LOCATION>("MangoModel.FK_STAFF_LOCATION_LOCATION", "LOCATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LOCATION>("MangoModel.FK_STAFF_LOCATION_LOCATION", "LOCATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LOCATION_PERIOD", "PERIOD")]
        public PERIOD PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_LOCATION_PERIOD", "PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_LOCATION_PERIOD", "PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PERIOD> PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PERIOD>("MangoModel.FK_STAFF_LOCATION_PERIOD", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PERIOD>("MangoModel.FK_STAFF_LOCATION_PERIOD", "PERIOD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LOCATION_STAFF", "STAFF")]
        public STAFF STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LOCATION_STAFF", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LOCATION_STAFF", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LOCATION_STAFF", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_STAFF_LOCATION_STAFF", "STAFF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF_LOGIN")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF_LOGIN : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF_LOGIN object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="is_Locked">Initial value of the Is_Locked property.</param>
        /// <param name="is_Activated">Initial value of the Is_Activated property.</param>
        /// <param name="is_First_Logon">Initial value of the Is_First_Logon property.</param>
        public static STAFF_LOGIN CreateSTAFF_LOGIN(global::System.String staff_ID, global::System.String username, global::System.Byte[] password, global::System.Boolean is_Locked, global::System.Boolean is_Activated, global::System.Boolean is_First_Logon)
        {
            STAFF_LOGIN sTAFF_LOGIN = new STAFF_LOGIN();
            sTAFF_LOGIN.Staff_ID = staff_ID;
            sTAFF_LOGIN.Username = username;
            sTAFF_LOGIN.Password = password;
            sTAFF_LOGIN.Is_Locked = is_Locked;
            sTAFF_LOGIN.Is_Activated = is_Activated;
            sTAFF_LOGIN.Is_First_Logon = is_First_Logon;
            return sTAFF_LOGIN;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Password
        {
            get
            {
                return StructuralObject.GetValidValue(_Password);
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.Byte[] _Password;
        partial void OnPasswordChanging(global::System.Byte[] value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is_Locked
        {
            get
            {
                return _Is_Locked;
            }
            set
            {
                OnIs_LockedChanging(value);
                ReportPropertyChanging("Is_Locked");
                _Is_Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is_Locked");
                OnIs_LockedChanged();
            }
        }
        private global::System.Boolean _Is_Locked;
        partial void OnIs_LockedChanging(global::System.Boolean value);
        partial void OnIs_LockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is_Activated
        {
            get
            {
                return _Is_Activated;
            }
            set
            {
                OnIs_ActivatedChanging(value);
                ReportPropertyChanging("Is_Activated");
                _Is_Activated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is_Activated");
                OnIs_ActivatedChanged();
            }
        }
        private global::System.Boolean _Is_Activated;
        partial void OnIs_ActivatedChanging(global::System.Boolean value);
        partial void OnIs_ActivatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is_First_Logon
        {
            get
            {
                return _Is_First_Logon;
            }
            set
            {
                OnIs_First_LogonChanging(value);
                ReportPropertyChanging("Is_First_Logon");
                _Is_First_Logon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is_First_Logon");
                OnIs_First_LogonChanged();
            }
        }
        private global::System.Boolean _Is_First_Logon;
        partial void OnIs_First_LogonChanging(global::System.Boolean value);
        partial void OnIs_First_LogonChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_LOGIN_STAFF", "STAFF")]
        public STAFF STAFF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LOGIN_STAFF", "STAFF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LOGIN_STAFF", "STAFF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STAFF> STAFFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STAFF>("MangoModel.FK_STAFF_LOGIN_STAFF", "STAFF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STAFF>("MangoModel.FK_STAFF_LOGIN_STAFF", "STAFF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF_METRIC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF_METRIC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF_METRIC object.
        /// </summary>
        /// <param name="staff_Metric_ID">Initial value of the Staff_Metric_ID property.</param>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        public static STAFF_METRIC CreateSTAFF_METRIC(global::System.Int64 staff_Metric_ID, global::System.Int64 appraisal_Header_ID, global::System.Int64 metric_ID)
        {
            STAFF_METRIC sTAFF_METRIC = new STAFF_METRIC();
            sTAFF_METRIC.Staff_Metric_ID = staff_Metric_ID;
            sTAFF_METRIC.Appraisal_Header_ID = appraisal_Header_ID;
            sTAFF_METRIC.Metric_ID = metric_ID;
            return sTAFF_METRIC;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Staff_Metric_ID
        {
            get
            {
                return _Staff_Metric_ID;
            }
            set
            {
                if (_Staff_Metric_ID != value)
                {
                    OnStaff_Metric_IDChanging(value);
                    ReportPropertyChanging("Staff_Metric_ID");
                    _Staff_Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Metric_ID");
                    OnStaff_Metric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Staff_Metric_ID;
        partial void OnStaff_Metric_IDChanging(global::System.Int64 value);
        partial void OnStaff_Metric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                OnAppraisal_Header_IDChanging(value);
                ReportPropertyChanging("Appraisal_Header_ID");
                _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Appraisal_Header_ID");
                OnAppraisal_Header_IDChanged();
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                OnMetric_IDChanging(value);
                ReportPropertyChanging("Metric_ID");
                _Metric_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Metric_ID");
                OnMetric_IDChanged();
            }
        }
        private global::System.Int64 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int64 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_METRIC_APPRAISAL_HEADER", "APPRAISAL_HEADER")]
        public APPRAISAL_HEADER APPRAISAL_HEADER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_METRIC_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_METRIC_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPRAISAL_HEADER> APPRAISAL_HEADERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_METRIC_APPRAISAL_HEADER", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_METRIC_APPRAISAL_HEADER", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_METRIC_METRIC", "METRIC")]
        public METRIC METRIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC>("MangoModel.FK_STAFF_METRIC_METRIC", "METRIC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC>("MangoModel.FK_STAFF_METRIC_METRIC", "METRIC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<METRIC> METRICReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<METRIC>("MangoModel.FK_STAFF_METRIC_METRIC", "METRIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<METRIC>("MangoModel.FK_STAFF_METRIC_METRIC", "METRIC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STAFF_POTENTIAL_ASSESSMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STAFF_POTENTIAL_ASSESSMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STAFF_POTENTIAL_ASSESSMENT object.
        /// </summary>
        /// <param name="staff_Potential_Assessment_Id">Initial value of the Staff_Potential_Assessment_Id property.</param>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="potential_Assessment_Period_Id">Initial value of the Potential_Assessment_Period_Id property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        public static STAFF_POTENTIAL_ASSESSMENT CreateSTAFF_POTENTIAL_ASSESSMENT(global::System.Int64 staff_Potential_Assessment_Id, global::System.Int64 appraisal_Header_ID, global::System.Int32 potential_Assessment_Period_Id, global::System.Int16 score)
        {
            STAFF_POTENTIAL_ASSESSMENT sTAFF_POTENTIAL_ASSESSMENT = new STAFF_POTENTIAL_ASSESSMENT();
            sTAFF_POTENTIAL_ASSESSMENT.Staff_Potential_Assessment_Id = staff_Potential_Assessment_Id;
            sTAFF_POTENTIAL_ASSESSMENT.Appraisal_Header_ID = appraisal_Header_ID;
            sTAFF_POTENTIAL_ASSESSMENT.Potential_Assessment_Period_Id = potential_Assessment_Period_Id;
            sTAFF_POTENTIAL_ASSESSMENT.Score = score;
            return sTAFF_POTENTIAL_ASSESSMENT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Staff_Potential_Assessment_Id
        {
            get
            {
                return _Staff_Potential_Assessment_Id;
            }
            set
            {
                if (_Staff_Potential_Assessment_Id != value)
                {
                    OnStaff_Potential_Assessment_IdChanging(value);
                    ReportPropertyChanging("Staff_Potential_Assessment_Id");
                    _Staff_Potential_Assessment_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Potential_Assessment_Id");
                    OnStaff_Potential_Assessment_IdChanged();
                }
            }
        }
        private global::System.Int64 _Staff_Potential_Assessment_Id;
        partial void OnStaff_Potential_Assessment_IdChanging(global::System.Int64 value);
        partial void OnStaff_Potential_Assessment_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                OnAppraisal_Header_IDChanging(value);
                ReportPropertyChanging("Appraisal_Header_ID");
                _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Appraisal_Header_ID");
                OnAppraisal_Header_IDChanged();
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Potential_Assessment_Period_Id
        {
            get
            {
                return _Potential_Assessment_Period_Id;
            }
            set
            {
                OnPotential_Assessment_Period_IdChanging(value);
                ReportPropertyChanging("Potential_Assessment_Period_Id");
                _Potential_Assessment_Period_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Potential_Assessment_Period_Id");
                OnPotential_Assessment_Period_IdChanged();
            }
        }
        private global::System.Int32 _Potential_Assessment_Period_Id;
        partial void OnPotential_Assessment_Period_IdChanging(global::System.Int32 value);
        partial void OnPotential_Assessment_Period_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int16 _Score;
        partial void OnScoreChanging(global::System.Int16 value);
        partial void OnScoreChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER")]
        public APPRAISAL_HEADER APPRAISAL_HEADER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPRAISAL_HEADER> APPRAISAL_HEADERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPRAISAL_HEADER>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_APPRAISAL_HEADER", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD")]
        public POTENTIAL_ASSESSMENT_PERIOD POTENTIAL_ASSESSMENT_PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POTENTIAL_ASSESSMENT_PERIOD>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POTENTIAL_ASSESSMENT_PERIOD>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<POTENTIAL_ASSESSMENT_PERIOD> POTENTIAL_ASSESSMENT_PERIODReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POTENTIAL_ASSESSMENT_PERIOD>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<POTENTIAL_ASSESSMENT_PERIOD>("MangoModel.FK_STAFF_POTENTIAL_ASSESSMENT_POTENTIAL_ASSESSMENT_PERIOD", "POTENTIAL_ASSESSMENT_PERIOD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="STATUS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STATUS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STATUS object.
        /// </summary>
        /// <param name="status_ID">Initial value of the Status_ID property.</param>
        /// <param name="status_Name">Initial value of the Status_Name property.</param>
        public static STATUS CreateSTATUS(global::System.Byte status_ID, global::System.String status_Name)
        {
            STATUS sTATUS = new STATUS();
            sTATUS.Status_ID = status_ID;
            sTATUS.Status_Name = status_Name;
            return sTATUS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status_ID
        {
            get
            {
                return _Status_ID;
            }
            set
            {
                if (_Status_ID != value)
                {
                    OnStatus_IDChanging(value);
                    ReportPropertyChanging("Status_ID");
                    _Status_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Status_ID");
                    OnStatus_IDChanged();
                }
            }
        }
        private global::System.Byte _Status_ID;
        partial void OnStatus_IDChanging(global::System.Byte value);
        partial void OnStatus_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status_Name
        {
            get
            {
                return _Status_Name;
            }
            set
            {
                OnStatus_NameChanging(value);
                ReportPropertyChanging("Status_Name");
                _Status_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status_Name");
                OnStatus_NameChanged();
            }
        }
        private global::System.String _Status_Name;
        partial void OnStatus_NameChanging(global::System.String value);
        partial void OnStatus_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_APPRAISAL_HEADER_STATUS", "APPRAISAL_HEADER")]
        public EntityCollection<APPRAISAL_HEADER> APPRAISAL_HEADER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_STATUS", "APPRAISAL_HEADER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APPRAISAL_HEADER>("MangoModel.FK_APPRAISAL_HEADER_STATUS", "APPRAISAL_HEADER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MangoModel", "FK_PERIOD_STATUS", "PERIOD")]
        public EntityCollection<PERIOD> PERIOD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PERIOD>("MangoModel.FK_PERIOD_STATUS", "PERIOD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PERIOD>("MangoModel.FK_PERIOD_STATUS", "PERIOD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_APPRAISAL_REPORT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_APPRAISAL_REPORT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_APPRAISAL_REPORT object.
        /// </summary>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="company_Name">Initial value of the Company_Name property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="supervisor_Staff_ID">Initial value of the Supervisor_Staff_ID property.</param>
        /// <param name="supervisor">Initial value of the Supervisor property.</param>
        /// <param name="job_Role_Level_Name">Initial value of the Job_Role_Level_Name property.</param>
        /// <param name="job_Role_Name">Initial value of the Job_Role_Name property.</param>
        /// <param name="recommendation_Name">Initial value of the Recommendation_Name property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        /// <param name="status_ID">Initial value of the Status_ID property.</param>
        /// <param name="period_Name">Initial value of the Period_Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="span">Initial value of the Span property.</param>
        /// <param name="start_Date">Initial value of the Start_Date property.</param>
        /// <param name="end_Date">Initial value of the End_Date property.</param>
        /// <param name="period_Type_Name">Initial value of the Period_Type_Name property.</param>
        public static VW_APPRAISAL_REPORT CreateVW_APPRAISAL_REPORT(global::System.Int64 appraisal_Header_ID, global::System.String company_Name, global::System.String department_Name, global::System.String staff_ID, global::System.String nAME, global::System.String supervisor_Staff_ID, global::System.String supervisor, global::System.String job_Role_Level_Name, global::System.String job_Role_Name, global::System.String recommendation_Name, global::System.Int32 period_ID, global::System.Byte status_ID, global::System.String period_Name, global::System.String type, global::System.Byte span, global::System.DateTime start_Date, global::System.DateTime end_Date, global::System.String period_Type_Name)
        {
            VW_APPRAISAL_REPORT vW_APPRAISAL_REPORT = new VW_APPRAISAL_REPORT();
            vW_APPRAISAL_REPORT.Appraisal_Header_ID = appraisal_Header_ID;
            vW_APPRAISAL_REPORT.Company_Name = company_Name;
            vW_APPRAISAL_REPORT.Department_Name = department_Name;
            vW_APPRAISAL_REPORT.Staff_ID = staff_ID;
            vW_APPRAISAL_REPORT.NAME = nAME;
            vW_APPRAISAL_REPORT.Supervisor_Staff_ID = supervisor_Staff_ID;
            vW_APPRAISAL_REPORT.Supervisor = supervisor;
            vW_APPRAISAL_REPORT.Job_Role_Level_Name = job_Role_Level_Name;
            vW_APPRAISAL_REPORT.Job_Role_Name = job_Role_Name;
            vW_APPRAISAL_REPORT.Recommendation_Name = recommendation_Name;
            vW_APPRAISAL_REPORT.Period_ID = period_ID;
            vW_APPRAISAL_REPORT.Status_ID = status_ID;
            vW_APPRAISAL_REPORT.Period_Name = period_Name;
            vW_APPRAISAL_REPORT.Type = type;
            vW_APPRAISAL_REPORT.Span = span;
            vW_APPRAISAL_REPORT.Start_Date = start_Date;
            vW_APPRAISAL_REPORT.End_Date = end_Date;
            vW_APPRAISAL_REPORT.Period_Type_Name = period_Type_Name;
            return vW_APPRAISAL_REPORT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Company_Name
        {
            get
            {
                return _Company_Name;
            }
            set
            {
                if (_Company_Name != value)
                {
                    OnCompany_NameChanging(value);
                    ReportPropertyChanging("Company_Name");
                    _Company_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Company_Name");
                    OnCompany_NameChanged();
                }
            }
        }
        private global::System.String _Company_Name;
        partial void OnCompany_NameChanging(global::System.String value);
        partial void OnCompany_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                if (_NAME != value)
                {
                    OnNAMEChanging(value);
                    ReportPropertyChanging("NAME");
                    _NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NAME");
                    OnNAMEChanged();
                }
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supervisor_Staff_ID
        {
            get
            {
                return _Supervisor_Staff_ID;
            }
            set
            {
                if (_Supervisor_Staff_ID != value)
                {
                    OnSupervisor_Staff_IDChanging(value);
                    ReportPropertyChanging("Supervisor_Staff_ID");
                    _Supervisor_Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Supervisor_Staff_ID");
                    OnSupervisor_Staff_IDChanged();
                }
            }
        }
        private global::System.String _Supervisor_Staff_ID;
        partial void OnSupervisor_Staff_IDChanging(global::System.String value);
        partial void OnSupervisor_Staff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supervisor
        {
            get
            {
                return _Supervisor;
            }
            set
            {
                if (_Supervisor != value)
                {
                    OnSupervisorChanging(value);
                    ReportPropertyChanging("Supervisor");
                    _Supervisor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Supervisor");
                    OnSupervisorChanged();
                }
            }
        }
        private global::System.String _Supervisor;
        partial void OnSupervisorChanging(global::System.String value);
        partial void OnSupervisorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_Name
        {
            get
            {
                return _Job_Role_Level_Name;
            }
            set
            {
                if (_Job_Role_Level_Name != value)
                {
                    OnJob_Role_Level_NameChanging(value);
                    ReportPropertyChanging("Job_Role_Level_Name");
                    _Job_Role_Level_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_Name");
                    OnJob_Role_Level_NameChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_Name;
        partial void OnJob_Role_Level_NameChanging(global::System.String value);
        partial void OnJob_Role_Level_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Name
        {
            get
            {
                return _Job_Role_Name;
            }
            set
            {
                if (_Job_Role_Name != value)
                {
                    OnJob_Role_NameChanging(value);
                    ReportPropertyChanging("Job_Role_Name");
                    _Job_Role_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Name");
                    OnJob_Role_NameChanged();
                }
            }
        }
        private global::System.String _Job_Role_Name;
        partial void OnJob_Role_NameChanging(global::System.String value);
        partial void OnJob_Role_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Pace_Score
        {
            get
            {
                return _Pace_Score;
            }
            set
            {
                OnPace_ScoreChanging(value);
                ReportPropertyChanging("Pace_Score");
                _Pace_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pace_Score");
                OnPace_ScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Pace_Score;
        partial void OnPace_ScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnPace_ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pace_Grade
        {
            get
            {
                return _Pace_Grade;
            }
            set
            {
                OnPace_GradeChanging(value);
                ReportPropertyChanging("Pace_Grade");
                _Pace_Grade = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pace_Grade");
                OnPace_GradeChanged();
            }
        }
        private global::System.String _Pace_Grade;
        partial void OnPace_GradeChanging(global::System.String value);
        partial void OnPace_GradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Metric_Score
        {
            get
            {
                return _Metric_Score;
            }
            set
            {
                OnMetric_ScoreChanging(value);
                ReportPropertyChanging("Metric_Score");
                _Metric_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Metric_Score");
                OnMetric_ScoreChanged();
            }
        }
        private Nullable<global::System.Double> _Metric_Score;
        partial void OnMetric_ScoreChanging(Nullable<global::System.Double> value);
        partial void OnMetric_ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Metric_Rating
        {
            get
            {
                return _Metric_Rating;
            }
            set
            {
                OnMetric_RatingChanging(value);
                ReportPropertyChanging("Metric_Rating");
                _Metric_Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Metric_Rating");
                OnMetric_RatingChanged();
            }
        }
        private Nullable<global::System.Byte> _Metric_Rating;
        partial void OnMetric_RatingChanging(Nullable<global::System.Byte> value);
        partial void OnMetric_RatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Recommendation_Name
        {
            get
            {
                return _Recommendation_Name;
            }
            set
            {
                if (_Recommendation_Name != value)
                {
                    OnRecommendation_NameChanging(value);
                    ReportPropertyChanging("Recommendation_Name");
                    _Recommendation_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Recommendation_Name");
                    OnRecommendation_NameChanged();
                }
            }
        }
        private global::System.String _Recommendation_Name;
        partial void OnRecommendation_NameChanging(global::System.String value);
        partial void OnRecommendation_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status_ID
        {
            get
            {
                return _Status_ID;
            }
            set
            {
                if (_Status_ID != value)
                {
                    OnStatus_IDChanging(value);
                    ReportPropertyChanging("Status_ID");
                    _Status_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Status_ID");
                    OnStatus_IDChanged();
                }
            }
        }
        private global::System.Byte _Status_ID;
        partial void OnStatus_IDChanging(global::System.Byte value);
        partial void OnStatus_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period_Name
        {
            get
            {
                return _Period_Name;
            }
            set
            {
                if (_Period_Name != value)
                {
                    OnPeriod_NameChanging(value);
                    ReportPropertyChanging("Period_Name");
                    _Period_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Period_Name");
                    OnPeriod_NameChanged();
                }
            }
        }
        private global::System.String _Period_Name;
        partial void OnPeriod_NameChanging(global::System.String value);
        partial void OnPeriod_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Span
        {
            get
            {
                return _Span;
            }
            set
            {
                if (_Span != value)
                {
                    OnSpanChanging(value);
                    ReportPropertyChanging("Span");
                    _Span = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Span");
                    OnSpanChanged();
                }
            }
        }
        private global::System.Byte _Span;
        partial void OnSpanChanging(global::System.Byte value);
        partial void OnSpanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start_Date
        {
            get
            {
                return _Start_Date;
            }
            set
            {
                if (_Start_Date != value)
                {
                    OnStart_DateChanging(value);
                    ReportPropertyChanging("Start_Date");
                    _Start_Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Start_Date");
                    OnStart_DateChanged();
                }
            }
        }
        private global::System.DateTime _Start_Date;
        partial void OnStart_DateChanging(global::System.DateTime value);
        partial void OnStart_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End_Date
        {
            get
            {
                return _End_Date;
            }
            set
            {
                if (_End_Date != value)
                {
                    OnEnd_DateChanging(value);
                    ReportPropertyChanging("End_Date");
                    _End_Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("End_Date");
                    OnEnd_DateChanged();
                }
            }
        }
        private global::System.DateTime _End_Date;
        partial void OnEnd_DateChanging(global::System.DateTime value);
        partial void OnEnd_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Strength
        {
            get
            {
                return _Strength;
            }
            set
            {
                OnStrengthChanging(value);
                ReportPropertyChanging("Strength");
                _Strength = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Strength");
                OnStrengthChanged();
            }
        }
        private global::System.String _Strength;
        partial void OnStrengthChanging(global::System.String value);
        partial void OnStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Weakness
        {
            get
            {
                return _Weakness;
            }
            set
            {
                OnWeaknessChanging(value);
                ReportPropertyChanging("Weakness");
                _Weakness = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Weakness");
                OnWeaknessChanged();
            }
        }
        private global::System.String _Weakness;
        partial void OnWeaknessChanging(global::System.String value);
        partial void OnWeaknessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Training_Need
        {
            get
            {
                return _Training_Need;
            }
            set
            {
                OnTraining_NeedChanging(value);
                ReportPropertyChanging("Training_Need");
                _Training_Need = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Training_Need");
                OnTraining_NeedChanged();
            }
        }
        private global::System.String _Training_Need;
        partial void OnTraining_NeedChanging(global::System.String value);
        partial void OnTraining_NeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Supervisor_Comment
        {
            get
            {
                return _Supervisor_Comment;
            }
            set
            {
                OnSupervisor_CommentChanging(value);
                ReportPropertyChanging("Supervisor_Comment");
                _Supervisor_Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Supervisor_Comment");
                OnSupervisor_CommentChanged();
            }
        }
        private global::System.String _Supervisor_Comment;
        partial void OnSupervisor_CommentChanging(global::System.String value);
        partial void OnSupervisor_CommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Appraisee_Comment
        {
            get
            {
                return _Appraisee_Comment;
            }
            set
            {
                OnAppraisee_CommentChanging(value);
                ReportPropertyChanging("Appraisee_Comment");
                _Appraisee_Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Appraisee_Comment");
                OnAppraisee_CommentChanged();
            }
        }
        private global::System.String _Appraisee_Comment;
        partial void OnAppraisee_CommentChanging(global::System.String value);
        partial void OnAppraisee_CommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hod_Comment
        {
            get
            {
                return _Hod_Comment;
            }
            set
            {
                OnHod_CommentChanging(value);
                ReportPropertyChanging("Hod_Comment");
                _Hod_Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hod_Comment");
                OnHod_CommentChanged();
            }
        }
        private global::System.String _Hod_Comment;
        partial void OnHod_CommentChanging(global::System.String value);
        partial void OnHod_CommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period_Type_Name
        {
            get
            {
                return _Period_Type_Name;
            }
            set
            {
                if (_Period_Type_Name != value)
                {
                    OnPeriod_Type_NameChanging(value);
                    ReportPropertyChanging("Period_Type_Name");
                    _Period_Type_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Period_Type_Name");
                    OnPeriod_Type_NameChanged();
                }
            }
        }
        private global::System.String _Period_Type_Name;
        partial void OnPeriod_Type_NameChanging(global::System.String value);
        partial void OnPeriod_Type_NameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_HOD_APPRAISEES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_HOD_APPRAISEES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_HOD_APPRAISEES object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="last_Name">Initial value of the Last_Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="status_ID">Initial value of the Status_ID property.</param>
        /// <param name="option_ID">Initial value of the Option_ID property.</param>
        /// <param name="staff_Company_Department_Job_Role_ID">Initial value of the Staff_Company_Department_Job_Role_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        /// <param name="location_Name">Initial value of the Location_Name property.</param>
        /// <param name="location_ID">Initial value of the Location_ID property.</param>
        /// <param name="job_Role_Level_ID">Initial value of the Job_Role_Level_ID property.</param>
        /// <param name="company_Department_Job_Role_ID">Initial value of the Company_Department_Job_Role_ID property.</param>
        /// <param name="hod_Company_Department_Job_Role_ID">Initial value of the Hod_Company_Department_Job_Role_ID property.</param>
        public static VW_HOD_APPRAISEES CreateVW_HOD_APPRAISEES(global::System.String staff_ID, global::System.String last_Name, global::System.String email, global::System.Byte status_ID, global::System.Byte option_ID, global::System.Int32 staff_Company_Department_Job_Role_ID, global::System.Int32 period_ID, global::System.String location_Name, global::System.String location_ID, global::System.String job_Role_Level_ID, global::System.Int32 company_Department_Job_Role_ID, global::System.Int32 hod_Company_Department_Job_Role_ID)
        {
            VW_HOD_APPRAISEES vW_HOD_APPRAISEES = new VW_HOD_APPRAISEES();
            vW_HOD_APPRAISEES.Staff_ID = staff_ID;
            vW_HOD_APPRAISEES.Last_Name = last_Name;
            vW_HOD_APPRAISEES.Email = email;
            vW_HOD_APPRAISEES.Status_ID = status_ID;
            vW_HOD_APPRAISEES.Option_ID = option_ID;
            vW_HOD_APPRAISEES.Staff_Company_Department_Job_Role_ID = staff_Company_Department_Job_Role_ID;
            vW_HOD_APPRAISEES.Period_ID = period_ID;
            vW_HOD_APPRAISEES.Location_Name = location_Name;
            vW_HOD_APPRAISEES.Location_ID = location_ID;
            vW_HOD_APPRAISEES.Job_Role_Level_ID = job_Role_Level_ID;
            vW_HOD_APPRAISEES.Company_Department_Job_Role_ID = company_Department_Job_Role_ID;
            vW_HOD_APPRAISEES.Hod_Company_Department_Job_Role_ID = hod_Company_Department_Job_Role_ID;
            return vW_HOD_APPRAISEES;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Last_Name
        {
            get
            {
                return _Last_Name;
            }
            set
            {
                if (_Last_Name != value)
                {
                    OnLast_NameChanging(value);
                    ReportPropertyChanging("Last_Name");
                    _Last_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Last_Name");
                    OnLast_NameChanged();
                }
            }
        }
        private global::System.String _Last_Name;
        partial void OnLast_NameChanging(global::System.String value);
        partial void OnLast_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Staff_Response_Date
        {
            get
            {
                return _Staff_Response_Date;
            }
            set
            {
                OnStaff_Response_DateChanging(value);
                ReportPropertyChanging("Staff_Response_Date");
                _Staff_Response_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Staff_Response_Date");
                OnStaff_Response_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Staff_Response_Date;
        partial void OnStaff_Response_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnStaff_Response_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status_ID
        {
            get
            {
                return _Status_ID;
            }
            set
            {
                if (_Status_ID != value)
                {
                    OnStatus_IDChanging(value);
                    ReportPropertyChanging("Status_ID");
                    _Status_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Status_ID");
                    OnStatus_IDChanged();
                }
            }
        }
        private global::System.Byte _Status_ID;
        partial void OnStatus_IDChanging(global::System.Byte value);
        partial void OnStatus_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Option_ID
        {
            get
            {
                return _Option_ID;
            }
            set
            {
                if (_Option_ID != value)
                {
                    OnOption_IDChanging(value);
                    ReportPropertyChanging("Option_ID");
                    _Option_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Option_ID");
                    OnOption_IDChanged();
                }
            }
        }
        private global::System.Byte _Option_ID;
        partial void OnOption_IDChanging(global::System.Byte value);
        partial void OnOption_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Staff_Company_Department_Job_Role_ID
        {
            get
            {
                return _Staff_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Staff_Company_Department_Job_Role_ID != value)
                {
                    OnStaff_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Staff_Company_Department_Job_Role_ID");
                    _Staff_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Company_Department_Job_Role_ID");
                    OnStaff_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Staff_Company_Department_Job_Role_ID;
        partial void OnStaff_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnStaff_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_Name
        {
            get
            {
                return _Location_Name;
            }
            set
            {
                if (_Location_Name != value)
                {
                    OnLocation_NameChanging(value);
                    ReportPropertyChanging("Location_Name");
                    _Location_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_Name");
                    OnLocation_NameChanged();
                }
            }
        }
        private global::System.String _Location_Name;
        partial void OnLocation_NameChanging(global::System.String value);
        partial void OnLocation_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_ID
        {
            get
            {
                return _Location_ID;
            }
            set
            {
                if (_Location_ID != value)
                {
                    OnLocation_IDChanging(value);
                    ReportPropertyChanging("Location_ID");
                    _Location_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_ID");
                    OnLocation_IDChanged();
                }
            }
        }
        private global::System.String _Location_ID;
        partial void OnLocation_IDChanging(global::System.String value);
        partial void OnLocation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_ID
        {
            get
            {
                return _Job_Role_Level_ID;
            }
            set
            {
                if (_Job_Role_Level_ID != value)
                {
                    OnJob_Role_Level_IDChanging(value);
                    ReportPropertyChanging("Job_Role_Level_ID");
                    _Job_Role_Level_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_ID");
                    OnJob_Role_Level_IDChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_ID;
        partial void OnJob_Role_Level_IDChanging(global::System.String value);
        partial void OnJob_Role_Level_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company_Department_Job_Role_ID
        {
            get
            {
                return _Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Company_Department_Job_Role_ID != value)
                {
                    OnCompany_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Company_Department_Job_Role_ID");
                    _Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_Department_Job_Role_ID");
                    OnCompany_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Company_Department_Job_Role_ID;
        partial void OnCompany_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnCompany_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hod_Company_Department_Job_Role_ID
        {
            get
            {
                return _Hod_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Hod_Company_Department_Job_Role_ID != value)
                {
                    OnHod_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Hod_Company_Department_Job_Role_ID");
                    _Hod_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Hod_Company_Department_Job_Role_ID");
                    OnHod_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Hod_Company_Department_Job_Role_ID;
        partial void OnHod_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnHod_Company_Department_Job_Role_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_INPS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_INPS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_INPS object.
        /// </summary>
        /// <param name="inps_Type_Id">Initial value of the Inps_Type_Id property.</param>
        /// <param name="inps_Type_Name">Initial value of the Inps_Type_Name property.</param>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="inps_ID">Initial value of the Inps_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static VW_INPS CreateVW_INPS(global::System.Int32 inps_Type_Id, global::System.String inps_Type_Name, global::System.String staff_ID, global::System.Int64 inps_ID, global::System.Int32 period_ID)
        {
            VW_INPS vW_INPS = new VW_INPS();
            vW_INPS.Inps_Type_Id = inps_Type_Id;
            vW_INPS.Inps_Type_Name = inps_Type_Name;
            vW_INPS.Staff_ID = staff_ID;
            vW_INPS.Inps_ID = inps_ID;
            vW_INPS.Period_ID = period_ID;
            return vW_INPS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kpi
        {
            get
            {
                return _Kpi;
            }
            set
            {
                OnKpiChanging(value);
                ReportPropertyChanging("Kpi");
                _Kpi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kpi");
                OnKpiChanged();
            }
        }
        private global::System.String _Kpi;
        partial void OnKpiChanging(global::System.String value);
        partial void OnKpiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Inps_Type_Id
        {
            get
            {
                return _Inps_Type_Id;
            }
            set
            {
                if (_Inps_Type_Id != value)
                {
                    OnInps_Type_IdChanging(value);
                    ReportPropertyChanging("Inps_Type_Id");
                    _Inps_Type_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Inps_Type_Id");
                    OnInps_Type_IdChanged();
                }
            }
        }
        private global::System.Int32 _Inps_Type_Id;
        partial void OnInps_Type_IdChanging(global::System.Int32 value);
        partial void OnInps_Type_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Inps_Type_Name
        {
            get
            {
                return _Inps_Type_Name;
            }
            set
            {
                if (_Inps_Type_Name != value)
                {
                    OnInps_Type_NameChanging(value);
                    ReportPropertyChanging("Inps_Type_Name");
                    _Inps_Type_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Inps_Type_Name");
                    OnInps_Type_NameChanged();
                }
            }
        }
        private global::System.String _Inps_Type_Name;
        partial void OnInps_Type_NameChanging(global::System.String value);
        partial void OnInps_Type_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private Nullable<global::System.Decimal> _Target;
        partial void OnTargetChanging(Nullable<global::System.Decimal> value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Inps_ID
        {
            get
            {
                return _Inps_ID;
            }
            set
            {
                if (_Inps_ID != value)
                {
                    OnInps_IDChanging(value);
                    ReportPropertyChanging("Inps_ID");
                    _Inps_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Inps_ID");
                    OnInps_IDChanged();
                }
            }
        }
        private global::System.Int64 _Inps_ID;
        partial void OnInps_IDChanging(global::System.Int64 value);
        partial void OnInps_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_JOB_ROLE_HOD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_JOB_ROLE_HOD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_JOB_ROLE_HOD object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="last_Name">Initial value of the Last_Name property.</param>
        /// <param name="staff_Company_Department_Job_Role_ID">Initial value of the Staff_Company_Department_Job_Role_ID property.</param>
        /// <param name="hod_Company_Department_Job_Role_ID">Initial value of the Hod_Company_Department_Job_Role_ID property.</param>
        /// <param name="company_ID">Initial value of the Company_ID property.</param>
        /// <param name="department_ID">Initial value of the Department_ID property.</param>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="location_Name">Initial value of the Location_Name property.</param>
        /// <param name="period_Id">Initial value of the Period_Id property.</param>
        /// <param name="location_ID">Initial value of the Location_ID property.</param>
        /// <param name="job_Role_Level_ID">Initial value of the Job_Role_Level_ID property.</param>
        /// <param name="expr1">Initial value of the Expr1 property.</param>
        public static VW_JOB_ROLE_HOD CreateVW_JOB_ROLE_HOD(global::System.String staff_ID, global::System.String last_Name, global::System.Int32 staff_Company_Department_Job_Role_ID, global::System.Int32 hod_Company_Department_Job_Role_ID, global::System.Byte company_ID, global::System.String department_ID, global::System.Int32 job_Role_ID, global::System.String email, global::System.String location_Name, global::System.Int32 period_Id, global::System.String location_ID, global::System.String job_Role_Level_ID, global::System.Int32 expr1)
        {
            VW_JOB_ROLE_HOD vW_JOB_ROLE_HOD = new VW_JOB_ROLE_HOD();
            vW_JOB_ROLE_HOD.Staff_ID = staff_ID;
            vW_JOB_ROLE_HOD.Last_Name = last_Name;
            vW_JOB_ROLE_HOD.Staff_Company_Department_Job_Role_ID = staff_Company_Department_Job_Role_ID;
            vW_JOB_ROLE_HOD.Hod_Company_Department_Job_Role_ID = hod_Company_Department_Job_Role_ID;
            vW_JOB_ROLE_HOD.Company_ID = company_ID;
            vW_JOB_ROLE_HOD.Department_ID = department_ID;
            vW_JOB_ROLE_HOD.Job_Role_ID = job_Role_ID;
            vW_JOB_ROLE_HOD.Email = email;
            vW_JOB_ROLE_HOD.Location_Name = location_Name;
            vW_JOB_ROLE_HOD.Period_Id = period_Id;
            vW_JOB_ROLE_HOD.Location_ID = location_ID;
            vW_JOB_ROLE_HOD.Job_Role_Level_ID = job_Role_Level_ID;
            vW_JOB_ROLE_HOD.Expr1 = expr1;
            return vW_JOB_ROLE_HOD;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Last_Name
        {
            get
            {
                return _Last_Name;
            }
            set
            {
                if (_Last_Name != value)
                {
                    OnLast_NameChanging(value);
                    ReportPropertyChanging("Last_Name");
                    _Last_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Last_Name");
                    OnLast_NameChanged();
                }
            }
        }
        private global::System.String _Last_Name;
        partial void OnLast_NameChanging(global::System.String value);
        partial void OnLast_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Staff_Company_Department_Job_Role_ID
        {
            get
            {
                return _Staff_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Staff_Company_Department_Job_Role_ID != value)
                {
                    OnStaff_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Staff_Company_Department_Job_Role_ID");
                    _Staff_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Company_Department_Job_Role_ID");
                    OnStaff_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Staff_Company_Department_Job_Role_ID;
        partial void OnStaff_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnStaff_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hod_Company_Department_Job_Role_ID
        {
            get
            {
                return _Hod_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Hod_Company_Department_Job_Role_ID != value)
                {
                    OnHod_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Hod_Company_Department_Job_Role_ID");
                    _Hod_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Hod_Company_Department_Job_Role_ID");
                    OnHod_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Hod_Company_Department_Job_Role_ID;
        partial void OnHod_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnHod_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_ID
        {
            get
            {
                return _Company_ID;
            }
            set
            {
                if (_Company_ID != value)
                {
                    OnCompany_IDChanging(value);
                    ReportPropertyChanging("Company_ID");
                    _Company_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_ID");
                    OnCompany_IDChanged();
                }
            }
        }
        private global::System.Byte _Company_ID;
        partial void OnCompany_IDChanging(global::System.Byte value);
        partial void OnCompany_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                if (_Department_ID != value)
                {
                    OnDepartment_IDChanging(value);
                    ReportPropertyChanging("Department_ID");
                    _Department_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_ID");
                    OnDepartment_IDChanged();
                }
            }
        }
        private global::System.String _Department_ID;
        partial void OnDepartment_IDChanging(global::System.String value);
        partial void OnDepartment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                if (_Job_Role_ID != value)
                {
                    OnJob_Role_IDChanging(value);
                    ReportPropertyChanging("Job_Role_ID");
                    _Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Job_Role_ID");
                    OnJob_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_Name
        {
            get
            {
                return _Location_Name;
            }
            set
            {
                if (_Location_Name != value)
                {
                    OnLocation_NameChanging(value);
                    ReportPropertyChanging("Location_Name");
                    _Location_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_Name");
                    OnLocation_NameChanged();
                }
            }
        }
        private global::System.String _Location_Name;
        partial void OnLocation_NameChanging(global::System.String value);
        partial void OnLocation_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_Id
        {
            get
            {
                return _Period_Id;
            }
            set
            {
                if (_Period_Id != value)
                {
                    OnPeriod_IdChanging(value);
                    ReportPropertyChanging("Period_Id");
                    _Period_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_Id");
                    OnPeriod_IdChanged();
                }
            }
        }
        private global::System.Int32 _Period_Id;
        partial void OnPeriod_IdChanging(global::System.Int32 value);
        partial void OnPeriod_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_ID
        {
            get
            {
                return _Location_ID;
            }
            set
            {
                if (_Location_ID != value)
                {
                    OnLocation_IDChanging(value);
                    ReportPropertyChanging("Location_ID");
                    _Location_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_ID");
                    OnLocation_IDChanged();
                }
            }
        }
        private global::System.String _Location_ID;
        partial void OnLocation_IDChanging(global::System.String value);
        partial void OnLocation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_ID
        {
            get
            {
                return _Job_Role_Level_ID;
            }
            set
            {
                if (_Job_Role_Level_ID != value)
                {
                    OnJob_Role_Level_IDChanging(value);
                    ReportPropertyChanging("Job_Role_Level_ID");
                    _Job_Role_Level_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_ID");
                    OnJob_Role_Level_IDChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_ID;
        partial void OnJob_Role_Level_IDChanging(global::System.String value);
        partial void OnJob_Role_Level_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                if (_Expr1 != value)
                {
                    OnExpr1Changing(value);
                    ReportPropertyChanging("Expr1");
                    _Expr1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Expr1");
                    OnExpr1Changed();
                }
            }
        }
        private global::System.Int32 _Expr1;
        partial void OnExpr1Changing(global::System.Int32 value);
        partial void OnExpr1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_JOB_ROLE_STAFF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_JOB_ROLE_STAFF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_JOB_ROLE_STAFF object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="last_Name">Initial value of the Last_Name property.</param>
        /// <param name="staff_Company_Department_Job_Role_ID">Initial value of the Staff_Company_Department_Job_Role_ID property.</param>
        /// <param name="supervisor_Company_Department_Job_Role_ID">Initial value of the Supervisor_Company_Department_Job_Role_ID property.</param>
        /// <param name="company_ID">Initial value of the Company_ID property.</param>
        /// <param name="department_ID">Initial value of the Department_ID property.</param>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="location_Name">Initial value of the Location_Name property.</param>
        /// <param name="period_Id">Initial value of the Period_Id property.</param>
        /// <param name="location_ID">Initial value of the Location_ID property.</param>
        /// <param name="job_Role_Level_ID">Initial value of the Job_Role_Level_ID property.</param>
        public static VW_JOB_ROLE_STAFF CreateVW_JOB_ROLE_STAFF(global::System.String staff_ID, global::System.String last_Name, global::System.Int32 staff_Company_Department_Job_Role_ID, global::System.Int32 supervisor_Company_Department_Job_Role_ID, global::System.Byte company_ID, global::System.String department_ID, global::System.Int32 job_Role_ID, global::System.String email, global::System.String location_Name, global::System.Int32 period_Id, global::System.String location_ID, global::System.String job_Role_Level_ID)
        {
            VW_JOB_ROLE_STAFF vW_JOB_ROLE_STAFF = new VW_JOB_ROLE_STAFF();
            vW_JOB_ROLE_STAFF.Staff_ID = staff_ID;
            vW_JOB_ROLE_STAFF.Last_Name = last_Name;
            vW_JOB_ROLE_STAFF.Staff_Company_Department_Job_Role_ID = staff_Company_Department_Job_Role_ID;
            vW_JOB_ROLE_STAFF.Supervisor_Company_Department_Job_Role_ID = supervisor_Company_Department_Job_Role_ID;
            vW_JOB_ROLE_STAFF.Company_ID = company_ID;
            vW_JOB_ROLE_STAFF.Department_ID = department_ID;
            vW_JOB_ROLE_STAFF.Job_Role_ID = job_Role_ID;
            vW_JOB_ROLE_STAFF.Email = email;
            vW_JOB_ROLE_STAFF.Location_Name = location_Name;
            vW_JOB_ROLE_STAFF.Period_Id = period_Id;
            vW_JOB_ROLE_STAFF.Location_ID = location_ID;
            vW_JOB_ROLE_STAFF.Job_Role_Level_ID = job_Role_Level_ID;
            return vW_JOB_ROLE_STAFF;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Last_Name
        {
            get
            {
                return _Last_Name;
            }
            set
            {
                if (_Last_Name != value)
                {
                    OnLast_NameChanging(value);
                    ReportPropertyChanging("Last_Name");
                    _Last_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Last_Name");
                    OnLast_NameChanged();
                }
            }
        }
        private global::System.String _Last_Name;
        partial void OnLast_NameChanging(global::System.String value);
        partial void OnLast_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Staff_Company_Department_Job_Role_ID
        {
            get
            {
                return _Staff_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Staff_Company_Department_Job_Role_ID != value)
                {
                    OnStaff_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Staff_Company_Department_Job_Role_ID");
                    _Staff_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Company_Department_Job_Role_ID");
                    OnStaff_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Staff_Company_Department_Job_Role_ID;
        partial void OnStaff_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnStaff_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supervisor_Company_Department_Job_Role_ID
        {
            get
            {
                return _Supervisor_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Supervisor_Company_Department_Job_Role_ID != value)
                {
                    OnSupervisor_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Supervisor_Company_Department_Job_Role_ID");
                    _Supervisor_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Supervisor_Company_Department_Job_Role_ID");
                    OnSupervisor_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Supervisor_Company_Department_Job_Role_ID;
        partial void OnSupervisor_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnSupervisor_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_ID
        {
            get
            {
                return _Company_ID;
            }
            set
            {
                if (_Company_ID != value)
                {
                    OnCompany_IDChanging(value);
                    ReportPropertyChanging("Company_ID");
                    _Company_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_ID");
                    OnCompany_IDChanged();
                }
            }
        }
        private global::System.Byte _Company_ID;
        partial void OnCompany_IDChanging(global::System.Byte value);
        partial void OnCompany_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                if (_Department_ID != value)
                {
                    OnDepartment_IDChanging(value);
                    ReportPropertyChanging("Department_ID");
                    _Department_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_ID");
                    OnDepartment_IDChanged();
                }
            }
        }
        private global::System.String _Department_ID;
        partial void OnDepartment_IDChanging(global::System.String value);
        partial void OnDepartment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                if (_Job_Role_ID != value)
                {
                    OnJob_Role_IDChanging(value);
                    ReportPropertyChanging("Job_Role_ID");
                    _Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Job_Role_ID");
                    OnJob_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_Name
        {
            get
            {
                return _Location_Name;
            }
            set
            {
                if (_Location_Name != value)
                {
                    OnLocation_NameChanging(value);
                    ReportPropertyChanging("Location_Name");
                    _Location_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_Name");
                    OnLocation_NameChanged();
                }
            }
        }
        private global::System.String _Location_Name;
        partial void OnLocation_NameChanging(global::System.String value);
        partial void OnLocation_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_Id
        {
            get
            {
                return _Period_Id;
            }
            set
            {
                if (_Period_Id != value)
                {
                    OnPeriod_IdChanging(value);
                    ReportPropertyChanging("Period_Id");
                    _Period_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_Id");
                    OnPeriod_IdChanged();
                }
            }
        }
        private global::System.Int32 _Period_Id;
        partial void OnPeriod_IdChanging(global::System.Int32 value);
        partial void OnPeriod_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_ID
        {
            get
            {
                return _Location_ID;
            }
            set
            {
                if (_Location_ID != value)
                {
                    OnLocation_IDChanging(value);
                    ReportPropertyChanging("Location_ID");
                    _Location_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_ID");
                    OnLocation_IDChanged();
                }
            }
        }
        private global::System.String _Location_ID;
        partial void OnLocation_IDChanging(global::System.String value);
        partial void OnLocation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_ID
        {
            get
            {
                return _Job_Role_Level_ID;
            }
            set
            {
                if (_Job_Role_Level_ID != value)
                {
                    OnJob_Role_Level_IDChanging(value);
                    ReportPropertyChanging("Job_Role_Level_ID");
                    _Job_Role_Level_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_ID");
                    OnJob_Role_Level_IDChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_ID;
        partial void OnJob_Role_Level_IDChanging(global::System.String value);
        partial void OnJob_Role_Level_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_JOB_ROLE_SUPERVISOR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_JOB_ROLE_SUPERVISOR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_JOB_ROLE_SUPERVISOR object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="last_Name">Initial value of the Last_Name property.</param>
        /// <param name="staff_Company_Department_Job_Role_ID">Initial value of the Staff_Company_Department_Job_Role_ID property.</param>
        /// <param name="supervisor_Company_Department_Job_Role_ID">Initial value of the Supervisor_Company_Department_Job_Role_ID property.</param>
        /// <param name="company_ID">Initial value of the Company_ID property.</param>
        /// <param name="department_ID">Initial value of the Department_ID property.</param>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="location_Name">Initial value of the Location_Name property.</param>
        /// <param name="location_ID">Initial value of the Location_ID property.</param>
        /// <param name="job_Role_Level_ID">Initial value of the Job_Role_Level_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static VW_JOB_ROLE_SUPERVISOR CreateVW_JOB_ROLE_SUPERVISOR(global::System.String staff_ID, global::System.String last_Name, global::System.Int32 staff_Company_Department_Job_Role_ID, global::System.Int32 supervisor_Company_Department_Job_Role_ID, global::System.Byte company_ID, global::System.String department_ID, global::System.Int32 job_Role_ID, global::System.String email, global::System.String location_Name, global::System.String location_ID, global::System.String job_Role_Level_ID, global::System.Int32 period_ID)
        {
            VW_JOB_ROLE_SUPERVISOR vW_JOB_ROLE_SUPERVISOR = new VW_JOB_ROLE_SUPERVISOR();
            vW_JOB_ROLE_SUPERVISOR.Staff_ID = staff_ID;
            vW_JOB_ROLE_SUPERVISOR.Last_Name = last_Name;
            vW_JOB_ROLE_SUPERVISOR.Staff_Company_Department_Job_Role_ID = staff_Company_Department_Job_Role_ID;
            vW_JOB_ROLE_SUPERVISOR.Supervisor_Company_Department_Job_Role_ID = supervisor_Company_Department_Job_Role_ID;
            vW_JOB_ROLE_SUPERVISOR.Company_ID = company_ID;
            vW_JOB_ROLE_SUPERVISOR.Department_ID = department_ID;
            vW_JOB_ROLE_SUPERVISOR.Job_Role_ID = job_Role_ID;
            vW_JOB_ROLE_SUPERVISOR.Email = email;
            vW_JOB_ROLE_SUPERVISOR.Location_Name = location_Name;
            vW_JOB_ROLE_SUPERVISOR.Location_ID = location_ID;
            vW_JOB_ROLE_SUPERVISOR.Job_Role_Level_ID = job_Role_Level_ID;
            vW_JOB_ROLE_SUPERVISOR.Period_ID = period_ID;
            return vW_JOB_ROLE_SUPERVISOR;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Last_Name
        {
            get
            {
                return _Last_Name;
            }
            set
            {
                if (_Last_Name != value)
                {
                    OnLast_NameChanging(value);
                    ReportPropertyChanging("Last_Name");
                    _Last_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Last_Name");
                    OnLast_NameChanged();
                }
            }
        }
        private global::System.String _Last_Name;
        partial void OnLast_NameChanging(global::System.String value);
        partial void OnLast_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Staff_Company_Department_Job_Role_ID
        {
            get
            {
                return _Staff_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Staff_Company_Department_Job_Role_ID != value)
                {
                    OnStaff_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Staff_Company_Department_Job_Role_ID");
                    _Staff_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Company_Department_Job_Role_ID");
                    OnStaff_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Staff_Company_Department_Job_Role_ID;
        partial void OnStaff_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnStaff_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supervisor_Company_Department_Job_Role_ID
        {
            get
            {
                return _Supervisor_Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Supervisor_Company_Department_Job_Role_ID != value)
                {
                    OnSupervisor_Company_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Supervisor_Company_Department_Job_Role_ID");
                    _Supervisor_Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Supervisor_Company_Department_Job_Role_ID");
                    OnSupervisor_Company_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Supervisor_Company_Department_Job_Role_ID;
        partial void OnSupervisor_Company_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnSupervisor_Company_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_ID
        {
            get
            {
                return _Company_ID;
            }
            set
            {
                if (_Company_ID != value)
                {
                    OnCompany_IDChanging(value);
                    ReportPropertyChanging("Company_ID");
                    _Company_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_ID");
                    OnCompany_IDChanged();
                }
            }
        }
        private global::System.Byte _Company_ID;
        partial void OnCompany_IDChanging(global::System.Byte value);
        partial void OnCompany_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                if (_Department_ID != value)
                {
                    OnDepartment_IDChanging(value);
                    ReportPropertyChanging("Department_ID");
                    _Department_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_ID");
                    OnDepartment_IDChanged();
                }
            }
        }
        private global::System.String _Department_ID;
        partial void OnDepartment_IDChanging(global::System.String value);
        partial void OnDepartment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                if (_Job_Role_ID != value)
                {
                    OnJob_Role_IDChanging(value);
                    ReportPropertyChanging("Job_Role_ID");
                    _Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Job_Role_ID");
                    OnJob_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_Name
        {
            get
            {
                return _Location_Name;
            }
            set
            {
                if (_Location_Name != value)
                {
                    OnLocation_NameChanging(value);
                    ReportPropertyChanging("Location_Name");
                    _Location_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_Name");
                    OnLocation_NameChanged();
                }
            }
        }
        private global::System.String _Location_Name;
        partial void OnLocation_NameChanging(global::System.String value);
        partial void OnLocation_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_ID
        {
            get
            {
                return _Location_ID;
            }
            set
            {
                if (_Location_ID != value)
                {
                    OnLocation_IDChanging(value);
                    ReportPropertyChanging("Location_ID");
                    _Location_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_ID");
                    OnLocation_IDChanged();
                }
            }
        }
        private global::System.String _Location_ID;
        partial void OnLocation_IDChanging(global::System.String value);
        partial void OnLocation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_ID
        {
            get
            {
                return _Job_Role_Level_ID;
            }
            set
            {
                if (_Job_Role_Level_ID != value)
                {
                    OnJob_Role_Level_IDChanging(value);
                    ReportPropertyChanging("Job_Role_Level_ID");
                    _Job_Role_Level_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_ID");
                    OnJob_Role_Level_IDChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_ID;
        partial void OnJob_Role_Level_IDChanging(global::System.String value);
        partial void OnJob_Role_Level_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_METRICS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_METRICS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_METRICS object.
        /// </summary>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        /// <param name="metric_Perspective_ID">Initial value of the Metric_Perspective_ID property.</param>
        /// <param name="metric_Perspective_Name">Initial value of the Metric_Perspective_Name property.</param>
        /// <param name="company_Department_Job_Role_ID">Initial value of the Company_Department_Job_Role_ID property.</param>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static VW_METRICS CreateVW_METRICS(global::System.Int32 job_Role_ID, global::System.Int32 metric_Perspective_ID, global::System.String metric_Perspective_Name, global::System.Int32 company_Department_Job_Role_ID, global::System.Int64 metric_ID, global::System.Int32 period_ID)
        {
            VW_METRICS vW_METRICS = new VW_METRICS();
            vW_METRICS.Job_Role_ID = job_Role_ID;
            vW_METRICS.Metric_Perspective_ID = metric_Perspective_ID;
            vW_METRICS.Metric_Perspective_Name = metric_Perspective_Name;
            vW_METRICS.Company_Department_Job_Role_ID = company_Department_Job_Role_ID;
            vW_METRICS.Metric_ID = metric_ID;
            vW_METRICS.Period_ID = period_ID;
            return vW_METRICS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kpi
        {
            get
            {
                return _Kpi;
            }
            set
            {
                OnKpiChanging(value);
                ReportPropertyChanging("Kpi");
                _Kpi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kpi");
                OnKpiChanged();
            }
        }
        private global::System.String _Kpi;
        partial void OnKpiChanging(global::System.String value);
        partial void OnKpiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                if (_Job_Role_ID != value)
                {
                    OnJob_Role_IDChanging(value);
                    ReportPropertyChanging("Job_Role_ID");
                    _Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Job_Role_ID");
                    OnJob_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Metric_Perspective_ID
        {
            get
            {
                return _Metric_Perspective_ID;
            }
            set
            {
                if (_Metric_Perspective_ID != value)
                {
                    OnMetric_Perspective_IDChanging(value);
                    ReportPropertyChanging("Metric_Perspective_ID");
                    _Metric_Perspective_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_Perspective_ID");
                    OnMetric_Perspective_IDChanged();
                }
            }
        }
        private global::System.Int32 _Metric_Perspective_ID;
        partial void OnMetric_Perspective_IDChanging(global::System.Int32 value);
        partial void OnMetric_Perspective_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Metric_Perspective_Name
        {
            get
            {
                return _Metric_Perspective_Name;
            }
            set
            {
                if (_Metric_Perspective_Name != value)
                {
                    OnMetric_Perspective_NameChanging(value);
                    ReportPropertyChanging("Metric_Perspective_Name");
                    _Metric_Perspective_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Metric_Perspective_Name");
                    OnMetric_Perspective_NameChanged();
                }
            }
        }
        private global::System.String _Metric_Perspective_Name;
        partial void OnMetric_Perspective_NameChanging(global::System.String value);
        partial void OnMetric_Perspective_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private Nullable<global::System.Decimal> _Target;
        partial void OnTargetChanging(Nullable<global::System.Decimal> value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company_Department_Job_Role_ID
        {
            get
            {
                return _Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Company_Department_Job_Role_ID != value)
                {
                    OnCompany_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Company_Department_Job_Role_ID");
                    _Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_Department_Job_Role_ID");
                    OnCompany_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Company_Department_Job_Role_ID;
        partial void OnCompany_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnCompany_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                if (_Metric_ID != value)
                {
                    OnMetric_IDChanging(value);
                    ReportPropertyChanging("Metric_ID");
                    _Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_ID");
                    OnMetric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int64 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_PACE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_PACE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_PACE object.
        /// </summary>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="supervisor_ID">Initial value of the Supervisor_ID property.</param>
        /// <param name="appraisal_Date">Initial value of the Appraisal_Date property.</param>
        /// <param name="hod_ID">Initial value of the Hod_ID property.</param>
        /// <param name="pace_ID">Initial value of the Pace_ID property.</param>
        /// <param name="pace_Area_ID">Initial value of the Pace_Area_ID property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="pace_Name">Initial value of the Pace_Name property.</param>
        /// <param name="pace_Description">Initial value of the Pace_Description property.</param>
        /// <param name="status_ID">Initial value of the Status_ID property.</param>
        public static VW_PACE CreateVW_PACE(global::System.Int64 appraisal_Header_ID, global::System.Int32 period_ID, global::System.String staff_ID, global::System.String supervisor_ID, global::System.DateTime appraisal_Date, global::System.String hod_ID, global::System.Int32 pace_ID, global::System.Int32 pace_Area_ID, global::System.Decimal score, global::System.String pace_Name, global::System.String pace_Description, global::System.Byte status_ID)
        {
            VW_PACE vW_PACE = new VW_PACE();
            vW_PACE.Appraisal_Header_ID = appraisal_Header_ID;
            vW_PACE.Period_ID = period_ID;
            vW_PACE.Staff_ID = staff_ID;
            vW_PACE.Supervisor_ID = supervisor_ID;
            vW_PACE.Appraisal_Date = appraisal_Date;
            vW_PACE.Hod_ID = hod_ID;
            vW_PACE.Pace_ID = pace_ID;
            vW_PACE.Pace_Area_ID = pace_Area_ID;
            vW_PACE.Score = score;
            vW_PACE.Pace_Name = pace_Name;
            vW_PACE.Pace_Description = pace_Description;
            vW_PACE.Status_ID = status_ID;
            return vW_PACE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supervisor_ID
        {
            get
            {
                return _Supervisor_ID;
            }
            set
            {
                if (_Supervisor_ID != value)
                {
                    OnSupervisor_IDChanging(value);
                    ReportPropertyChanging("Supervisor_ID");
                    _Supervisor_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Supervisor_ID");
                    OnSupervisor_IDChanged();
                }
            }
        }
        private global::System.String _Supervisor_ID;
        partial void OnSupervisor_IDChanging(global::System.String value);
        partial void OnSupervisor_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Appraisal_Date
        {
            get
            {
                return _Appraisal_Date;
            }
            set
            {
                if (_Appraisal_Date != value)
                {
                    OnAppraisal_DateChanging(value);
                    ReportPropertyChanging("Appraisal_Date");
                    _Appraisal_Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Date");
                    OnAppraisal_DateChanged();
                }
            }
        }
        private global::System.DateTime _Appraisal_Date;
        partial void OnAppraisal_DateChanging(global::System.DateTime value);
        partial void OnAppraisal_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Staff_Response_Date
        {
            get
            {
                return _Staff_Response_Date;
            }
            set
            {
                OnStaff_Response_DateChanging(value);
                ReportPropertyChanging("Staff_Response_Date");
                _Staff_Response_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Staff_Response_Date");
                OnStaff_Response_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Staff_Response_Date;
        partial void OnStaff_Response_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnStaff_Response_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hod_ID
        {
            get
            {
                return _Hod_ID;
            }
            set
            {
                if (_Hod_ID != value)
                {
                    OnHod_IDChanging(value);
                    ReportPropertyChanging("Hod_ID");
                    _Hod_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Hod_ID");
                    OnHod_IDChanged();
                }
            }
        }
        private global::System.String _Hod_ID;
        partial void OnHod_IDChanging(global::System.String value);
        partial void OnHod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Hod_Appraisal_Date
        {
            get
            {
                return _Hod_Appraisal_Date;
            }
            set
            {
                OnHod_Appraisal_DateChanging(value);
                ReportPropertyChanging("Hod_Appraisal_Date");
                _Hod_Appraisal_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hod_Appraisal_Date");
                OnHod_Appraisal_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Hod_Appraisal_Date;
        partial void OnHod_Appraisal_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnHod_Appraisal_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pace_ID
        {
            get
            {
                return _Pace_ID;
            }
            set
            {
                if (_Pace_ID != value)
                {
                    OnPace_IDChanging(value);
                    ReportPropertyChanging("Pace_ID");
                    _Pace_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Pace_ID");
                    OnPace_IDChanged();
                }
            }
        }
        private global::System.Int32 _Pace_ID;
        partial void OnPace_IDChanging(global::System.Int32 value);
        partial void OnPace_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pace_Area_ID
        {
            get
            {
                return _Pace_Area_ID;
            }
            set
            {
                if (_Pace_Area_ID != value)
                {
                    OnPace_Area_IDChanging(value);
                    ReportPropertyChanging("Pace_Area_ID");
                    _Pace_Area_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Pace_Area_ID");
                    OnPace_Area_IDChanged();
                }
            }
        }
        private global::System.Int32 _Pace_Area_ID;
        partial void OnPace_Area_IDChanging(global::System.Int32 value);
        partial void OnPace_Area_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Decimal> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Score
        {
            get
            {
                return _Score;
            }
            set
            {
                if (_Score != value)
                {
                    OnScoreChanging(value);
                    ReportPropertyChanging("Score");
                    _Score = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Score");
                    OnScoreChanged();
                }
            }
        }
        private global::System.Decimal _Score;
        partial void OnScoreChanging(global::System.Decimal value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Justification
        {
            get
            {
                return _Justification;
            }
            set
            {
                OnJustificationChanging(value);
                ReportPropertyChanging("Justification");
                _Justification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Justification");
                OnJustificationChanged();
            }
        }
        private global::System.String _Justification;
        partial void OnJustificationChanging(global::System.String value);
        partial void OnJustificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pace_Name
        {
            get
            {
                return _Pace_Name;
            }
            set
            {
                if (_Pace_Name != value)
                {
                    OnPace_NameChanging(value);
                    ReportPropertyChanging("Pace_Name");
                    _Pace_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Pace_Name");
                    OnPace_NameChanged();
                }
            }
        }
        private global::System.String _Pace_Name;
        partial void OnPace_NameChanging(global::System.String value);
        partial void OnPace_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pace_Description
        {
            get
            {
                return _Pace_Description;
            }
            set
            {
                if (_Pace_Description != value)
                {
                    OnPace_DescriptionChanging(value);
                    ReportPropertyChanging("Pace_Description");
                    _Pace_Description = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Pace_Description");
                    OnPace_DescriptionChanged();
                }
            }
        }
        private global::System.String _Pace_Description;
        partial void OnPace_DescriptionChanging(global::System.String value);
        partial void OnPace_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status_ID
        {
            get
            {
                return _Status_ID;
            }
            set
            {
                if (_Status_ID != value)
                {
                    OnStatus_IDChanging(value);
                    ReportPropertyChanging("Status_ID");
                    _Status_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Status_ID");
                    OnStatus_IDChanged();
                }
            }
        }
        private global::System.Byte _Status_ID;
        partial void OnStatus_IDChanging(global::System.Byte value);
        partial void OnStatus_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_REPORT_METRICS_SCORE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_REPORT_METRICS_SCORE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_REPORT_METRICS_SCORE object.
        /// </summary>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="staff_Metric_ID">Initial value of the Staff_Metric_ID property.</param>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        public static VW_REPORT_METRICS_SCORE CreateVW_REPORT_METRICS_SCORE(global::System.Int64 appraisal_Header_ID, global::System.Int64 staff_Metric_ID, global::System.Int64 metric_ID)
        {
            VW_REPORT_METRICS_SCORE vW_REPORT_METRICS_SCORE = new VW_REPORT_METRICS_SCORE();
            vW_REPORT_METRICS_SCORE.Appraisal_Header_ID = appraisal_Header_ID;
            vW_REPORT_METRICS_SCORE.Staff_Metric_ID = staff_Metric_ID;
            vW_REPORT_METRICS_SCORE.Metric_ID = metric_ID;
            return vW_REPORT_METRICS_SCORE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Staff_Metric_ID
        {
            get
            {
                return _Staff_Metric_ID;
            }
            set
            {
                if (_Staff_Metric_ID != value)
                {
                    OnStaff_Metric_IDChanging(value);
                    ReportPropertyChanging("Staff_Metric_ID");
                    _Staff_Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Metric_ID");
                    OnStaff_Metric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Staff_Metric_ID;
        partial void OnStaff_Metric_IDChanging(global::System.Int64 value);
        partial void OnStaff_Metric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                if (_Metric_ID != value)
                {
                    OnMetric_IDChanging(value);
                    ReportPropertyChanging("Metric_ID");
                    _Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_ID");
                    OnMetric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int64 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Raw_Score
        {
            get
            {
                return _Raw_Score;
            }
            set
            {
                OnRaw_ScoreChanging(value);
                ReportPropertyChanging("Raw_Score");
                _Raw_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Raw_Score");
                OnRaw_ScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Raw_Score;
        partial void OnRaw_ScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnRaw_ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Raw_Score_Rating
        {
            get
            {
                return _Raw_Score_Rating;
            }
            set
            {
                OnRaw_Score_RatingChanging(value);
                ReportPropertyChanging("Raw_Score_Rating");
                _Raw_Score_Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Raw_Score_Rating");
                OnRaw_Score_RatingChanged();
            }
        }
        private Nullable<global::System.Byte> _Raw_Score_Rating;
        partial void OnRaw_Score_RatingChanging(Nullable<global::System.Byte> value);
        partial void OnRaw_Score_RatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Metric_Weight
        {
            get
            {
                return _Metric_Weight;
            }
            set
            {
                OnMetric_WeightChanging(value);
                ReportPropertyChanging("Metric_Weight");
                _Metric_Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Metric_Weight");
                OnMetric_WeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Metric_Weight;
        partial void OnMetric_WeightChanging(Nullable<global::System.Decimal> value);
        partial void OnMetric_WeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Final_Score
        {
            get
            {
                return _Final_Score;
            }
            set
            {
                OnFinal_ScoreChanging(value);
                ReportPropertyChanging("Final_Score");
                _Final_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Final_Score");
                OnFinal_ScoreChanged();
            }
        }
        private Nullable<global::System.Double> _Final_Score;
        partial void OnFinal_ScoreChanging(Nullable<global::System.Double> value);
        partial void OnFinal_ScoreChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_REPORT_METRICS_SCORE_SUMMARY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_REPORT_METRICS_SCORE_SUMMARY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_REPORT_METRICS_SCORE_SUMMARY object.
        /// </summary>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        public static VW_REPORT_METRICS_SCORE_SUMMARY CreateVW_REPORT_METRICS_SCORE_SUMMARY(global::System.Int64 appraisal_Header_ID, global::System.String staff_ID)
        {
            VW_REPORT_METRICS_SCORE_SUMMARY vW_REPORT_METRICS_SCORE_SUMMARY = new VW_REPORT_METRICS_SCORE_SUMMARY();
            vW_REPORT_METRICS_SCORE_SUMMARY.Appraisal_Header_ID = appraisal_Header_ID;
            vW_REPORT_METRICS_SCORE_SUMMARY.Staff_ID = staff_ID;
            return vW_REPORT_METRICS_SCORE_SUMMARY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Double> _Score;
        partial void OnScoreChanging(Nullable<global::System.Double> value);
        partial void OnScoreChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_REPORT_PACE_SCORE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_REPORT_PACE_SCORE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_REPORT_PACE_SCORE object.
        /// </summary>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        public static VW_REPORT_PACE_SCORE CreateVW_REPORT_PACE_SCORE(global::System.Int64 appraisal_Header_ID)
        {
            VW_REPORT_PACE_SCORE vW_REPORT_PACE_SCORE = new VW_REPORT_PACE_SCORE();
            vW_REPORT_PACE_SCORE.Appraisal_Header_ID = appraisal_Header_ID;
            return vW_REPORT_PACE_SCORE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Pace_Score
        {
            get
            {
                return _Pace_Score;
            }
            set
            {
                OnPace_ScoreChanging(value);
                ReportPropertyChanging("Pace_Score");
                _Pace_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pace_Score");
                OnPace_ScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Pace_Score;
        partial void OnPace_ScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnPace_ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Pace_Count
        {
            get
            {
                return _Pace_Count;
            }
            set
            {
                OnPace_CountChanging(value);
                ReportPropertyChanging("Pace_Count");
                _Pace_Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pace_Count");
                OnPace_CountChanged();
            }
        }
        private Nullable<global::System.Int32> _Pace_Count;
        partial void OnPace_CountChanging(Nullable<global::System.Int32> value);
        partial void OnPace_CountChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_SATFF_METRIC_RATING")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_SATFF_METRIC_RATING : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_SATFF_METRIC_RATING object.
        /// </summary>
        /// <param name="raw_Score_Rating">Initial value of the Raw_Score_Rating property.</param>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="staff_Metric_ID">Initial value of the Staff_Metric_ID property.</param>
        public static VW_SATFF_METRIC_RATING CreateVW_SATFF_METRIC_RATING(global::System.Byte raw_Score_Rating, global::System.Int64 appraisal_Header_ID, global::System.Int64 metric_ID, global::System.Decimal from, global::System.Decimal to, global::System.Int64 staff_Metric_ID)
        {
            VW_SATFF_METRIC_RATING vW_SATFF_METRIC_RATING = new VW_SATFF_METRIC_RATING();
            vW_SATFF_METRIC_RATING.Raw_Score_Rating = raw_Score_Rating;
            vW_SATFF_METRIC_RATING.Appraisal_Header_ID = appraisal_Header_ID;
            vW_SATFF_METRIC_RATING.Metric_ID = metric_ID;
            vW_SATFF_METRIC_RATING.From = from;
            vW_SATFF_METRIC_RATING.To = to;
            vW_SATFF_METRIC_RATING.Staff_Metric_ID = staff_Metric_ID;
            return vW_SATFF_METRIC_RATING;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Raw_Score_Rating
        {
            get
            {
                return _Raw_Score_Rating;
            }
            set
            {
                if (_Raw_Score_Rating != value)
                {
                    OnRaw_Score_RatingChanging(value);
                    ReportPropertyChanging("Raw_Score_Rating");
                    _Raw_Score_Rating = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Raw_Score_Rating");
                    OnRaw_Score_RatingChanged();
                }
            }
        }
        private global::System.Byte _Raw_Score_Rating;
        partial void OnRaw_Score_RatingChanging(global::System.Byte value);
        partial void OnRaw_Score_RatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Raw_Score
        {
            get
            {
                return _Raw_Score;
            }
            set
            {
                OnRaw_ScoreChanging(value);
                ReportPropertyChanging("Raw_Score");
                _Raw_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Raw_Score");
                OnRaw_ScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Raw_Score;
        partial void OnRaw_ScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnRaw_ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                if (_Metric_ID != value)
                {
                    OnMetric_IDChanging(value);
                    ReportPropertyChanging("Metric_ID");
                    _Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_ID");
                    OnMetric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int64 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal From
        {
            get
            {
                return _From;
            }
            set
            {
                if (_From != value)
                {
                    OnFromChanging(value);
                    ReportPropertyChanging("From");
                    _From = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("From");
                    OnFromChanged();
                }
            }
        }
        private global::System.Decimal _From;
        partial void OnFromChanging(global::System.Decimal value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal To
        {
            get
            {
                return _To;
            }
            set
            {
                if (_To != value)
                {
                    OnToChanging(value);
                    ReportPropertyChanging("To");
                    _To = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("To");
                    OnToChanged();
                }
            }
        }
        private global::System.Decimal _To;
        partial void OnToChanging(global::System.Decimal value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Staff_Metric_ID
        {
            get
            {
                return _Staff_Metric_ID;
            }
            set
            {
                if (_Staff_Metric_ID != value)
                {
                    OnStaff_Metric_IDChanging(value);
                    ReportPropertyChanging("Staff_Metric_ID");
                    _Staff_Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Metric_ID");
                    OnStaff_Metric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Staff_Metric_ID;
        partial void OnStaff_Metric_IDChanging(global::System.Int64 value);
        partial void OnStaff_Metric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Metric_Weight
        {
            get
            {
                return _Metric_Weight;
            }
            set
            {
                OnMetric_WeightChanging(value);
                ReportPropertyChanging("Metric_Weight");
                _Metric_Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Metric_Weight");
                OnMetric_WeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Metric_Weight;
        partial void OnMetric_WeightChanging(Nullable<global::System.Decimal> value);
        partial void OnMetric_WeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Final_Score
        {
            get
            {
                return _Final_Score;
            }
            set
            {
                OnFinal_ScoreChanging(value);
                ReportPropertyChanging("Final_Score");
                _Final_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Final_Score");
                OnFinal_ScoreChanged();
            }
        }
        private Nullable<global::System.Double> _Final_Score;
        partial void OnFinal_ScoreChanging(Nullable<global::System.Double> value);
        partial void OnFinal_ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Max_Rating
        {
            get
            {
                return _Max_Rating;
            }
            set
            {
                OnMax_RatingChanging(value);
                ReportPropertyChanging("Max_Rating");
                _Max_Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Max_Rating");
                OnMax_RatingChanged();
            }
        }
        private Nullable<global::System.Byte> _Max_Rating;
        partial void OnMax_RatingChanging(Nullable<global::System.Byte> value);
        partial void OnMax_RatingChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_STAFF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_STAFF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_STAFF object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="last_Name">Initial value of the Last_Name property.</param>
        /// <param name="first_Name">Initial value of the First_Name property.</param>
        /// <param name="login_Name">Initial value of the Login_Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="company_Name">Initial value of the Company_Name property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="job_Role_Name">Initial value of the Job_Role_Name property.</param>
        /// <param name="job_Role_Level_Name">Initial value of the Job_Role_Level_Name property.</param>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        /// <param name="department_ID">Initial value of the Department_ID property.</param>
        /// <param name="company_ID">Initial value of the Company_ID property.</param>
        /// <param name="location_Name">Initial value of the Location_Name property.</param>
        /// <param name="location_ID">Initial value of the Location_ID property.</param>
        /// <param name="company_Department_Job_Role_ID">Initial value of the Company_Department_Job_Role_ID property.</param>
        /// <param name="job_Role_Level_ID">Initial value of the Job_Role_Level_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        /// <param name="role_Id">Initial value of the Role_Id property.</param>
        public static VW_STAFF CreateVW_STAFF(global::System.String staff_ID, global::System.String last_Name, global::System.String first_Name, global::System.String login_Name, global::System.String email, global::System.String company_Name, global::System.String department_Name, global::System.String job_Role_Name, global::System.String job_Role_Level_Name, global::System.Int32 job_Role_ID, global::System.String department_ID, global::System.Byte company_ID, global::System.String location_Name, global::System.String location_ID, global::System.Int32 company_Department_Job_Role_ID, global::System.String job_Role_Level_ID, global::System.Int32 period_ID, global::System.Int32 role_Id)
        {
            VW_STAFF vW_STAFF = new VW_STAFF();
            vW_STAFF.Staff_ID = staff_ID;
            vW_STAFF.Last_Name = last_Name;
            vW_STAFF.First_Name = first_Name;
            vW_STAFF.Login_Name = login_Name;
            vW_STAFF.Email = email;
            vW_STAFF.Company_Name = company_Name;
            vW_STAFF.Department_Name = department_Name;
            vW_STAFF.Job_Role_Name = job_Role_Name;
            vW_STAFF.Job_Role_Level_Name = job_Role_Level_Name;
            vW_STAFF.Job_Role_ID = job_Role_ID;
            vW_STAFF.Department_ID = department_ID;
            vW_STAFF.Company_ID = company_ID;
            vW_STAFF.Location_Name = location_Name;
            vW_STAFF.Location_ID = location_ID;
            vW_STAFF.Company_Department_Job_Role_ID = company_Department_Job_Role_ID;
            vW_STAFF.Job_Role_Level_ID = job_Role_Level_ID;
            vW_STAFF.Period_ID = period_ID;
            vW_STAFF.Role_Id = role_Id;
            return vW_STAFF;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Last_Name
        {
            get
            {
                return _Last_Name;
            }
            set
            {
                if (_Last_Name != value)
                {
                    OnLast_NameChanging(value);
                    ReportPropertyChanging("Last_Name");
                    _Last_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Last_Name");
                    OnLast_NameChanged();
                }
            }
        }
        private global::System.String _Last_Name;
        partial void OnLast_NameChanging(global::System.String value);
        partial void OnLast_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String First_Name
        {
            get
            {
                return _First_Name;
            }
            set
            {
                if (_First_Name != value)
                {
                    OnFirst_NameChanging(value);
                    ReportPropertyChanging("First_Name");
                    _First_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("First_Name");
                    OnFirst_NameChanged();
                }
            }
        }
        private global::System.String _First_Name;
        partial void OnFirst_NameChanging(global::System.String value);
        partial void OnFirst_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Other_Name
        {
            get
            {
                return _Other_Name;
            }
            set
            {
                OnOther_NameChanging(value);
                ReportPropertyChanging("Other_Name");
                _Other_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Other_Name");
                OnOther_NameChanged();
            }
        }
        private global::System.String _Other_Name;
        partial void OnOther_NameChanging(global::System.String value);
        partial void OnOther_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login_Name
        {
            get
            {
                return _Login_Name;
            }
            set
            {
                if (_Login_Name != value)
                {
                    OnLogin_NameChanging(value);
                    ReportPropertyChanging("Login_Name");
                    _Login_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Login_Name");
                    OnLogin_NameChanged();
                }
            }
        }
        private global::System.String _Login_Name;
        partial void OnLogin_NameChanging(global::System.String value);
        partial void OnLogin_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Company_Name
        {
            get
            {
                return _Company_Name;
            }
            set
            {
                if (_Company_Name != value)
                {
                    OnCompany_NameChanging(value);
                    ReportPropertyChanging("Company_Name");
                    _Company_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Company_Name");
                    OnCompany_NameChanged();
                }
            }
        }
        private global::System.String _Company_Name;
        partial void OnCompany_NameChanging(global::System.String value);
        partial void OnCompany_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Name
        {
            get
            {
                return _Job_Role_Name;
            }
            set
            {
                if (_Job_Role_Name != value)
                {
                    OnJob_Role_NameChanging(value);
                    ReportPropertyChanging("Job_Role_Name");
                    _Job_Role_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Name");
                    OnJob_Role_NameChanged();
                }
            }
        }
        private global::System.String _Job_Role_Name;
        partial void OnJob_Role_NameChanging(global::System.String value);
        partial void OnJob_Role_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_Name
        {
            get
            {
                return _Job_Role_Level_Name;
            }
            set
            {
                if (_Job_Role_Level_Name != value)
                {
                    OnJob_Role_Level_NameChanging(value);
                    ReportPropertyChanging("Job_Role_Level_Name");
                    _Job_Role_Level_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_Name");
                    OnJob_Role_Level_NameChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_Name;
        partial void OnJob_Role_Level_NameChanging(global::System.String value);
        partial void OnJob_Role_Level_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                if (_Job_Role_ID != value)
                {
                    OnJob_Role_IDChanging(value);
                    ReportPropertyChanging("Job_Role_ID");
                    _Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Job_Role_ID");
                    OnJob_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                if (_Department_ID != value)
                {
                    OnDepartment_IDChanging(value);
                    ReportPropertyChanging("Department_ID");
                    _Department_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_ID");
                    OnDepartment_IDChanged();
                }
            }
        }
        private global::System.String _Department_ID;
        partial void OnDepartment_IDChanging(global::System.String value);
        partial void OnDepartment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Company_ID
        {
            get
            {
                return _Company_ID;
            }
            set
            {
                if (_Company_ID != value)
                {
                    OnCompany_IDChanging(value);
                    ReportPropertyChanging("Company_ID");
                    _Company_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_ID");
                    OnCompany_IDChanged();
                }
            }
        }
        private global::System.Byte _Company_ID;
        partial void OnCompany_IDChanging(global::System.Byte value);
        partial void OnCompany_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_Name
        {
            get
            {
                return _Location_Name;
            }
            set
            {
                if (_Location_Name != value)
                {
                    OnLocation_NameChanging(value);
                    ReportPropertyChanging("Location_Name");
                    _Location_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_Name");
                    OnLocation_NameChanged();
                }
            }
        }
        private global::System.String _Location_Name;
        partial void OnLocation_NameChanging(global::System.String value);
        partial void OnLocation_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Is_Active
        {
            get
            {
                return _Is_Active;
            }
            set
            {
                OnIs_ActiveChanging(value);
                ReportPropertyChanging("Is_Active");
                _Is_Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is_Active");
                OnIs_ActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Is_Active;
        partial void OnIs_ActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIs_ActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location_ID
        {
            get
            {
                return _Location_ID;
            }
            set
            {
                if (_Location_ID != value)
                {
                    OnLocation_IDChanging(value);
                    ReportPropertyChanging("Location_ID");
                    _Location_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location_ID");
                    OnLocation_IDChanged();
                }
            }
        }
        private global::System.String _Location_ID;
        partial void OnLocation_IDChanging(global::System.String value);
        partial void OnLocation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company_Department_Job_Role_ID
        {
            get
            {
                return _Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Company_Department_Job_Role_ID != value)
                {
                    OnCompany_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Company_Department_Job_Role_ID");
                    _Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_Department_Job_Role_ID");
                    OnCompany_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Company_Department_Job_Role_ID;
        partial void OnCompany_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnCompany_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job_Role_Level_ID
        {
            get
            {
                return _Job_Role_Level_ID;
            }
            set
            {
                if (_Job_Role_Level_ID != value)
                {
                    OnJob_Role_Level_IDChanging(value);
                    ReportPropertyChanging("Job_Role_Level_ID");
                    _Job_Role_Level_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Job_Role_Level_ID");
                    OnJob_Role_Level_IDChanged();
                }
            }
        }
        private global::System.String _Job_Role_Level_ID;
        partial void OnJob_Role_Level_IDChanging(global::System.String value);
        partial void OnJob_Role_Level_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Role_Id
        {
            get
            {
                return _Role_Id;
            }
            set
            {
                if (_Role_Id != value)
                {
                    OnRole_IdChanging(value);
                    ReportPropertyChanging("Role_Id");
                    _Role_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Role_Id");
                    OnRole_IdChanged();
                }
            }
        }
        private global::System.Int32 _Role_Id;
        partial void OnRole_IdChanging(global::System.Int32 value);
        partial void OnRole_IdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_STAFF_INPS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_STAFF_INPS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_STAFF_INPS object.
        /// </summary>
        /// <param name="inps_ID">Initial value of the Inps_ID property.</param>
        /// <param name="inps_Type_Id">Initial value of the Inps_Type_Id property.</param>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static VW_STAFF_INPS CreateVW_STAFF_INPS(global::System.Int64 inps_ID, global::System.Int32 inps_Type_Id, global::System.String staff_ID, global::System.Int32 period_ID)
        {
            VW_STAFF_INPS vW_STAFF_INPS = new VW_STAFF_INPS();
            vW_STAFF_INPS.Inps_ID = inps_ID;
            vW_STAFF_INPS.Inps_Type_Id = inps_Type_Id;
            vW_STAFF_INPS.Staff_ID = staff_ID;
            vW_STAFF_INPS.Period_ID = period_ID;
            return vW_STAFF_INPS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Inps_ID
        {
            get
            {
                return _Inps_ID;
            }
            set
            {
                if (_Inps_ID != value)
                {
                    OnInps_IDChanging(value);
                    ReportPropertyChanging("Inps_ID");
                    _Inps_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Inps_ID");
                    OnInps_IDChanged();
                }
            }
        }
        private global::System.Int64 _Inps_ID;
        partial void OnInps_IDChanging(global::System.Int64 value);
        partial void OnInps_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Inps_Type_Id
        {
            get
            {
                return _Inps_Type_Id;
            }
            set
            {
                if (_Inps_Type_Id != value)
                {
                    OnInps_Type_IdChanging(value);
                    ReportPropertyChanging("Inps_Type_Id");
                    _Inps_Type_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Inps_Type_Id");
                    OnInps_Type_IdChanged();
                }
            }
        }
        private global::System.Int32 _Inps_Type_Id;
        partial void OnInps_Type_IdChanging(global::System.Int32 value);
        partial void OnInps_Type_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private Nullable<global::System.Decimal> _Target;
        partial void OnTargetChanging(Nullable<global::System.Decimal> value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Raw_Score_Rating
        {
            get
            {
                return _Raw_Score_Rating;
            }
            set
            {
                OnRaw_Score_RatingChanging(value);
                ReportPropertyChanging("Raw_Score_Rating");
                _Raw_Score_Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Raw_Score_Rating");
                OnRaw_Score_RatingChanged();
            }
        }
        private Nullable<global::System.Byte> _Raw_Score_Rating;
        partial void OnRaw_Score_RatingChanging(Nullable<global::System.Byte> value);
        partial void OnRaw_Score_RatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Max_Rating
        {
            get
            {
                return _Max_Rating;
            }
            set
            {
                OnMax_RatingChanging(value);
                ReportPropertyChanging("Max_Rating");
                _Max_Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Max_Rating");
                OnMax_RatingChanged();
            }
        }
        private Nullable<global::System.Byte> _Max_Rating;
        partial void OnMax_RatingChanging(Nullable<global::System.Byte> value);
        partial void OnMax_RatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Final_Score
        {
            get
            {
                return _Final_Score;
            }
            set
            {
                OnFinal_ScoreChanging(value);
                ReportPropertyChanging("Final_Score");
                _Final_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Final_Score");
                OnFinal_ScoreChanged();
            }
        }
        private Nullable<global::System.Double> _Final_Score;
        partial void OnFinal_ScoreChanging(Nullable<global::System.Double> value);
        partial void OnFinal_ScoreChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_STAFF_INPS_SUMMARY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_STAFF_INPS_SUMMARY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_STAFF_INPS_SUMMARY object.
        /// </summary>
        /// <param name="staff_ID">Initial value of the Staff_ID property.</param>
        /// <param name="period_ID">Initial value of the Period_ID property.</param>
        public static VW_STAFF_INPS_SUMMARY CreateVW_STAFF_INPS_SUMMARY(global::System.String staff_ID, global::System.Int32 period_ID)
        {
            VW_STAFF_INPS_SUMMARY vW_STAFF_INPS_SUMMARY = new VW_STAFF_INPS_SUMMARY();
            vW_STAFF_INPS_SUMMARY.Staff_ID = staff_ID;
            vW_STAFF_INPS_SUMMARY.Period_ID = period_ID;
            return vW_STAFF_INPS_SUMMARY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Staff_ID
        {
            get
            {
                return _Staff_ID;
            }
            set
            {
                if (_Staff_ID != value)
                {
                    OnStaff_IDChanging(value);
                    ReportPropertyChanging("Staff_ID");
                    _Staff_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Staff_ID");
                    OnStaff_IDChanged();
                }
            }
        }
        private global::System.String _Staff_ID;
        partial void OnStaff_IDChanging(global::System.String value);
        partial void OnStaff_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period_ID
        {
            get
            {
                return _Period_ID;
            }
            set
            {
                if (_Period_ID != value)
                {
                    OnPeriod_IDChanging(value);
                    ReportPropertyChanging("Period_ID");
                    _Period_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period_ID");
                    OnPeriod_IDChanged();
                }
            }
        }
        private global::System.Int32 _Period_ID;
        partial void OnPeriod_IDChanging(global::System.Int32 value);
        partial void OnPeriod_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Final_Score
        {
            get
            {
                return _Final_Score;
            }
            set
            {
                OnFinal_ScoreChanging(value);
                ReportPropertyChanging("Final_Score");
                _Final_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Final_Score");
                OnFinal_ScoreChanged();
            }
        }
        private Nullable<global::System.Double> _Final_Score;
        partial void OnFinal_ScoreChanging(Nullable<global::System.Double> value);
        partial void OnFinal_ScoreChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MangoModel", Name="VW_STAFF_METRICS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VW_STAFF_METRICS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VW_STAFF_METRICS object.
        /// </summary>
        /// <param name="job_Role_ID">Initial value of the Job_Role_ID property.</param>
        /// <param name="metric_Perspective_ID">Initial value of the Metric_Perspective_ID property.</param>
        /// <param name="metric_Perspective_Name">Initial value of the Metric_Perspective_Name property.</param>
        /// <param name="company_Department_Job_Role_ID">Initial value of the Company_Department_Job_Role_ID property.</param>
        /// <param name="staff_Metric_ID">Initial value of the Staff_Metric_ID property.</param>
        /// <param name="appraisal_Header_ID">Initial value of the Appraisal_Header_ID property.</param>
        /// <param name="metric_ID">Initial value of the Metric_ID property.</param>
        public static VW_STAFF_METRICS CreateVW_STAFF_METRICS(global::System.Int32 job_Role_ID, global::System.Int32 metric_Perspective_ID, global::System.String metric_Perspective_Name, global::System.Int32 company_Department_Job_Role_ID, global::System.Int64 staff_Metric_ID, global::System.Int64 appraisal_Header_ID, global::System.Int64 metric_ID)
        {
            VW_STAFF_METRICS vW_STAFF_METRICS = new VW_STAFF_METRICS();
            vW_STAFF_METRICS.Job_Role_ID = job_Role_ID;
            vW_STAFF_METRICS.Metric_Perspective_ID = metric_Perspective_ID;
            vW_STAFF_METRICS.Metric_Perspective_Name = metric_Perspective_Name;
            vW_STAFF_METRICS.Company_Department_Job_Role_ID = company_Department_Job_Role_ID;
            vW_STAFF_METRICS.Staff_Metric_ID = staff_Metric_ID;
            vW_STAFF_METRICS.Appraisal_Header_ID = appraisal_Header_ID;
            vW_STAFF_METRICS.Metric_ID = metric_ID;
            return vW_STAFF_METRICS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kpi
        {
            get
            {
                return _Kpi;
            }
            set
            {
                OnKpiChanging(value);
                ReportPropertyChanging("Kpi");
                _Kpi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kpi");
                OnKpiChanged();
            }
        }
        private global::System.String _Kpi;
        partial void OnKpiChanging(global::System.String value);
        partial void OnKpiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Job_Role_ID
        {
            get
            {
                return _Job_Role_ID;
            }
            set
            {
                if (_Job_Role_ID != value)
                {
                    OnJob_Role_IDChanging(value);
                    ReportPropertyChanging("Job_Role_ID");
                    _Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Job_Role_ID");
                    OnJob_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Job_Role_ID;
        partial void OnJob_Role_IDChanging(global::System.Int32 value);
        partial void OnJob_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Metric_Perspective_ID
        {
            get
            {
                return _Metric_Perspective_ID;
            }
            set
            {
                if (_Metric_Perspective_ID != value)
                {
                    OnMetric_Perspective_IDChanging(value);
                    ReportPropertyChanging("Metric_Perspective_ID");
                    _Metric_Perspective_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_Perspective_ID");
                    OnMetric_Perspective_IDChanged();
                }
            }
        }
        private global::System.Int32 _Metric_Perspective_ID;
        partial void OnMetric_Perspective_IDChanging(global::System.Int32 value);
        partial void OnMetric_Perspective_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Metric_Perspective_Name
        {
            get
            {
                return _Metric_Perspective_Name;
            }
            set
            {
                if (_Metric_Perspective_Name != value)
                {
                    OnMetric_Perspective_NameChanging(value);
                    ReportPropertyChanging("Metric_Perspective_Name");
                    _Metric_Perspective_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Metric_Perspective_Name");
                    OnMetric_Perspective_NameChanged();
                }
            }
        }
        private global::System.String _Metric_Perspective_Name;
        partial void OnMetric_Perspective_NameChanging(global::System.String value);
        partial void OnMetric_Perspective_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private Nullable<global::System.Decimal> _Target;
        partial void OnTargetChanging(Nullable<global::System.Decimal> value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company_Department_Job_Role_ID
        {
            get
            {
                return _Company_Department_Job_Role_ID;
            }
            set
            {
                if (_Company_Department_Job_Role_ID != value)
                {
                    OnCompany_Department_Job_Role_IDChanging(value);
                    ReportPropertyChanging("Company_Department_Job_Role_ID");
                    _Company_Department_Job_Role_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_Department_Job_Role_ID");
                    OnCompany_Department_Job_Role_IDChanged();
                }
            }
        }
        private global::System.Int32 _Company_Department_Job_Role_ID;
        partial void OnCompany_Department_Job_Role_IDChanging(global::System.Int32 value);
        partial void OnCompany_Department_Job_Role_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Staff_Metric_ID
        {
            get
            {
                return _Staff_Metric_ID;
            }
            set
            {
                if (_Staff_Metric_ID != value)
                {
                    OnStaff_Metric_IDChanging(value);
                    ReportPropertyChanging("Staff_Metric_ID");
                    _Staff_Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Staff_Metric_ID");
                    OnStaff_Metric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Staff_Metric_ID;
        partial void OnStaff_Metric_IDChanging(global::System.Int64 value);
        partial void OnStaff_Metric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Appraisal_Header_ID
        {
            get
            {
                return _Appraisal_Header_ID;
            }
            set
            {
                if (_Appraisal_Header_ID != value)
                {
                    OnAppraisal_Header_IDChanging(value);
                    ReportPropertyChanging("Appraisal_Header_ID");
                    _Appraisal_Header_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Appraisal_Header_ID");
                    OnAppraisal_Header_IDChanged();
                }
            }
        }
        private global::System.Int64 _Appraisal_Header_ID;
        partial void OnAppraisal_Header_IDChanging(global::System.Int64 value);
        partial void OnAppraisal_Header_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Metric_ID
        {
            get
            {
                return _Metric_ID;
            }
            set
            {
                if (_Metric_ID != value)
                {
                    OnMetric_IDChanging(value);
                    ReportPropertyChanging("Metric_ID");
                    _Metric_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Metric_ID");
                    OnMetric_IDChanged();
                }
            }
        }
        private global::System.Int64 _Metric_ID;
        partial void OnMetric_IDChanging(global::System.Int64 value);
        partial void OnMetric_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Metric_Score
        {
            get
            {
                return _Metric_Score;
            }
            set
            {
                OnMetric_ScoreChanging(value);
                ReportPropertyChanging("Metric_Score");
                _Metric_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Metric_Score");
                OnMetric_ScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Metric_Score;
        partial void OnMetric_ScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnMetric_ScoreChanged();

        #endregion

    
    }

    #endregion

    
}
